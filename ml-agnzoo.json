{"version":2,"kind":"Notebook","sha256":"ab7a59432031eb9664ff2454e544791f7ec1b48bd3852e0fe3b394e5d207498d","slug":"ml-agnzoo","location":"/light_curves/ML_AGNzoo.md","dependencies":[],"frontmatter":{"title":"AGN Zoo: Comparison of AGN selected with different metrics","kernelspec":{"name":"python3","display_name":"py-ml_agnzoo","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.16.4"}},"content_includes_title":false,"authors":[{"id":"Fornax developers and scientists","name":"Fornax developers and scientists"}],"github":"https://github.com/nasa-fornax/fornax-demo-notebooks","subject":"Fornax Demo Notebooks","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/nasa-fornax/fornax-demo-notebooks/blob/main/light_curves/ML_AGNzoo.md","exports":[{"format":"md","filename":"ML_AGNzoo.md","url":"/fornax-demo-notebooks/build/ML_AGNzoo-e3f3b2e5d24b7226eb75ecd8ec7a1cf7.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Learning Goals","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"gRRQwcPQE9"}],"identifier":"learning-goals","label":"Learning Goals","html_id":"learning-goals","implicit":true,"key":"xkpLAFstWu"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"By the end of this tutorial, you will:","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"lNHgXoYyn8"}],"key":"xruM7Gw65R"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":20,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Work with multi-band lightcurve data","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"VOsqnUQJsn"}],"key":"XrVfdEx5dT"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Learn high dimensional manifold of light curves with UMAPs and SOMs","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"NLB0e3SjFb"}],"key":"iFn9MiFBem"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Visualize and compare different samples on reduced dimension projections/grids","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"avJ77kvi5v"}],"key":"G0vBe1SxjD"}],"key":"wdQvhMwFAl"},{"type":"heading","depth":2,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"SZQBcBO45y"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"DlvINLlOuW"},{"type":"paragraph","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Active Galactic Nuclei (AGNs), some of the most powerful sources in the universe, emit a broad range of electromagnetic radiation, from radio waves to gamma rays. Consequently, there is a wide variety of AGN labels depending on the identification/selection scheme and the presence or absence of certain emissions (e.g., Radio loud/quiet, Quasars, Blazars, Seiferts, Changing looks). According to the unified model, this zoo of labels we see depend on a limited number of parameters, namely the viewing angle, the accretion rate, presence or lack of jets, and perhaps the properties of the host/environment (e.g., ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"TzkJ4MTUjq"},{"type":"link","url":"https://arxiv.org/pdf/1707.07134.pdf","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Padovani et al. 2017","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"gxbhqrtrIs"}],"urlSource":"https://arxiv.org/pdf/1707.07134.pdf","key":"bjXafkmw4M"},{"type":"text","value":"). Here, we collect archival photometry and labels from the literature to compare how some of these different labels/selection schemes compare.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"JnekrdYBVp"}],"key":"aYCK68R5ET"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"We use manifold learning and dimensionality reduction to learn the distribution of AGN lightcurves observed with different facilities. We mostly focus on UMAP (","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"HpebNuWKXA"},{"type":"link","url":"https://arxiv.org/pdf/1802.03426.pdf","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Uniform Manifold Approximation and Projection, McInnes 2020","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"K6QDmzw0qc"}],"urlSource":"https://arxiv.org/pdf/1802.03426.pdf","key":"OgzsmSyDgA"},{"type":"text","value":") but also show SOM (","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"WE7ll6dk4H"},{"type":"link","url":"https://ieeexplore.ieee.org/document/58325","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Self organizing Map, Kohonen 1990","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"ztNsoJTW4l"}],"urlSource":"https://ieeexplore.ieee.org/document/58325","key":"jDMF7HWflk"},{"type":"text","value":") examples. The reduced 2D projections from these two unsupervised ML techniques reveal similarities and overlaps of different selection techniques. Coloring the projections with various statistical physical properties (e.g., mean brightness, fractional lightcurve variation) is informative of correlations of the selections technique with physics such as AGN variability. Using different parts of the EM in training (or in building the initial higher dimensional manifold) demonstrates how much information if any is in that part of the data for each labeling scheme, for example whether with ZTF optical light curves alone, we can identify sources with variability in WISE near IR bands. These techniques also have a potential for identifying targets of a specific class or characteristic for future follow up observations.","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"gDfCDgTjrj"}],"key":"oAv8eJWx5M"},{"type":"heading","depth":3,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Runtime","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"OAOzHDoE7K"}],"identifier":"runtime","label":"Runtime","html_id":"runtime","implicit":true,"key":"gymuFXANtU"},{"type":"paragraph","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"As of 2024 September, this notebook takes ~160s to run to completion (after installs and imports) on Fornax using the ‘Astrophysics Default Image’ environment and the ‘Large’ server with 16GB RAM/ 4CPU.","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"YD1t90Htxo"}],"key":"B6JImM7HNn"},{"type":"heading","depth":2,"position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"zmVpJzfDhR"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"OfQuTeASXf"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Here are the libraries used in this network. They are also mostly mentioned in the requirements in case you don’t have them installed.","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"W12vGQqLqp"}],"key":"ihP5J61FYH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":37,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"sys","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"ummB9CbXCa"}],"key":"K2Kt5RteQw"},{"type":"text","value":" and ","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"hkF6AG868d"},{"type":"emphasis","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"os","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"C2T7F4l1Cn"}],"key":"tkjORajfpL"},{"type":"text","value":" to handle file names, paths, and directories","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"zktgTwFCtm"}],"key":"Fns70gMC4x"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"numpy","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"yTaMwD5Uip"}],"key":"iBFk0ZZrhq"},{"type":"text","value":"  and ","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"bvugF2MyGM"},{"type":"emphasis","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"pandas","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"VQXq85de9c"}],"key":"cgbfedqIgB"},{"type":"text","value":" to handle array functions","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"QwTJSqODwb"}],"key":"dKTKM5AFPa"},{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"matplotlib","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"M6zKI3LvUq"}],"key":"JZSnZFCJA0"},{"type":"text","value":" ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"VF7vNTQLbd"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"pyplot","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"iEAjFc8klL"}],"key":"TI7EM5pD7c"},{"type":"text","value":" and ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"OiqLp5V1SH"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"cm","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"mFF4qR0eih"}],"key":"c8piYM3GJY"},{"type":"text","value":" for plotting data","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"UD2BVO3aFw"}],"key":"CpMDdlBX7f"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"link","url":"http://astropy.io","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"astropy.io","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"KMTw45bflb"}],"urlSource":"http://astropy.io","key":"kFLWLSTMHa"},{"type":"text","value":" fits","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"mULpjDbJqT"}],"key":"KuLDj7iKWk"},{"type":"text","value":" for accessing FITS files","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"OF95HKCBhL"}],"key":"r8UN0XLiiU"},{"type":"listItem","spread":true,"position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"text","value":"astropy.table Table","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"QjR8ohC5Kd"}],"key":"aEqIunHx8t"},{"type":"text","value":" for creating tidy tables of the data","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"wISMiuCAym"}],"key":"jqi1XKyZq1"},{"type":"listItem","spread":true,"position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"AGNzoo_functions","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Uok5CalHCt"}],"key":"RqlLlJmTu8"},{"type":"text","value":" for reading in and prepreocessing of lightcurve data","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"ZmeISVksUq"}],"key":"tFuxgL2zQn"},{"type":"listItem","spread":true,"position":{"start":{"line":43,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"umap","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"XvILutwLsD"}],"key":"kmAQjgyM2r"},{"type":"text","value":" and ","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"ztZSiviznv"},{"type":"emphasis","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"minisom","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"m5E0vybhop"}],"key":"oRyWtWLqmF"},{"type":"text","value":" for manifold learning, dimensionality reduction, and visualization","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"MwBSOlJYoH"}],"key":"N8MQGDxQr5"}],"key":"duqPVwQUE1"},{"type":"paragraph","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"This cell will install them if needed:","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"fi5nWtzzYZ"}],"key":"zjlHWdtGM9"}],"key":"FVFWOTh9Up"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# %pip install -r requirements_ML_AGNzoo.txt","key":"YWO9BrpeNe"},{"type":"output","id":"GOlYFqUbA7mF2lZoySzBj","data":[],"key":"IFQApfIWWQ"}],"key":"eXQSXhkw2I"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import sys\n\nimport astropy.units as u\nfrom astropy.table import Table\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LinearSegmentedColormap\nimport matplotlib.gridspec as gridspec\n\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nimport numpy as np\nimport pandas as pd\nsys.path.append('code_src/')\nfrom AGNzoo_functions import (unify_lc, unify_lc_gp, stat_bands, autopct_format, combine_bands,\n                      normalize_clipmax_objects, shuffle_datalabel, dtw_distance,\n                      stretch_small_values_arctan, translate_bitwise_sum_to_labels, update_bitsums)\nfrom collections import Counter, defaultdict\n\nimport umap\nfrom minisom import MiniSom\n\nimport logging\n\n# Get the root logger\nlogger = logging.getLogger()\nlogger.setLevel(logging.WARNING)\n\nplt.style.use('bmh')\ncolors = [\n    \"#3F51B5\",  # Ultramarine Blue\n    \"#003153\",  # Prussian Blue\n    \"#0047AB\",  # Cobalt Blue\n    \"#40826D\",  # Viridian Green\n    \"#50C878\",  # Emerald Green\n    \"#FFEA00\",  # Chrome Yellow\n    \"#CC7722\",  # Yellow Ochre\n    \"#E34234\",  # Vermilion\n    \"#E30022\",  # Cadmium Red\n    \"#D68A59\",  # Raw Sienna\n    \"#8A360F\",  # Burnt Sienna\n    \"#826644\",  # Raw Umber\n]\n\ncustom_cmap = LinearSegmentedColormap.from_list(\"custom_theme\", colors[1:])","key":"kjcdFWfXNF"},{"type":"output","id":"PNqA11XGAXZ6wtL0yQAFU","data":[],"key":"SDkbnDUHrI"}],"key":"rhjDam2y78"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"text","value":"1. Loading data","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"key":"YwlPR772ft"}],"identifier":"id-1-loading-data","label":"1. Loading data","html_id":"id-1-loading-data","implicit":true,"key":"jOfygMxW8G"},{"type":"paragraph","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"children":[{"type":"text","value":"Here we load a parquet file of light curves generated using the light_curve_collector notebook in this same GitHub repo. With that light_curve_collector notebook, you can build your favorite sample from different sources in the literature and grab the data from archives of interest. This sample contains both spatial coordinates and categorical labels for each AGN. The labels are generated by a bitwise addition of a set of binary indicators. Each binary indicator corresponds to the AGN’s membership in various categories, such as being an SDSS_QSO or a WISE_Variable. For example, an AGN that is both an SDSS_QSO, a WISE_Variable, and also shows ‘Turn_on’ characteristics, would have a label calculated by combining these specific binary indicators using bitwise addition.","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"Xf1yoaIpxQ"}],"key":"j4hvmtANIn"}],"key":"ezEMzaSNn6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%bash\n\n# To download the data file containing the light curves from Googledrive\ngdown 1gb2vWn0V2unstElGTTrHIIWIftHbXJvz -O ./data/df_lc_020724.parquet.gzip","key":"OLsQaiQ43A"},{"type":"output","id":"n7NXMPOkZzgwW5ftc9I-y","data":[{"output_type":"stream","name":"stderr","text":"Downloading...\nFrom (original): https://drive.google.com/uc?id=1gb2vWn0V2unstElGTTrHIIWIftHbXJvz\nFro"},{"output_type":"stream","name":"stderr","text":"m (redirected): https://drive.google.com/uc?id=1gb2vWn0V2unstElGTTrHIIWIftHbXJvz&confirm=t&uuid=64e3"},{"output_type":"stream","name":"stderr","text":"9822-ff74-4d25-bb0b-3dc6e00749ff\nTo: /home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/l"},{"output_type":"stream","name":"stderr","text":"ight_curves/data/df_lc_020724.parquet.gzip\n"},{"output_type":"stream","name":"stderr","text":"\r  0%|          | 0.00/243M [00:00<?, ?B/s]"},{"output_type":"stream","name":"stderr","text":"\r  0%|          | 524k/243M [00:00<00:57, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  0%|          | 1.05M/243M [00:00<00:59, 4.06MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  1%|          | 1.57M/243M [00:00<00:58, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  1%|          | 2.10M/243M [00:00<00:57, 4.19MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  1%|          | 2.62M/243M [00:00<00:59, 4.06MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  1%|▏         | 3.15M/243M [00:00<00:59, 4.05MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  2%|▏         | 3.67M/243M [00:00<00:58, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  2%|▏         | 4.19M/243M [00:01<00:58, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  2%|▏         | 4.72M/243M [00:01<00:57, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  2%|▏         | 5.24M/243M [00:01<00:56, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  2%|▏         | 5.77M/243M [00:01<00:57, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  3%|▎         | 6.29M/243M [00:01<00:56, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  3%|▎         | 6.82M/243M [00:01<00:57, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  3%|▎         | 7.34M/243M [00:01<00:56, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  3%|▎         | 7.86M/243M [00:01<00:57, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  3%|▎         | 8.39M/243M [00:02<00:57, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  4%|▎         | 8.91M/243M [00:02<00:56, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  4%|▍         | 9.44M/243M [00:02<00:57, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  4%|▍         | 9.96M/243M [00:02<00:56, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  4%|▍         | 10.5M/243M [00:02<00:56, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  5%|▍         | 11.0M/243M [00:02<00:55, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  5%|▍         | 11.5M/243M [00:02<00:55, 4.18MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  5%|▍         | 12.1M/243M [00:02<00:56, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  5%|▌         | 12.6M/243M [00:03<00:56, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  5%|▌         | 13.1M/243M [00:03<00:55, 4.18MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  6%|▌         | 13.6M/243M [00:03<00:56, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  6%|▌         | 14.2M/243M [00:03<00:55, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  6%|▌         | 14.7M/243M [00:03<00:55, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  6%|▌         | 15.2M/243M [00:03<00:55, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  6%|▋         | 15.7M/243M [00:03<00:55, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  7%|▋         | 16.3M/243M [00:03<00:54, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  7%|▋         | 16.8M/243M [00:04<00:55, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  7%|▋         | 17.3M/243M [00:04<00:55, 4.06MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  7%|▋         | 17.8M/243M [00:04<00:54, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  8%|▊         | 18.4M/243M [00:04<00:55, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  8%|▊         | 18.9M/243M [00:04<00:54, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  8%|▊         | 19.4M/243M [00:04<00:54, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  8%|▊         | 19.9M/243M [00:04<00:54, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  8%|▊         | 20.4M/243M [00:04<00:54, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  9%|▊         | 21.0M/243M [00:05<00:55, 3.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  9%|▉         | 21.5M/243M [00:05<01:02, 3.57MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  9%|▉         | 22.0M/243M [00:05<00:59, 3.74MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  9%|▉         | 22.5M/243M [00:05<00:56, 3.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r  9%|▉         | 23.1M/243M [00:05<00:56, 3.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 10%|▉         | 23.6M/243M [00:05<00:56, 3.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 10%|▉         | 24.1M/243M [00:05<00:53, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 10%|█         | 24.6M/243M [00:06<00:53, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 10%|█         | 25.2M/243M [00:06<00:52, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 11%|█         | 25.7M/243M [00:06<00:52, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 11%|█         | 26.2M/243M [00:06<00:52, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 11%|█         | 26.7M/243M [00:06<00:52, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 11%|█         | 27.3M/243M [00:06<00:53, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 11%|█▏        | 27.8M/243M [00:06<00:53, 4.03MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 12%|█▏        | 28.3M/243M [00:06<00:52, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 12%|█▏        | 28.8M/243M [00:07<00:52, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 12%|█▏        | 29.4M/243M [00:07<00:52, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 12%|█▏        | 29.9M/243M [00:07<00:52, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 12%|█▏        | 30.4M/243M [00:07<00:51, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 13%|█▎        | 30.9M/243M [00:07<00:51, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 13%|█▎        | 31.5M/243M [00:07<00:51, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 13%|█▎        | 32.0M/243M [00:07<00:51, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 13%|█▎        | 32.5M/243M [00:07<00:50, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 14%|█▎        | 33.0M/243M [00:08<00:51, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 14%|█▍        | 33.6M/243M [00:08<00:50, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 14%|█▍        | 34.1M/243M [00:08<00:50, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 14%|█▍        | 34.6M/243M [00:08<00:51, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 14%|█▍        | 35.1M/243M [00:08<00:50, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 15%|█▍        | 35.7M/243M [00:08<00:50, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 15%|█▍        | 36.2M/243M [00:08<00:49, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 15%|█▌        | 36.7M/243M [00:08<00:48, 4.24MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 15%|█▌        | 37.2M/243M [00:09<00:50, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 16%|█▌        | 37.7M/243M [00:09<00:48, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 16%|█▌        | 38.3M/243M [00:09<00:49, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 16%|█▌        | 38.8M/243M [00:09<00:49, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 16%|█▌        | 39.3M/243M [00:09<00:49, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 16%|█▋        | 39.8M/243M [00:09<00:49, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 17%|█▋        | 40.4M/243M [00:09<00:48, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 17%|█▋        | 40.9M/243M [00:09<00:48, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 17%|█▋        | 41.4M/243M [00:10<00:49, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 17%|█▋        | 41.9M/243M [00:10<00:48, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 17%|█▋        | 42.5M/243M [00:10<00:49, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 18%|█▊        | 43.0M/243M [00:10<00:48, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 18%|█▊        | 43.5M/243M [00:10<00:48, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 18%|█▊        | 44.0M/243M [00:10<00:47, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 18%|█▊        | 44.6M/243M [00:10<00:47, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 19%|█▊        | 45.1M/243M [00:11<00:48, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 19%|█▊        | 45.6M/243M [00:11<00:48, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 19%|█▉        | 46.1M/243M [00:11<00:47, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 19%|█▉        | 46.7M/243M [00:11<00:46, 4.20MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 19%|█▉        | 47.2M/243M [00:11<00:47, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 20%|█▉        | 47.7M/243M [00:11<00:47, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 20%|█▉        | 48.2M/243M [00:11<00:47, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 20%|██        | 48.8M/243M [00:11<00:48, 4.05MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 20%|██        | 49.3M/243M [00:12<00:47, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 20%|██        | 49.8M/243M [00:12<00:49, 3.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 21%|██        | 50.3M/243M [00:12<00:47, 4.06MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 21%|██        | 50.9M/243M [00:12<00:47, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 21%|██        | 51.4M/243M [00:12<00:47, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 21%|██▏       | 51.9M/243M [00:12<00:46, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 22%|██▏       | 52.4M/243M [00:12<00:46, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 22%|██▏       | 53.0M/243M [00:12<00:46, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 22%|██▏       | 53.5M/243M [00:13<00:46, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 22%|██▏       | 54.0M/243M [00:13<00:46, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 22%|██▏       | 54.5M/243M [00:13<00:45, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 23%|██▎       | 55.1M/243M [00:13<00:46, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 23%|██▎       | 55.6M/243M [00:13<00:45, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 23%|██▎       | 56.1M/243M [00:13<00:44, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 23%|██▎       | 56.6M/243M [00:13<00:45, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 23%|██▎       | 57.1M/243M [00:13<00:45, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 24%|██▎       | 57.7M/243M [00:14<00:44, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 24%|██▍       | 58.2M/243M [00:14<00:44, 4.18MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 24%|██▍       | 58.7M/243M [00:14<00:43, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 24%|██▍       | 59.2M/243M [00:14<00:44, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 25%|██▍       | 59.8M/243M [00:14<00:44, 4.16MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 25%|██▍       | 60.3M/243M [00:14<00:43, 4.18MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 25%|██▍       | 60.8M/243M [00:14<00:44, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 25%|██▌       | 61.3M/243M [00:14<00:44, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 25%|██▌       | 61.9M/243M [00:15<00:43, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 26%|██▌       | 62.4M/243M [00:15<00:43, 4.18MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 26%|██▌       | 62.9M/243M [00:15<00:42, 4.20MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 26%|██▌       | 63.4M/243M [00:15<00:44, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 26%|██▋       | 64.0M/243M [00:15<00:43, 4.14MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 26%|██▋       | 64.5M/243M [00:15<00:42, 4.19MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 27%|██▋       | 65.0M/243M [00:15<00:43, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 27%|██▋       | 65.5M/243M [00:15<00:43, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 27%|██▋       | 66.1M/243M [00:16<00:42, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 27%|██▋       | 66.6M/243M [00:16<00:42, 4.19MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 28%|██▊       | 67.1M/243M [00:16<00:42, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 28%|██▊       | 67.6M/243M [00:16<00:42, 4.13MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 28%|██▊       | 68.2M/243M [00:16<00:42, 4.17MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 28%|██▊       | 68.7M/243M [00:16<00:41, 4.19MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 28%|██▊       | 69.2M/243M [00:16<00:42, 4.07MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 29%|██▊       | 69.7M/243M [00:16<00:42, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 29%|██▉       | 70.3M/243M [00:17<00:48, 3.59MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 29%|██▉       | 70.8M/243M [00:17<00:46, 3.73MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 29%|██▉       | 71.3M/243M [00:17<00:45, 3.74MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 30%|██▉       | 71.8M/243M [00:17<00:43, 3.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 30%|██▉       | 72.4M/243M [00:17<00:42, 3.99MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 30%|██▉       | 72.9M/243M [00:17<00:43, 3.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 30%|███       | 73.4M/243M [00:17<00:42, 4.04MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 30%|███       | 73.9M/243M [00:18<00:41, 4.08MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 31%|███       | 74.4M/243M [00:18<00:42, 4.02MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 31%|███       | 75.0M/243M [00:18<00:41, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 31%|███       | 75.5M/243M [00:18<00:40, 4.12MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 31%|███       | 76.0M/243M [00:18<00:40, 4.10MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 31%|███▏      | 76.5M/243M [00:18<00:40, 4.09MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 32%|███▏      | 77.1M/243M [00:18<00:40, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 32%|███▏      | 77.6M/243M [00:18<00:39, 4.20MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 32%|███▏      | 78.1M/243M [00:19<00:39, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 32%|███▏      | 78.6M/243M [00:19<00:40, 4.11MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 33%|███▎      | 79.2M/243M [00:19<00:39, 4.15MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 33%|███▎      | 79.7M/243M [00:19<00:37, 4.41MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 33%|███▎      | 80.2M/243M [00:19<00:36, 4.46MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 33%|███▎      | 80.7M/243M [00:19<00:35, 4.62MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 33%|███▎      | 81.3M/243M [00:19<00:33, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 34%|███▎      | 81.8M/243M [00:19<00:33, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 34%|███▍      | 82.3M/243M [00:19<00:33, 4.77MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 34%|███▍      | 82.8M/243M [00:20<00:33, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 34%|███▍      | 83.4M/243M [00:20<00:32, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 34%|███▍      | 83.9M/243M [00:20<00:32, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 35%|███▍      | 84.4M/243M [00:20<00:32, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 35%|███▍      | 84.9M/243M [00:20<00:32, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 35%|███▌      | 85.5M/243M [00:20<00:32, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 35%|███▌      | 86.0M/243M [00:20<00:32, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 36%|███▌      | 86.5M/243M [00:20<00:32, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 36%|███▌      | 87.0M/243M [00:20<00:31, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 36%|███▌      | 87.6M/243M [00:21<00:32, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 36%|███▌      | 88.1M/243M [00:21<00:31, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 36%|███▋      | 88.6M/243M [00:21<00:31, 4.95MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 37%|███▋      | 89.1M/243M [00:21<00:31, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 37%|███▋      | 89.7M/243M [00:21<00:31, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 37%|███▋      | 90.2M/243M [00:21<00:31, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 37%|███▋      | 90.7M/243M [00:21<00:32, 4.74MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 37%|███▋      | 91.2M/243M [00:21<00:31, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 38%|███▊      | 91.8M/243M [00:21<00:31, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 38%|███▊      | 92.3M/243M [00:22<00:30, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 38%|███▊      | 92.8M/243M [00:22<00:30, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 38%|███▊      | 93.3M/243M [00:22<00:30, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 39%|███▊      | 93.8M/243M [00:22<00:30, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 39%|███▉      | 94.4M/243M [00:22<00:30, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 39%|███▉      | 94.9M/243M [00:22<00:30, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 39%|███▉      | 95.4M/243M [00:22<00:29, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 39%|███▉      | 95.9M/243M [00:22<00:30, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 40%|███▉      | 96.5M/243M [00:22<00:30, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 40%|███▉      | 97.0M/243M [00:22<00:29, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 40%|████      | 97.5M/243M [00:23<00:30, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 40%|████      | 98.0M/243M [00:23<00:29, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 40%|████      | 98.6M/243M [00:23<00:29, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 41%|████      | 99.1M/243M [00:23<00:29, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 41%|████      | 99.6M/243M [00:23<00:29, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 41%|████▏     | 101M/243M [00:23<00:29, 4.91MB/s] "},{"output_type":"stream","name":"stderr","text":"\r 42%|████▏     | 101M/243M [00:23<00:28, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 42%|████▏     | 102M/243M [00:23<00:28, 4.95MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 42%|████▏     | 102M/243M [00:24<00:28, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 42%|████▏     | 103M/243M [00:24<00:28, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 42%|████▏     | 103M/243M [00:24<00:28, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 43%|████▎     | 104M/243M [00:24<00:28, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 43%|████▎     | 104M/243M [00:24<00:30, 4.52MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 43%|████▎     | 105M/243M [00:24<00:32, 4.31MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 43%|████▎     | 105M/243M [00:24<00:31, 4.44MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 44%|████▎     | 106M/243M [00:24<00:29, 4.63MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 44%|████▎     | 106M/243M [00:24<00:28, 4.77MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 44%|████▍     | 107M/243M [00:25<00:28, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 44%|████▍     | 107M/243M [00:25<00:28, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 44%|████▍     | 108M/243M [00:25<00:28, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 45%|████▍     | 109M/243M [00:25<00:27, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 45%|████▍     | 109M/243M [00:25<00:27, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 45%|████▌     | 110M/243M [00:25<00:27, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 45%|████▌     | 110M/243M [00:25<00:27, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 45%|████▌     | 111M/243M [00:25<00:27, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 46%|████▌     | 111M/243M [00:25<00:27, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 46%|████▌     | 112M/243M [00:26<00:26, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 46%|████▌     | 112M/243M [00:26<00:27, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 46%|████▋     | 113M/243M [00:26<00:26, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 47%|████▋     | 113M/243M [00:26<00:26, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 47%|████▋     | 114M/243M [00:26<00:25, 5.02MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 47%|████▋     | 114M/243M [00:26<00:26, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 47%|████▋     | 115M/243M [00:26<00:26, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 47%|████▋     | 115M/243M [00:26<00:25, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 48%|████▊     | 116M/243M [00:26<00:26, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 48%|████▊     | 116M/243M [00:26<00:25, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 48%|████▊     | 117M/243M [00:27<00:25, 4.99MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 48%|████▊     | 118M/243M [00:27<00:25, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 49%|████▊     | 118M/243M [00:27<00:25, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 49%|████▉     | 119M/243M [00:27<00:25, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 49%|████▉     | 120M/243M [00:27<00:25, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 49%|████▉     | 120M/243M [00:27<00:25, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 50%|████▉     | 121M/243M [00:27<00:24, 4.95MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 50%|████▉     | 121M/243M [00:27<00:25, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 50%|████▉     | 122M/243M [00:28<00:24, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 50%|█████     | 123M/243M [00:28<00:24, 5.00MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 51%|█████     | 123M/243M [00:28<00:24, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 51%|█████     | 124M/243M [00:28<00:24, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 51%|█████     | 124M/243M [00:28<00:24, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 51%|█████▏    | 125M/243M [00:28<00:24, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 51%|█████▏    | 125M/243M [00:28<00:23, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 52%|█████▏    | 126M/243M [00:28<00:24, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 52%|█████▏    | 126M/243M [00:29<00:25, 4.65MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 52%|█████▏    | 127M/243M [00:29<00:24, 4.72MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 52%|█████▏    | 127M/243M [00:29<00:24, 4.74MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 53%|█████▎    | 128M/243M [00:29<00:23, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 53%|█████▎    | 128M/243M [00:29<00:23, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 53%|█████▎    | 129M/243M [00:29<00:23, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 53%|█████▎    | 129M/243M [00:29<00:23, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 53%|█████▎    | 130M/243M [00:29<00:23, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 54%|█████▎    | 131M/243M [00:29<00:23, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 54%|█████▍    | 131M/243M [00:29<00:22, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 54%|█████▍    | 132M/243M [00:30<00:23, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 54%|█████▍    | 132M/243M [00:30<00:22, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 54%|█████▍    | 133M/243M [00:30<00:22, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 55%|█████▍    | 133M/243M [00:30<00:22, 4.99MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 55%|█████▍    | 134M/243M [00:30<00:22, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 55%|█████▌    | 134M/243M [00:30<00:22, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 55%|█████▌    | 135M/243M [00:30<00:22, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 56%|█████▌    | 135M/243M [00:30<00:22, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 56%|█████▌    | 136M/243M [00:30<00:22, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 56%|█████▌    | 136M/243M [00:31<00:21, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 56%|█████▌    | 137M/243M [00:31<00:21, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 56%|█████▋    | 137M/243M [00:31<00:21, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 57%|█████▋    | 138M/243M [00:31<00:21, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 57%|█████▋    | 138M/243M [00:31<00:21, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 57%|█████▋    | 139M/243M [00:31<00:21, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 57%|█████▋    | 139M/243M [00:31<00:21, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 58%|█████▊    | 140M/243M [00:31<00:21, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 58%|█████▊    | 141M/243M [00:31<00:21, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 58%|█████▊    | 141M/243M [00:32<00:20, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 58%|█████▊    | 142M/243M [00:32<00:20, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 58%|█████▊    | 142M/243M [00:32<00:21, 4.77MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 59%|█████▊    | 143M/243M [00:32<00:20, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 59%|█████▉    | 143M/243M [00:32<00:20, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 59%|█████▉    | 144M/243M [00:32<00:20, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 59%|█████▉    | 144M/243M [00:32<00:20, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 59%|█████▉    | 145M/243M [00:32<00:20, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 60%|█████▉    | 145M/243M [00:32<00:20, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 60%|█████▉    | 146M/243M [00:33<00:20, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 60%|██████    | 146M/243M [00:33<00:19, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 60%|██████    | 147M/243M [00:33<00:19, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 61%|██████    | 147M/243M [00:33<00:19, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 61%|██████    | 148M/243M [00:33<00:19, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 61%|██████    | 148M/243M [00:33<00:19, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 61%|██████    | 149M/243M [00:33<00:19, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 61%|██████▏   | 149M/243M [00:33<00:19, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 62%|██████▏   | 150M/243M [00:33<00:19, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 62%|██████▏   | 150M/243M [00:33<00:19, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 62%|██████▏   | 151M/243M [00:34<00:19, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 62%|██████▏   | 152M/243M [00:34<00:18, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 62%|██████▏   | 152M/243M [00:34<00:18, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 63%|██████▎   | 153M/243M [00:34<00:18, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 63%|██████▎   | 153M/243M [00:34<00:18, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 63%|██████▎   | 154M/243M [00:34<00:18, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 63%|██████▎   | 154M/243M [00:34<00:18, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 64%|██████▎   | 155M/243M [00:34<00:17, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 64%|██████▍   | 155M/243M [00:34<00:18, 4.79MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 64%|██████▍   | 156M/243M [00:35<00:18, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 64%|██████▍   | 156M/243M [00:35<00:17, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 64%|██████▍   | 157M/243M [00:35<00:17, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 65%|██████▍   | 157M/243M [00:35<00:17, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 65%|██████▍   | 158M/243M [00:35<00:17, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 65%|██████▌   | 158M/243M [00:35<00:17, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 65%|██████▌   | 159M/243M [00:35<00:17, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 65%|██████▌   | 159M/243M [00:35<00:17, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 66%|██████▌   | 160M/243M [00:35<00:17, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 66%|██████▌   | 160M/243M [00:36<00:16, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 66%|██████▌   | 161M/243M [00:36<00:16, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 66%|██████▋   | 161M/243M [00:36<00:16, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 67%|██████▋   | 162M/243M [00:36<00:16, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 67%|██████▋   | 163M/243M [00:36<00:16, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 67%|██████▋   | 163M/243M [00:36<00:18, 4.35MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 67%|██████▋   | 164M/243M [00:36<00:18, 4.33MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 67%|██████▋   | 164M/243M [00:36<00:17, 4.43MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 68%|██████▊   | 165M/243M [00:36<00:17, 4.61MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 68%|██████▊   | 165M/243M [00:37<00:17, 4.59MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 68%|██████▊   | 166M/243M [00:37<00:16, 4.70MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 68%|██████▊   | 166M/243M [00:37<00:16, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 68%|██████▊   | 167M/243M [00:37<00:15, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 69%|██████▊   | 167M/243M [00:37<00:15, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 69%|██████▉   | 168M/243M [00:37<00:15, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 69%|██████▉   | 168M/243M [00:37<00:15, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 69%|██████▉   | 169M/243M [00:37<00:15, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 70%|██████▉   | 169M/243M [00:37<00:15, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 70%|██████▉   | 170M/243M [00:37<00:14, 5.00MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 70%|███████   | 170M/243M [00:38<00:14, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 70%|███████   | 171M/243M [00:38<00:14, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 70%|███████   | 171M/243M [00:38<00:14, 4.99MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 71%|███████   | 172M/243M [00:38<00:14, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 71%|███████   | 172M/243M [00:38<00:14, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 71%|███████   | 173M/243M [00:38<00:14, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 71%|███████▏  | 174M/243M [00:38<00:14, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 72%|███████▏  | 174M/243M [00:38<00:14, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 72%|███████▏  | 175M/243M [00:38<00:14, 4.81MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 72%|███████▏  | 175M/243M [00:39<00:13, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 72%|███████▏  | 176M/243M [00:39<00:14, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 72%|███████▏  | 176M/243M [00:39<00:13, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 73%|███████▎  | 177M/243M [00:39<00:13, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 73%|███████▎  | 178M/243M [00:39<00:13, 5.04MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 73%|███████▎  | 178M/243M [00:39<00:13, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 73%|███████▎  | 179M/243M [00:39<00:13, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 74%|███████▎  | 179M/243M [00:39<00:12, 4.98MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 74%|███████▍  | 180M/243M [00:40<00:13, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 74%|███████▍  | 180M/243M [00:40<00:12, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 74%|███████▍  | 181M/243M [00:40<00:12, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 75%|███████▍  | 181M/243M [00:40<00:12, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 75%|███████▍  | 182M/243M [00:40<00:12, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 75%|███████▍  | 182M/243M [00:40<00:12, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 75%|███████▌  | 183M/243M [00:40<00:12, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 75%|███████▌  | 184M/243M [00:40<00:12, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 76%|███████▌  | 184M/243M [00:40<00:11, 4.98MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 76%|███████▌  | 185M/243M [00:40<00:11, 5.01MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 76%|███████▌  | 185M/243M [00:41<00:12, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 76%|███████▌  | 186M/243M [00:41<00:11, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 76%|███████▋  | 186M/243M [00:41<00:11, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 77%|███████▋  | 187M/243M [00:41<00:11, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 77%|███████▋  | 187M/243M [00:41<00:11, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 77%|███████▋  | 188M/243M [00:41<00:11, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 77%|███████▋  | 188M/243M [00:41<00:11, 4.79MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 78%|███████▊  | 189M/243M [00:41<00:11, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 78%|███████▊  | 189M/243M [00:41<00:11, 4.77MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 78%|███████▊  | 190M/243M [00:42<00:11, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 78%|███████▊  | 190M/243M [00:42<00:10, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 78%|███████▊  | 191M/243M [00:42<00:10, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 79%|███████▊  | 191M/243M [00:42<00:11, 4.66MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 79%|███████▉  | 192M/243M [00:42<00:11, 4.64MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 79%|███████▉  | 192M/243M [00:42<00:10, 4.73MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 79%|███████▉  | 193M/243M [00:42<00:10, 4.69MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 79%|███████▉  | 193M/243M [00:42<00:11, 4.54MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 80%|███████▉  | 194M/243M [00:42<00:10, 4.69MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 80%|███████▉  | 195M/243M [00:43<00:10, 4.74MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 80%|████████  | 195M/243M [00:43<00:10, 4.46MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 80%|████████  | 196M/243M [00:43<00:10, 4.56MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 81%|████████  | 196M/243M [00:43<00:10, 4.53MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 81%|████████  | 197M/243M [00:43<00:10, 4.53MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 81%|████████  | 197M/243M [00:43<00:09, 4.72MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 81%|████████  | 198M/243M [00:43<00:09, 4.81MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 81%|████████▏ | 198M/243M [00:43<00:09, 4.72MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 82%|████████▏ | 199M/243M [00:43<00:09, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 82%|████████▏ | 199M/243M [00:44<00:09, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 82%|████████▏ | 200M/243M [00:44<00:09, 4.75MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 82%|████████▏ | 200M/243M [00:44<00:08, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 82%|████████▏ | 201M/243M [00:44<00:08, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 83%|████████▎ | 201M/243M [00:44<00:08, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 83%|████████▎ | 202M/243M [00:44<00:08, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 83%|████████▎ | 202M/243M [00:44<00:08, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 83%|████████▎ | 203M/243M [00:44<00:08, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 84%|████████▎ | 203M/243M [00:44<00:08, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 84%|████████▍ | 204M/243M [00:45<00:08, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 84%|████████▍ | 204M/243M [00:45<00:07, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 84%|████████▍ | 205M/243M [00:45<00:07, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 84%|████████▍ | 206M/243M [00:45<00:07, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 85%|████████▍ | 206M/243M [00:45<00:07, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 85%|████████▍ | 207M/243M [00:45<00:07, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 85%|████████▌ | 207M/243M [00:45<00:07, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 86%|████████▌ | 208M/243M [00:45<00:07, 5.03MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 86%|████████▌ | 209M/243M [00:46<00:07, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 86%|████████▌ | 209M/243M [00:46<00:07, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 86%|████████▌ | 210M/243M [00:46<00:06, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 86%|████████▋ | 210M/243M [00:46<00:06, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 87%|████████▋ | 211M/243M [00:46<00:06, 4.87MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 87%|████████▋ | 211M/243M [00:46<00:06, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 87%|████████▋ | 212M/243M [00:46<00:06, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 87%|████████▋ | 212M/243M [00:46<00:06, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 87%|████████▋ | 213M/243M [00:46<00:06, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 88%|████████▊ | 213M/243M [00:46<00:06, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 88%|████████▊ | 214M/243M [00:47<00:06, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 88%|████████▊ | 215M/243M [00:47<00:05, 4.98MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 89%|████████▊ | 215M/243M [00:47<00:05, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 89%|████████▊ | 216M/243M [00:47<00:05, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 89%|████████▉ | 217M/243M [00:47<00:05, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 89%|████████▉ | 217M/243M [00:47<00:05, 4.81MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 89%|████████▉ | 218M/243M [00:47<00:05, 4.82MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 90%|████████▉ | 219M/243M [00:48<00:04, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 90%|█████████ | 219M/243M [00:48<00:04, 4.96MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 90%|█████████ | 220M/243M [00:48<00:04, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 90%|█████████ | 220M/243M [00:48<00:04, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 91%|█████████ | 221M/243M [00:48<00:04, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 91%|█████████ | 221M/243M [00:48<00:04, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 91%|█████████ | 222M/243M [00:48<00:04, 4.76MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 91%|█████████▏| 222M/243M [00:48<00:04, 4.62MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 92%|█████████▏| 223M/243M [00:48<00:04, 4.73MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 92%|█████████▏| 223M/243M [00:49<00:04, 4.60MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 92%|█████████▏| 224M/243M [00:49<00:03, 4.81MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 92%|█████████▏| 225M/243M [00:49<00:03, 4.71MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 93%|█████████▎| 226M/243M [00:49<00:03, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 93%|█████████▎| 226M/243M [00:49<00:03, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 93%|█████████▎| 227M/243M [00:49<00:03, 4.85MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 93%|█████████▎| 228M/243M [00:49<00:03, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 94%|█████████▎| 228M/243M [00:50<00:03, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 94%|█████████▍| 229M/243M [00:50<00:03, 4.80MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 94%|█████████▍| 229M/243M [00:50<00:02, 4.90MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 94%|█████████▍| 230M/243M [00:50<00:02, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 95%|█████████▍| 230M/243M [00:50<00:02, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 95%|█████████▍| 231M/243M [00:50<00:02, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 95%|█████████▍| 231M/243M [00:50<00:02, 4.66MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 95%|█████████▌| 232M/243M [00:50<00:02, 4.21MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 96%|█████████▌| 233M/243M [00:51<00:02, 4.71MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 96%|█████████▌| 233M/243M [00:51<00:02, 4.68MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 96%|█████████▌| 234M/243M [00:51<00:02, 4.78MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 96%|█████████▋| 234M/243M [00:51<00:01, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 96%|█████████▋| 235M/243M [00:51<00:01, 4.89MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 97%|█████████▋| 236M/243M [00:51<00:01, 4.95MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 97%|█████████▋| 236M/243M [00:51<00:01, 4.91MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 97%|█████████▋| 237M/243M [00:51<00:01, 4.97MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 98%|█████████▊| 238M/243M [00:51<00:01, 4.99MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 98%|█████████▊| 238M/243M [00:52<00:01, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 98%|█████████▊| 239M/243M [00:52<00:01, 4.84MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 98%|█████████▊| 239M/243M [00:52<00:00, 4.92MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 98%|█████████▊| 240M/243M [00:52<00:00, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 99%|█████████▊| 240M/243M [00:52<00:00, 4.86MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 99%|█████████▉| 241M/243M [00:52<00:00, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 99%|█████████▉| 241M/243M [00:52<00:00, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r 99%|█████████▉| 242M/243M [00:52<00:00, 4.93MB/s]"},{"output_type":"stream","name":"stderr","text":"\r100%|█████████▉| 242M/243M [00:52<00:00, 4.94MB/s]"},{"output_type":"stream","name":"stderr","text":"\r100%|█████████▉| 243M/243M [00:53<00:00, 4.88MB/s]"},{"output_type":"stream","name":"stderr","text":"\r100%|█████████▉| 243M/243M [00:53<00:00, 4.83MB/s]"},{"output_type":"stream","name":"stderr","text":"\r100%|██████████| 243M/243M [00:53<00:00, 4.58MB/s]\n"}],"key":"yRvEtGBZf1"}],"key":"WTEYY3CfRA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df_lc = pd.read_parquet('data/df_lc_020724.parquet.gzip')\n\n# remove 64 for SPIDER only as its too large compared to the rest of the labels\ndf_lc = df_lc[df_lc.index.get_level_values('label') != '64']\n# remove all bitwise sums that had 64 in them\ndf_lc = update_bitsums(df_lc)","key":"OaiLIJ3xn8"},{"type":"output","id":"T6ZOvXtiCxDhBJTUHXOO7","data":[],"key":"h74FrsO9Rh"}],"key":"RueqfK45bX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df_lc","key":"Ht22vy79m5"},{"type":"output","id":"dHFiOY8YMXD7LfYpXZuCh","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"                                        flux  err\nobjectid label band       time                   \n133      1     FERMIGTRIG 57818.586891  0.10  0.1\n661      1     FERMIGTRIG 57701.261458  0.10  0.1\n8238     16    SAXGRBMGRB 50953.800208  0.10  0.1\n8137     32    SAXGRBMGRB 50335.861597  0.10  0.1\n507      1     SAXGRBMGRB 50335.861597  0.10  0.1\n...                                      ...  ...\n8305     2048  IceCube    57324.871275  3.64  0.0\n                          56387.615469  3.58  0.0\n8306     2048  IceCube    55202.077308  4.52  0.0\n                          55047.819638  4.06  0.0\n                          54908.220026  3.87  0.0\n\n[2036242 rows x 2 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>flux</th>\n      <th>err</th>\n    </tr>\n    <tr>\n      <th>objectid</th>\n      <th>label</th>\n      <th>band</th>\n      <th>time</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>133</th>\n      <th>1</th>\n      <th>FERMIGTRIG</th>\n      <th>57818.586891</th>\n      <td>0.10</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>661</th>\n      <th>1</th>\n      <th>FERMIGTRIG</th>\n      <th>57701.261458</th>\n      <td>0.10</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>8238</th>\n      <th>16</th>\n      <th>SAXGRBMGRB</th>\n      <th>50953.800208</th>\n      <td>0.10</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>8137</th>\n      <th>32</th>\n      <th>SAXGRBMGRB</th>\n      <th>50335.861597</th>\n      <td>0.10</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>507</th>\n      <th>1</th>\n      <th>SAXGRBMGRB</th>\n      <th>50335.861597</th>\n      <td>0.10</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">8305</th>\n      <th rowspan=\"2\" valign=\"top\">2048</th>\n      <th rowspan=\"2\" valign=\"top\">IceCube</th>\n      <th>57324.871275</th>\n      <td>3.64</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>56387.615469</th>\n      <td>3.58</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">8306</th>\n      <th rowspan=\"3\" valign=\"top\">2048</th>\n      <th rowspan=\"3\" valign=\"top\">IceCube</th>\n      <th>55202.077308</th>\n      <td>4.52</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>55047.819638</th>\n      <td>4.06</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>54908.220026</th>\n      <td>3.87</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>2036242 rows × 2 columns</p>\n</div>","content_type":"text/html"}}}],"key":"AqqHYogSbG"}],"key":"XQbQ1VJFgw"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"children":[{"type":"text","value":"1.1 What is in this sample","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"p7Q26vAlpw"}],"identifier":"id-1-1-what-is-in-this-sample","label":"1.1 What is in this sample","html_id":"id-1-1-what-is-in-this-sample","implicit":true,"key":"hg5K5q952S"},{"type":"paragraph","position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"children":[{"type":"text","value":"To effectively undertake machine learning (ML) in addressing a specific question, it’s imperative to have a clear understanding of the data we’ll be utilizing. This understanding aids in selecting the appropriate ML approach and, critically, allows for informed and necessary data preprocessing. For example whether a normalization is needed, and what band to choose for normalization.","position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"key":"UyF9AVLklP"}],"key":"QQHAgJnPbV"}],"key":"ahT6Ex1sp4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"objid = df_lc.index.get_level_values('objectid')[:].unique()\nseen = Counter()\n\nfor (objectid, label), singleobj in df_lc.groupby(level=[\"objectid\", \"label\"]):\n    bitwise_sum = int(label)\n    active_labels = translate_bitwise_sum_to_labels(bitwise_sum)\n    seen.update(active_labels)\n# changing order of labels in dictionary only for text to be readable on the plot\nkey_order = ('SDSS_QSO', 'SPIDER_AGN', 'SPIDER_BL', 'SPIDER_QSOBL', 'SPIDER_AGNBL',\n             'WISE_Variable', 'Optical_Variable', 'Galex_Variable', 'Turn-on', 'Turn-off', 'TDE')\nnew_queue = {}\nfor k in key_order:\n    new_queue[k] = seen[k]\n\nplt.figure(figsize=(8, 8))\nplt.title(r'Sample consists of:', size=15)\nh = plt.pie(new_queue.values(), labels=new_queue.keys(), autopct=autopct_format(new_queue.values()),\n            textprops={'fontsize': 15}, startangle=30, labeldistance=1.1,\n            wedgeprops={'linewidth': 3, 'edgecolor': 'white'}, colors=colors)","key":"LqJMjMu4ON"},{"type":"output","id":"Lxj9WwboxYNtSl0KYvPgx","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x800 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ceec6a5c6288b13827e4c5e653e36ee2","path":"/fornax-demo-notebooks/build/ceec6a5c6288b13827e4c5e653e36ee2.png"}}}],"key":"qBjPeRSSPt"}],"key":"im9lFLgZ4o"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"In this particular example, the largest subsamples of AGNs, all with a criteria on redshift (z<1), are from the optical spectra by the ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"dRoXtD4Iy2"},{"type":"link","url":"https://www.sdss4.org/dr17/algorithms/qso_catalog/","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"SDSS quasar sample DR16Q","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"tCIAuTs5M5"}],"urlSource":"https://www.sdss4.org/dr17/algorithms/qso_catalog/","key":"fDzsnxs8jJ"},{"type":"text","value":", the value added SDSS spectra from ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"OxQTYezH9e"},{"type":"link","url":"https://www.sdss.org/dr18/bhm/programs/spiders/","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"SPIDERS","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"WgRVaetf2j"}],"urlSource":"https://www.sdss.org/dr18/bhm/programs/spiders/","key":"KN2c6u48rG"},{"type":"text","value":", and a subset of AGNs selected in MIR WISE bands based on their variability (","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"FglV5E8fYQ"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2019AAS...23333004P/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"csv in data folder credit RChary","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"LSKhsI5esY"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2019AAS...23333004P/abstract","key":"ZQIS9C0epX"},{"type":"text","value":"). We also include some smaller samples from the literature to see where they sit compared to the rest of the population and if they are localized on the 2D projection. These include the Changing Look AGNs from the literature (e.g., ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"RxCObWZsIh"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2015ApJ...800..144L/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"LaMassa et al. 2015","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"B42YeXZwsG"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2015ApJ...800..144L/abstract","key":"YlT3XwqyxU"},{"type":"text","value":", ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"FFrD8sCa74"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2022ApJ...927..227L/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"Lyu et al. 2022","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"f5uCZwba29"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2022ApJ...927..227L/abstract","key":"lZ3sJHLSJa"},{"type":"text","value":", ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"CtnJc9reWN"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2022MNRAS.511...54H/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"Hon et al. 2022","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"OamIhQ1msH"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2022MNRAS.511...54H/abstract","key":"JdQxLdVVDH"},{"type":"text","value":"), a sample which showed variability in Galex UV images (","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"drFuVcjVN7"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2022ApJ...933...37W/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"Wasleske et al. 2022","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"soHSPlTK1W"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2022ApJ...933...37W/abstract","key":"fBqh9wZKnn"},{"type":"text","value":"), a sample of variable sources identified in optical Palomar observarions (","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"YUIssLpC1V"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2020ApJ...896...10B/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"Baldassare et al. 2020","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"Lz5rkXl7cC"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2020ApJ...896...10B/abstract","key":"OHNWBSnLkP"},{"type":"text","value":"), and the optically variable AGNs in the COSMOS field from a three year program on VLT(","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"sUqJG3DdqN"},{"type":"link","url":"https://ui.adsabs.harvard.edu/abs/2019A%26A...627A..33D/abstract","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"De Cicco et al. 2019","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"O7PqVKsu0m"}],"urlSource":"https://ui.adsabs.harvard.edu/abs/2019A%26A...627A..33D/abstract","key":"QbzKhfjJRz"},{"type":"text","value":"). We also include 30 Tidal Disruption Event coordinates identified from ZTF light curves ","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"a7KXBEH4f2"},{"type":"link","url":"https://doi.org/10.3847/1538-4357","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"children":[{"type":"text","value":"Hammerstein et al. 2023","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"Hu3n2ICQcX"}],"urlSource":"https://iopscience.iop.org/article/10.3847/1538-4357/aca283/meta","data":{"doi":"10.3847/1538-4357"},"internal":false,"protocol":"doi","key":"YE1PgwOhAa"},{"type":"text","value":".","position":{"start":{"line":149,"column":1},"end":{"line":149,"column":1}},"key":"jeCV7FmgWx"}],"key":"Dry5gt4OQy"}],"key":"BYzND5HBmQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"seen = Counter()\nseen = df_lc.reset_index().groupby('band').objectid.nunique().to_dict()\n\nplt.figure(figsize=(20, 4))\nplt.title(r'Number of lightcurves in each waveband in this sample:', size=20)\nh = plt.bar(seen.keys(), seen.values())\nplt.ylabel(r'#', size=20)","key":"DrbBMOK9Jq"},{"type":"output","id":"dkAatde3F5_IedytsyptQ","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 2000x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1011ed698dfd0175c285039e552fe92d","path":"/fornax-demo-notebooks/build/1011ed698dfd0175c285039e552fe92d.png"}}}],"key":"eCF9k9yWeN"}],"key":"XlIQGQqWrI"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":161,"column":1},"end":{"line":161,"column":1}},"children":[{"type":"text","value":"The histogram shows the number of lightcurves which ended up in the multi-index data frame from each of the archive calls in different wavebands/filters.","position":{"start":{"line":161,"column":1},"end":{"line":161,"column":1}},"key":"a3nHQq6euf"}],"key":"wQXC2emNvL"}],"key":"PeEBLFpU15"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cadence = dict((el, []) for el in seen.keys())\ntimerange = dict((el, []) for el in seen.keys())\n\nfor (_, band), times in df_lc.reset_index().groupby([\"objectid\", \"band\"]).time:\n    cadence[band].append(len(times))\n    if times.max() - times.min() > 0:\n        timerange[band].append(np.round(times.max() - times.min(), 1))\n\nplt.figure(figsize=(20, 4))\nplt.title(r'Time range and cadence covered in each in each waveband averaged over this sample:')\nfor el in cadence.keys():\n    plt.scatter(np.mean(timerange[el]), np.mean(cadence[el]), label=el, s=len(timerange[el]))\n    plt.errorbar(np.mean(timerange[el]), np.mean(cadence[el]),\n                 xerr=np.std(timerange[el]), yerr=np.std(cadence[el]), alpha=0.2)\n    plt.annotate(el, (np.mean(timerange[el]), np.mean(cadence[el])+2), size=12, rotation=40)\nplt.ylabel(r'Average number of visits', size=20)\nplt.xlabel(r'Average baseline (days)', size=20)\nplt.xlim([0, 4000])\nplt.yscale('log')","key":"ApoLUvsIZC"},{"type":"output","id":"IqCx-aApNxCUJxqhP0Y1w","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/numpy/_core/fromnumeric.py:3860: RuntimeWarning: Mean of empty slice.\n  return _methods._mean(a, axis=axis, dtype=dtype,\n/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/numpy/_core/_methods.py:145: RuntimeWarning: invalid value encountered in scalar divide\n  ret = ret.dtype.type(ret / rcount)\n/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/numpy/_core/_methods.py:223: RuntimeWarning: Degrees of freedom <= 0 for slice\n  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/numpy/_core/_methods.py:181: RuntimeWarning: invalid value encountered in divide\n  arrmean = um.true_divide(arrmean, div, out=arrmean,\n/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/numpy/_core/_methods.py:215: RuntimeWarning: invalid value encountered in scalar divide\n  ret = ret.dtype.type(ret / rcount)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 2000x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0babc8d881b2e0431ce5aca7b11f4da5","path":"/fornax-demo-notebooks/build/0babc8d881b2e0431ce5aca7b11f4da5.png"}}}],"key":"AY52glxJDN"}],"key":"pKBGLEu1IF"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":185,"column":1},"end":{"line":185,"column":1}},"children":[{"type":"text","value":"While from the histogram plot we see which bands have the highest number of observed lightcurves, what might matter more in finding/selecting variability or changing look in lightcurves is the cadence and the average baseline of observations. For instance, Panstarrs has a large number of lightcurve detections in our sample, but from the figure above we see that the average number of visits and the baseline for those observations are considerably less than ZTF. WISE also shows the longest baseline of observations which is suitable to finding longer term variability in objects.","position":{"start":{"line":185,"column":1},"end":{"line":185,"column":1}},"key":"cp5Wf6nyR1"}],"key":"YOQzwtiBFO"},{"type":"heading","depth":2,"position":{"start":{"line":187,"column":1},"end":{"line":187,"column":1}},"children":[{"type":"text","value":"2. Preprocess data for ML (ZTF bands)","position":{"start":{"line":187,"column":1},"end":{"line":187,"column":1}},"key":"RrU3OiZ2UU"}],"identifier":"id-2-preprocess-data-for-ml-ztf-bands","label":"2. Preprocess data for ML (ZTF bands)","html_id":"id-2-preprocess-data-for-ml-ztf-bands","implicit":true,"key":"Q8y18QXKPT"},{"type":"paragraph","position":{"start":{"line":189,"column":1},"end":{"line":190,"column":1}},"children":[{"type":"text","value":"We first look at this sample only in ZTF bands which have the largest number of visits. We start by unifying the time grid of the light curves so oobjects with different start time or number of observations can be compared. We do this by interpolation to a new grid. The choice of the grid resolution and baseline is strictly dependent on the input data, in this case ZTF, to preserve as much as possible all the information from the observations.\nThe unify_lc, or unify_lc_gp functions do the unification of the lightcurve arrays. For details please see the codes. The time arrays are chosen based on the average duration of observations, with ZTF and WISE covering 1600, 4000 days respectively. We note that we disregard the time of observation of each source, by subtracting the initial time from the array and bringing all lightcurves to the same footing. This has to be taken into account if it influences the science of interest. We then interoplate the time arrays with linear or Gaussian Process regression (unift_lc/ unify_lc_gp respectively). We also remove from the sample objects with less than 5 datapoints in their light curve. We measure basic statistics and combine the tree observed ZTF bands into one longer array as input to dimensionailty reduction after deciding on normalization. We also do a shuffling of the sample to be sure that the separations of different classes by ML are not simply due to the order they are seen in training (in case it is not done by the ML routine itself).","position":{"start":{"line":189,"column":1},"end":{"line":189,"column":1}},"key":"ksAj1qi4Ce"}],"key":"VdxKRa4JM7"}],"key":"zlpmajqiWC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bands_inlc = ['zg', 'zr', 'zi']\n\n# nearest neighbor linear interpolation:\nobjects, dobjects, flabels, keeps = unify_lc(df_lc, bands_inlc, xres=60, numplots=5,\n                                             low_limit_size=5)\n\n# Gaussian process unification\n# objects, dobjects, flabels, keeps = unify_lc_gp(df_lc, bands_inlc, xres=60, numplots=5,\n#                                                 low_limit_size=5)\n\n# keeps can be used as index of objects that are kept in \"objects\" from the initial \"df_lc\",\n# in case information about some properties of sample (e.g., redshifts) is of interest\n# this array of indecies would be helpful\n\n# calculate some basic statistics with a sigmaclipping with width 5sigma\nfvar, maxarray, meanarray = stat_bands(objects, dobjects, bands_inlc, sigmacl=5)\n\n# combine different waveband into one array\ndat_notnormal = combine_bands(objects, bands_inlc)\n\n# Normalize the combinde array by maximum of brightness in a waveband after clipping outliers:\ndat = normalize_clipmax_objects(dat_notnormal, maxarray, band=1)\n\n# Normalize the combinde array by mean brightness in a waveband after clipping outliers:\ndatm = normalize_clipmax_objects(dat_notnormal, meanarray, band=1)\n\n# shuffle data incase the ML routines are sensitive to order\ndata, fzr, p = shuffle_datalabel(dat, flabels)\nfvar_arr, maximum_arr, average_arr = fvar[:, p], maxarray[:, p], meanarray[:, p]\n\n# Initialize labc to hold indices of each unique label\nlabc = {}\nfor index, f in enumerate(fzr):\n    lab = translate_bitwise_sum_to_labels(int(f))\n    for label in lab:\n        if label not in labc:\n            # Initialize the list for this label if it's not already in labc\n            labc[label] = []\n        # Append the current index to the list of indices for this label\n        labc[label].append(index)","key":"Qd2LVmjWLk"},{"type":"output","id":"iPbt1BmjmGFWy--PBnav0","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"0it [00:00, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"a7586dc9cad545058f19679b49beff48\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"3efbb8e61aee7a7d8c922f6aa435ac19","path":"/fornax-demo-notebooks/build/3efbb8e61aee7a7d8c922f6aa435ac19.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5ce830845bb5320ff379c4d5665194fd","path":"/fornax-demo-notebooks/build/5ce830845bb5320ff379c4d5665194fd.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b3c82b63594feef2bb46431bacfa6204","path":"/fornax-demo-notebooks/build/b3c82b63594feef2bb46431bacfa6204.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"cf1435a4675d911af83b67507649fd3c","path":"/fornax-demo-notebooks/build/cf1435a4675d911af83b67507649fd3c.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"e7385808fe9e0217d199a1764a32521c","path":"/fornax-demo-notebooks/build/e7385808fe9e0217d199a1764a32521c.png"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/code_src/AGNzoo_functions.py:290: RuntimeWarning: invalid value encountered in sqrt\n  fvar = (np.sqrt(varf - deltaf)) / meanf\n"}],"key":"iEboapVK4O"}],"key":"CnKfxNay7c"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"children":[{"type":"text","value":"The combination of the tree bands into one longer arrays in order of increasing wavelength, can be seen as providing both the SED shape as well as variability in each from the light curve. Figure below demonstrates this as well as our normalization choice. We normalize the data in ZTF R band as it has a higher average numbe of visits compared to G and I band. We remove outliers before measuring the mean and max of the light curve and normalizing by it. This normalization can be skipped if one is mearly interested in comparing brightnesses of the data in this sample, but as dependence on flux is strong to look for variability and compare shapes of light curves a normalization helps.","position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"key":"SY59dIU7UK"}],"key":"n3lffRTNRO"}],"key":"V412T7BZhG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"r = np.random.randint(np.shape(dat)[1])\n\n_, axs = plt.subplots(1, 3, figsize=(18, 4))\nztf_data = [dat_notnormal, dat, datm]\nylabels = [r'Flux ($\\mu Jy$)', r'Normalized Flux (max r band)', r'Normalized Flux (mean r band)']\nfig_contents = list(zip(axs, ztf_data, ylabels))\n\nfor i, l in enumerate(bands_inlc):\n    s = int(np.shape(dat)[1]/len(bands_inlc))\n    first = int(i*s)\n    last = first+s\n    for ax, ydata, ylabel in fig_contents:\n        ax.plot(np.linspace(first, last, s), ydata[r, first:last], 'o', linestyle='--', label=l)\n        ax.set_xlabel(r'Time_[w1, w2, w3]', size=15)\n        ax.set_ylabel(ylabel, size=15)\n_ = axs[0].legend(loc=2)","key":"RzI9PEE0hH"},{"type":"output","id":"RDOyyPjjAtw246vo0BARE","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1800x400 with 3 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"7b72352d6cd21322b36edfe116ef4c15","path":"/fornax-demo-notebooks/build/7b72352d6cd21322b36edfe116ef4c15.png"}}}],"key":"nbii1VBhTq"}],"key":"U8eVvVtSxm"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":256,"column":1},"end":{"line":256,"column":1}},"children":[{"type":"text","value":"3. Learn the Manifold","position":{"start":{"line":256,"column":1},"end":{"line":256,"column":1}},"key":"wZhpsXuntq"}],"identifier":"id-3-learn-the-manifold","label":"3. Learn the Manifold","html_id":"id-3-learn-the-manifold","implicit":true,"key":"lUIRD2VYme"},{"type":"paragraph","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"children":[{"type":"text","value":"Now we can train a UMAP with the processed data vectors above. Different choices for the number of neighbors, minimum distance and metric can be made and a parameter space can be explored. We show here our preferred combination given this data. We choose manhattan distance (also called ","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"key":"So9D7VSgJh"},{"type":"link","url":"https://en.wikipedia.org/wiki/Taxicab_geometry","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"children":[{"type":"text","value":"the L1 distance","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"key":"OCHJsnf3bi"}],"urlSource":"https://en.wikipedia.org/wiki/Taxicab_geometry","data":{"page":"Taxicab_geometry","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"iqZ43O9rhh"},{"type":"text","value":") as it is optimal for the kind of grid we interpolated on, for instance we want the distance to not change if there are observations missing. Another metric appropriate for our purpose in time domain analysis is Dynamic Time Warping (","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"key":"fA0tsO8kmY"},{"type":"link","url":"https://en.wikipedia.org/wiki/Dynamic_time_warping","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"children":[{"type":"text","value":"DTW","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"key":"YWfgTSMHTP"}],"urlSource":"https://en.wikipedia.org/wiki/Dynamic_time_warping","data":{"page":"Dynamic_time_warping","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"JYdLS5TDw6"},{"type":"text","value":"), which is insensitive to a shift in time. This is helpful as we interpolate the observations onto a grid starting from time 0 and when discussing variability we care less about when it happens and more about whether and how strong it happened. As the measurement of the DTW distance takes longer compared to the other metrics we show examples here with manhattan and only show one example exploring the parameter space including a DTW metric in the last cell of this notebook.","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"key":"nMfoEaffu0"}],"key":"CI9iSYSTyg"}],"key":"OlHjjmYAsy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(18, 6))\nmarkersize=200\nmapper = umap.UMAP(n_neighbors=50, min_dist=0.9, metric='manhattan', random_state=20).fit(data)\n\n\nax1 = plt.subplot(1, 3, 2)\nax1.set_title(r'mean brightness', size=20)\ncf = ax1.scatter(mapper.embedding_[:, 0], mapper.embedding_[:, 1], s=markersize,\n                 c=np.log10(np.nansum(meanarray, axis=0)), edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax1)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\n\nax0 = plt.subplot(1, 3, 3)\nax0.set_title(r'mean fractional variation', size=20)\ncf = ax0.scatter(mapper.embedding_[:, 0], mapper.embedding_[:, 1], s=markersize,\n                 c=stretch_small_values_arctan(np.nansum(fvar_arr, axis=0), factor=3),\n                 edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax0)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\nax2 = plt.subplot(1, 3, 1)\nax2.set_title('sample origin', size=20)\ncounts = 1\nfor label, indices in labc.items():\n    cf = ax2.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=markersize,\n                     c=colors[counts], alpha=0.5, edgecolor='gray', label=label)\n    counts += 1\nplt.legend(fontsize=12)\n#plt.colorbar(cf)\nplt.axis('off')\n\nplt.tight_layout()\n#plt.savefig('umap-ztf.png')","key":"DEcJePZKeG"},{"type":"output","id":"pcxhI09DoVscynFNZ_1Z9","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1800x600 with 5 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"4b43acabbe3eae696da0f9bb04c4b45b","path":"/fornax-demo-notebooks/build/4b43acabbe3eae696da0f9bb04c4b45b.png"}}}],"key":"cXacCdders"}],"key":"ee2XIVPK7D"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"text","value":"The left panel is colorcoded by the origin of the sample. The middle panel shows the sum of mean brightnesses in three bands (arbitrary unit) demonstrating that after normalization we see no correlation with brightness. The panel on the right is color coded by a statistical measure of variability (i.e. the fractional variation ","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"TyqsaGa8tU"},{"type":"link","url":"https://ned.ipac.caltech.edu/level5/Sept01/Peterson2/Peter2_1.html","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"text","value":"see here","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"CQKog3upt4"}],"urlSource":"https://ned.ipac.caltech.edu/level5/Sept01/Peterson2/Peter2_1.html","key":"RKzTfntYND"},{"type":"text","value":"). As with the plotting above it is not easy to see all the data points and correlations in the next two cells measure probability of belonging to each original sample as well as the mean statistical property on an interpolated grid on this reduced 2D projected surface.","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"yiJrP5QunF"}],"key":"Bf2rPq7BM1"}],"key":"qasbsoagBC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define a grid\ngrid_resolution = 15# Number of cells in the grid\nx_min, x_max = mapper.embedding_[:, 0].min(), mapper.embedding_[:, 0].max()\ny_min, y_max = mapper.embedding_[:, 1].min(), mapper.embedding_[:, 1].max()\nx_grid = np.linspace(x_min, x_max, grid_resolution)\ny_grid = np.linspace(y_min, y_max, grid_resolution)\nx_centers, y_centers = np.meshgrid(x_grid, y_grid)\n\n# Calculate mean property in each grid cell\nmean_property1, mean_property2 = np.zeros_like(x_centers), np.zeros_like(x_centers)\npropmean=stretch_small_values_arctan(np.nansum(meanarray, axis=0), factor=2)\npropfvar=stretch_small_values_arctan(np.nansum(fvar_arr, axis=0), factor=2)\nfor i in range(grid_resolution - 1):\n    for j in range(grid_resolution - 1):\n        mask = (\n            (mapper.embedding_[:, 0] >= x_grid[i]) &\n            (mapper.embedding_[:, 0] < x_grid[i + 1]) &\n            (mapper.embedding_[:, 1] >= y_grid[j]) &\n            (mapper.embedding_[:, 1] < y_grid[j + 1])\n        )\n        if np.sum(mask) > 0:\n            mean_property1[j, i] = np.mean(propmean[mask])\n            mean_property2[j, i] = np.mean(propfvar[mask])\n\n\nplt.figure(figsize=(12, 4))\nplt.subplot(1, 2, 1)\nplt.title('mean brightness')\ncf = plt.contourf(x_centers, y_centers, mean_property1, cmap='viridis', alpha=0.9)\nplt.axis('off')\ndivider = make_axes_locatable(plt.gca())\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\nplt.subplot(1, 2, 2)\nplt.title('mean fractional variation')\ncf = plt.contourf(x_centers, y_centers, mean_property2, cmap='viridis', alpha=0.9)\nplt.axis('off')\ndivider = make_axes_locatable(plt.gca())\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)","key":"ANSDIizdqD"},{"type":"output","id":"Xe8sFLuPAmlZ4ml9IzSAs","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x400 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"d7f1e2eb05617ead9ea11511b46b5920","path":"/fornax-demo-notebooks/build/d7f1e2eb05617ead9ea11511b46b5920.png"}}}],"key":"QdUgIgxxCf"}],"key":"BMtPH4CXho"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"children":[{"type":"text","value":"3.1 Sample comparison on the UMAP","position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"key":"jFOfIzBRqx"}],"identifier":"id-3-1-sample-comparison-on-the-umap","label":"3.1 Sample comparison on the UMAP","html_id":"id-3-1-sample-comparison-on-the-umap","implicit":true,"key":"PrAp0TXec7"}],"key":"CQcEd38QBL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculate 2D histogram\nhist, x_edges, y_edges = np.histogram2d(mapper.embedding_[:, 0], mapper.embedding_[:, 1], bins=12)\nplt.figure(figsize=(15, 12))\ni=1\nax0 = plt.subplot(4, 4, 12)\nfor label, indices in sorted(labc.items()):\n    hist_per_cluster, _, _ = np.histogram2d(mapper.embedding_[indices, 0],\n                                            mapper.embedding_[indices, 1],\n                                            bins=(x_edges, y_edges))\n    prob = hist_per_cluster / hist\n    plt.subplot(4, 4, i)\n    plt.title(label)\n    plt.contourf(x_edges[:-1], y_edges[:-1], prob.T, levels=20, alpha=0.8, cmap=custom_cmap)\n    plt.colorbar()\n    plt.axis('off')\n    cf = ax0.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n                     alpha=0.5, edgecolor='gray', label=label, c=colors[i-1])\n    i += 1\nax0.legend(loc=4, fontsize=7)\nax0.axis('off')\nplt.tight_layout()","key":"XopQlqEgUs"},{"type":"output","id":"ULeJDAUF-qf5C029A-fxv","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/3793995111.py:10: RuntimeWarning: invalid value encountered in divide\n  prob = hist_per_cluster / hist\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1200 with 23 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"f69e7e999f8113860bb431b5637076b5","path":"/fornax-demo-notebooks/build/f69e7e999f8113860bb431b5637076b5.png"}}}],"key":"fzpARtgOB5"}],"key":"xpi4PDafYH"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":373,"column":1},"end":{"line":373,"column":1}},"children":[{"type":"text","value":"Figure above shows how with ZTF light curves alone we can separate some of these AGN samples, where they have overlaps. We can do a similar exercise with other dimensionality reduction techniques. Below we show two SOMs one with normalized and another with no normalization. The advantage of Umaps to SOMs is that in practice you may change the parameters to separate classes of vastly different data points, as distance is preserved on a umap. On a SOM however only topology of higher dimensions is preserved and not distance hence, the change on the 2d grid does not need to be smooth and from one cell to next there might be larg jumps. On the other hand, an advantage of the SOM is that by definition it has a grid and no need for a posterior interpolation (as we did above) is needed to map more data or to measure probabilities, etc.","position":{"start":{"line":373,"column":1},"end":{"line":373,"column":1}},"key":"G5hk0ABrlw"}],"key":"mD1hGbq7DK"},{"type":"heading","depth":3,"position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"children":[{"type":"text","value":"3.2 Reduced dimensions on a SOM grid","position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"key":"TmJFDzHOh8"}],"identifier":"id-3-2-reduced-dimensions-on-a-som-grid","label":"3.2 Reduced dimensions on a SOM grid","html_id":"id-3-2-reduced-dimensions-on-a-som-grid","implicit":true,"key":"kUFZoqDkiS"}],"key":"tPJmKqpLlh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialization and training\nmsz0, msz1 = 15, 15\nsom = MiniSom(msz0, msz1, data.shape[1], sigma=1.5, learning_rate=.5,\n              neighborhood_function='gaussian', random_seed=0, topology='rectangular')\n\nsom.pca_weights_init(data)\nsom.train(data, 100000, verbose=False)  # random training","key":"Ipzu1vff76"},{"type":"output","id":"vedmDSvy-VTKFP-jlgbVP","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/minisom.py:447: ComplexWarning: Casting complex values to real discards the imaginary part\n  self._weights[i, j] = c1*pc[pc_order[0]] + \\\n"}],"key":"hT1kx1cXSz"}],"key":"MBYLwCUdFl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"laborder = ['SDSS_QSO', 'SPIDER_AGN', 'SPIDER_BL', 'SPIDER_QSOBL', 'SPIDER_AGNBL',\n            'WISE_Variable', 'Optical_Variable', 'Galex_Variable', 'Turn-on', 'Turn-off', 'TDE']\n\n\n# Create grid to hold mean fvar per SOM node\nmean_fvar_map = np.full((msz0, msz1), np.nan)\n\n# Create helper to accumulate fvar values in each cell\ncell_fvar = defaultdict(list)\n\n# First, map each data point to its BMU and store its fvar\npropfvar=stretch_small_values_arctan(np.nansum(fvar_arr, axis=0), factor=2)\nfor i in range(len(data)):\n    bmu = som.winner(data[i])  # returns (x, y)\n    fvar_value = fvar_arr[i] if np.ndim(fvar_arr) == 1 else np.mean(propfvar[i])\n    cell_fvar[bmu].append(fvar_value)\n\n# Now compute mean per cell\nfor (x, y), values in cell_fvar.items():\n    mean_fvar_map[x, y] = np.nanmean(values)\n\n# apply stretching for visualization\nheatmap = stretch_small_values_arctan(mean_fvar_map)\nncols = 4\nnrows = int(np.ceil(len(laborder) / ncols))\nfig, axs = plt.subplots(nrows, ncols, figsize=(3*ncols, 3*nrows))\naxs = axs.flatten()\n\nfor i, label in enumerate(laborder):\n    ax = axs[i]\n    im = ax.imshow(heatmap.T, origin='lower', cmap='plasma')\n\n    if label in labc:\n        for idx in labc[label]:\n            x, y = som.winner(data[idx])\n            ax.plot(x, y, 'x', color='white', markersize=8, markeredgewidth=2)\n\n    ax.set_title(label)\n    ax.set_xticks([])\n    ax.set_yticks([])\n\n# Hide the extra subplot if laborder < nrows * ncols\nif len(laborder) < len(axs):\n    axs[len(laborder)].axis('off')\n\n# Colorbar outside the plot grid\n# Adjust position as needed (here it's to the right)\ncbar_ax = fig.add_axes([0.99, 0.05, 0.02, 0.9])  # [left, bottom, width, height]\ncbar = fig.colorbar(im, cax=cbar_ax)\ncbar.set_label('Mean Fractional Variability')\n\nplt.subplots_adjust(right=0.9)  # Leave space for colorbar\nplt.tight_layout()\nplt.show()","key":"sVHWLw3HIy"},{"type":"output","id":"pY-JrigYmfRvVWMPCca05","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/2599028209.py:53: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.\n  plt.tight_layout()\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x900 with 13 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"a97d2f2fbb853912b5d59d64c971bbae","path":"/fornax-demo-notebooks/build/a97d2f2fbb853912b5d59d64c971bbae.png"}}}],"key":"lMIJekrGE5"}],"key":"rmGO4nPhXf"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":444,"column":1},"end":{"line":444,"column":1}},"children":[{"type":"text","value":"The above SOMs are colored by the mean fractional variation of the lightcurves in all bands (a measure of AGN variability). The crosses are different samples mapped to the trained SOM to see if they are distinguishable on a normalized lightcurve som.","position":{"start":{"line":444,"column":1},"end":{"line":444,"column":1}},"key":"uNpIADtwQ6"}],"key":"bbX6HEUUSf"}],"key":"QnH7whtJlY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# shuffle data in case the ML routines are sensitive to order\ndata, fzr, p = shuffle_datalabel(dat_notnormal, flabels)\nfvar_arr, maximum_arr, average_arr = fvar[:, p], maxarray[:, p], meanarray[:, p]\n# Initialize labc to hold indices of each unique label\nlabc = {}\nfor index, f in enumerate(fzr):\n    lab = translate_bitwise_sum_to_labels(int(f))\n    for label in lab:\n        if label not in labc:\n            # Initialize the list for this label if it's not already in labc\n            labc[label] = []\n        # Append the current index to the list of indices for this label\n        labc[label].append(index)\n\nsom = MiniSom(msz0, msz1, data.shape[1], sigma=1.5, learning_rate=.5,\n              neighborhood_function='gaussian', random_seed=0, topology='rectangular')\n\nsom.pca_weights_init(data)\nsom.train(data, 100000, verbose=False)  # random training","key":"C85mADVsKg"},{"type":"output","id":"Lfl7NIOasx0I0SBqbNUFx","data":[],"key":"n6LHeynRlW"}],"key":"YCokN789bH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create grid to hold mean fvar per SOM node\nmean_fvar_map = np.full((msz0, msz1), np.nan)\n\n# Create helper to accumulate fvar values in each cell\ncell_fvar = defaultdict(list)\n\n# First, map each data point to its BMU and store its fvar\npropfvar=stretch_small_values_arctan(np.nansum(fvar_arr, axis=0), factor=2)\nfor i in range(len(data)):\n    bmu = som.winner(data[i])  # returns (x, y)\n    fvar_value = fvar_arr[i] if np.ndim(fvar_arr) == 1 else np.mean(propfvar[i])\n    cell_fvar[bmu].append(fvar_value)\n\n# Now compute mean per cell\nfor (x, y), values in cell_fvar.items():\n    mean_fvar_map[x, y] = np.nanmean(values)\n\n# apply stretching for visualization\nheatmap = stretch_small_values_arctan(mean_fvar_map)\nncols = 4\nnrows = int(np.ceil(len(laborder) / ncols))\nfig, axs = plt.subplots(nrows, ncols, figsize=(3*ncols, 3*nrows))\naxs = axs.flatten()\n\nfor i, label in enumerate(laborder):\n    ax = axs[i]\n    im = ax.imshow(heatmap.T, origin='lower', cmap='plasma')\n\n    if label in labc:\n        for idx in labc[label]:\n            x, y = som.winner(data[idx])\n            ax.plot(x, y, 'x', color='white', markersize=8, markeredgewidth=2)\n\n    ax.set_title(label)\n    ax.set_xticks([])\n    ax.set_yticks([])\n\n# Hide the extra subplot if laborder < nrows * ncols\nif len(laborder) < len(axs):\n    axs[len(laborder)].axis('off')\n\n# Colorbar outside the plot grid\n# Adjust position as needed (here it's to the right)\ncbar_ax = fig.add_axes([0.99, 0.05, 0.02, 0.9])  # [left, bottom, width, height]\ncbar = fig.colorbar(im, cax=cbar_ax)\ncbar.set_label('Mean Fractional Variability')\n\nplt.subplots_adjust(right=0.9)  # Leave space for colorbar\nplt.tight_layout()\nplt.show()","key":"hk1k7xN0bt"},{"type":"output","id":"pmWQMs2XKU0y02-g4AGNO","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/1301010532.py:49: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.\n  plt.tight_layout()\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x900 with 13 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ce088a95ae265ff49884c2facc203199","path":"/fornax-demo-notebooks/build/ce088a95ae265ff49884c2facc203199.png"}}}],"key":"ez9q8l2ro5"}],"key":"IDM4YfeMFW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"labels = [None] * len(data)\nfor label in laborder:\n    if label in labc:\n        for idx in labc[label]:\n            labels[idx] = label\n\nlabels_map = defaultdict(Counter)\n\nfor x, label in zip(data, labels):\n    if label is not None:\n        w = som.winner(x)\n        labels_map[w][label] += 1\n\nfig = plt.figure(figsize=(12, 12))\nthe_grid = gridspec.GridSpec(msz0, msz1, fig)\n\nfor position in labels_map.keys():\n    label_counts = labels_map[position]\n    total = sum(label_counts.values())\n\n    # Use consistent order from laborder\n    fracs = [label_counts.get(label, 0) / total for label in laborder]\n\n    ax = plt.subplot(the_grid[msz1 - 1 - position[1], position[0]], aspect=1)\n    patches, _ = ax.pie(fracs)\n    #ax.set_title(f\"{position}\", fontsize=6)\n    ax.axis('equal')\n\n# Legend outside\nplt.legend(patches, laborder, bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=8)\nplt.tight_layout()\nplt.show()","key":"caUCfPI9Ec"},{"type":"output","id":"T_RXGw0zFIdgxKeLzT4IA","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/2695913503.py:31: UserWarning: Tight layout not applied. tight_layout cannot make Axes width small enough to accommodate all Axes decorations\n  plt.tight_layout()\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x1200 with 223 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"3f13e98c413f115b76116543c7d946bc","path":"/fornax-demo-notebooks/build/3f13e98c413f115b76116543c7d946bc.png"}}}],"key":"Djy6q5jvwe"}],"key":"V9l52xfGcM"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":556,"column":1},"end":{"line":556,"column":1}},"children":[{"type":"text","value":"skipping the normalization of lightcurves, further separates turn on/off CLAGNs when looking at ZTF lightcurves only.","position":{"start":{"line":556,"column":1},"end":{"line":556,"column":1}},"key":"TISoEteo1C"}],"key":"COqgUXGWw2"},{"type":"heading","depth":2,"position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"text","value":"4. Repeating the above, this time with ZTF + WISE manifold","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"PZpurExudg"}],"identifier":"id-4-repeating-the-above-this-time-with-ztf-wise-manifold","label":"4. Repeating the above, this time with ZTF + WISE manifold","html_id":"id-4-repeating-the-above-this-time-with-ztf-wise-manifold","implicit":true,"key":"aRElGTuLlR"}],"key":"d2pIOsEaIS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bands_inlc = ['zg', 'zr', 'zi', 'W1', 'W2']\nobjects, dobjects, flabels, keeps = unify_lc(df_lc, bands_inlc, xres=30, numplots=3)\n# calculate some basic statistics\nfvar, maxarray, meanarray = stat_bands(objects, dobjects, bands_inlc)\ndat_notnormal = combine_bands(objects, bands_inlc)\ndat = normalize_clipmax_objects(dat_notnormal, maxarray, band=-1)\ndata, fzr, p = shuffle_datalabel(dat, flabels)\nfvar_arr, maximum_arr, average_arr = fvar[:, p], maxarray[:, p], meanarray[:, p]\n\n# Initialize labc to hold indices of each unique label\nlabc = {}\nfor index, f in enumerate(fzr):\n    lab = translate_bitwise_sum_to_labels(int(f))\n    for label in lab:\n        if label not in labc:\n            # Initialize the list for this label if it's not already in labc\n            labc[label] = []\n        # Append the current index to the list of indices for this label\n        labc[label].append(index)","key":"Pz9VHbjgNz"},{"type":"output","id":"1aEcuWwDq6diJVaP1ILBK","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"0it [00:00, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"d47efb8b3e494146b6639364bf8ab67e\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"869e39153ed14aab3e03398f8ddddb6f","path":"/fornax-demo-notebooks/build/869e39153ed14aab3e03398f8ddddb6f.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"524df0a8325b9f1d8d23d2f538c5f09f","path":"/fornax-demo-notebooks/build/524df0a8325b9f1d8d23d2f538c5f09f.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"73d6a1e851ea8a828abcebe9f6da483f","path":"/fornax-demo-notebooks/build/73d6a1e851ea8a828abcebe9f6da483f.png"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/code_src/AGNzoo_functions.py:290: RuntimeWarning: invalid value encountered in sqrt\n  fvar = (np.sqrt(varf - deltaf)) / meanf\n"}],"key":"JUv25r8570"}],"key":"o6HDpa4KxQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(18, 6))\nmarkersize=200\nmapper = umap.UMAP(n_neighbors=50, min_dist=0.9, metric='manhattan', random_state=4).fit(data)\n# using dtw distance takes a long time\n# mapper = umap.UMAP(n_neighbors=50, min_dist=0.9, metric=dtw_distance, random_state=20).fit(data)\n\n\nax1 = plt.subplot(1, 3, 2)\nax1.set_title(r'mean brightness', size=20)\ncf = ax1.scatter(mapper.embedding_[:, 0], mapper.embedding_[:, 1], s=markersize,\n                 c=np.log10(np.nansum(meanarray, axis=0)), edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax1)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\n\nax0 = plt.subplot(1, 3, 3)\nax0.set_title(r'mean fractional variation', size=20)\ncf = ax0.scatter(mapper.embedding_[:, 0], mapper.embedding_[:, 1], s=markersize,\n                 c=stretch_small_values_arctan(np.nansum(fvar_arr, axis=0), factor=3),\n                 edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax0)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\nax2 = plt.subplot(1, 3, 1)\nax2.set_title('sample origin', size=20)\ncounts = 1\nfor label, indices in labc.items():\n    cf = ax2.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=markersize,\n                     c=colors[counts], alpha=0.5, edgecolor='gray', label=label)\n    counts += 1\nplt.legend(fontsize=12)\n#plt.colorbar(cf)\nplt.axis('off')\n\nplt.tight_layout()","key":"MIozpXLxo3"},{"type":"output","id":"KlkDk6fTx7HtXeEURioR8","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1800x600 with 5 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"674abb16cbb6d098735b045b7c16af22","path":"/fornax-demo-notebooks/build/674abb16cbb6d098735b045b7c16af22.png"}}}],"key":"IxX0ANdt8z"}],"key":"JhckoX0B6M"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculate 2D histogram\nhist, x_edges, y_edges = np.histogram2d(mapper.embedding_[:, 0], mapper.embedding_[:, 1], bins=12)\nplt.figure(figsize=(15, 12))\ni=1\nax0 = plt.subplot(4, 4, 12)\nfor label, indices in sorted(labc.items()):\n    hist_per_cluster, _, _ = np.histogram2d(mapper.embedding_[indices, 0],\n                                            mapper.embedding_[indices, 1],\n                                            bins=(x_edges, y_edges))\n    prob = hist_per_cluster / hist\n    plt.subplot(4, 4, i)\n    plt.title(label)\n    plt.contourf(x_edges[:-1], y_edges[:-1], prob.T, levels=20, alpha=0.8, cmap=custom_cmap)\n    plt.colorbar()\n    plt.axis('off')\n    cf = ax0.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n                     alpha=0.5, edgecolor='gray', label=label, c=colors[i-1])\n    i += 1\nax0.legend(loc=4, fontsize=7)\nax0.axis('off')\nplt.tight_layout()","key":"og70jv2LUQ"},{"type":"output","id":"hBgvNyxhK9cBIR7wNDHFd","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/3793995111.py:10: RuntimeWarning: invalid value encountered in divide\n  prob = hist_per_cluster / hist\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1200 with 23 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"4db66b895781a32a4b4ea2b49ff66ea5","path":"/fornax-demo-notebooks/build/4db66b895781a32a4b4ea2b49ff66ea5.png"}}}],"key":"UP7hOG9jMn"}],"key":"QhWhsdpUoP"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":648,"column":1},"end":{"line":648,"column":1}},"children":[{"type":"text","value":"5. Wise bands alone","position":{"start":{"line":648,"column":1},"end":{"line":648,"column":1}},"key":"jkSCaGvuHs"}],"identifier":"id-5-wise-bands-alone","label":"5. Wise bands alone","html_id":"id-5-wise-bands-alone","implicit":true,"key":"Ti5oUhHMu3"}],"key":"rKVKUNPycZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bands_inlcw = ['W1', 'W2']\nobjectsw, dobjectsw, flabelsw, keepsw = unify_lc(df_lc, bands_inlc, xres=30)\n# calculate some basic statistics\nfvarw, maxarrayw, meanarrayw = stat_bands(objectsw, dobjectsw, bands_inlcw)\ndat_notnormalw = combine_bands(objects, bands_inlcw)\ndatw = normalize_clipmax_objects(dat_notnormalw, maxarrayw, band=-1)\ndataw, fzrw, pw = shuffle_datalabel(datw, flabelsw)\nfvar_arrw, maximum_arrw, average_arrw = fvarw[:, pw], maxarrayw[:, pw], meanarrayw[:, pw]\n\n# Initialize labc to hold indices of each unique label\nlabcw = {}\nfor index, f in enumerate(fzrw):\n    lab = translate_bitwise_sum_to_labels(int(f))\n    for label in lab:\n        if label not in labcw:\n            # Initialize the list for this label if it's not already in labc\n            labcw[label] = []\n        # Append the current index to the list of indices for this label\n        labcw[label].append(index)","key":"JizCfyLXDl"},{"type":"output","id":"zJQ_rS11GvcML0JUzzAye","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"0it [00:00, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"8b9cd0ad593b404a9c96c23bc4333b03\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"869e39153ed14aab3e03398f8ddddb6f","path":"/fornax-demo-notebooks/build/869e39153ed14aab3e03398f8ddddb6f.png"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/code_src/AGNzoo_functions.py:290: RuntimeWarning: invalid value encountered in sqrt\n  fvar = (np.sqrt(varf - deltaf)) / meanf\n"}],"key":"iAzwE18GBd"}],"key":"z5n6IPyKJF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(18, 6))\nmarkersize=200\nmapp = umap.UMAP(n_neighbors=50, min_dist=0.9, metric='manhattan', random_state=20).fit(dataw)\n\n\nax1 = plt.subplot(1, 3, 2)\nax1.set_title(r'mean brightness', size=20)\ncf = ax1.scatter(mapp.embedding_[:, 0], mapp.embedding_[:, 1], s=markersize,\n                 c=np.log10(np.nansum(meanarrayw, axis=0)), edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax1)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\n\nax0 = plt.subplot(1, 3, 3)\nax0.set_title(r'mean fractional variation', size=20)\ncf = ax0.scatter(mapp.embedding_[:, 0], mapp.embedding_[:, 1], s=markersize,\n                 c=stretch_small_values_arctan(np.nansum(fvar_arrw, axis=0), factor=3),\n                 edgecolor='gray')\nplt.axis('off')\ndivider = make_axes_locatable(ax0)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\nplt.colorbar(cf, cax=cax)\n\nax2 = plt.subplot(1, 3, 1)\nax2.set_title('sample origin', size=20)\ncounts = 1\nfor label, indices in labcw.items():\n    cf = ax2.scatter(mapp.embedding_[indices, 0], mapp.embedding_[indices, 1], s=markersize,\n                     c=colors[counts], alpha=0.5, edgecolor='gray', label=label)\n    counts += 1\nplt.legend(fontsize=12)\n#plt.colorbar(cf)\nplt.axis('off')\n\nplt.tight_layout()","key":"o2JAeglWMI"},{"type":"output","id":"6Dh8UDYm4cfko8jmo9o_6","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1800x600 with 5 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5939f5e80f0f98217beae6761fbd50a3","path":"/fornax-demo-notebooks/build/5939f5e80f0f98217beae6761fbd50a3.png"}}}],"key":"beHRaoU5dF"}],"key":"pCzVHa1i8m"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculate 2D histogram\nhist, x_edges, y_edges = np.histogram2d(mapp.embedding_[:, 0], mapp.embedding_[:, 1], bins=12)\nplt.figure(figsize=(15, 12))\ni=1\nax0 = plt.subplot(4, 4, 12)\nfor label, indices in sorted(labcw.items()):\n    hist_per_cluster, _, _ = np.histogram2d(mapp.embedding_[indices, 0],\n                                            mapp.embedding_[indices, 1],\n                                            bins=(x_edges, y_edges))\n    prob = hist_per_cluster / hist\n    plt.subplot(4, 4, i)\n    plt.title(label)\n    plt.contourf(x_edges[:-1], y_edges[:-1], prob.T, levels=20, alpha=0.8, cmap=custom_cmap)\n    plt.colorbar()\n    plt.axis('off')\n    cf = ax0.scatter(mapp.embedding_[indices, 0], mapp.embedding_[indices, 1], s=80,\n                     alpha=0.5, edgecolor='gray', label=label, c=colors[i-1])\n    i += 1\nax0.legend(loc=4, fontsize=7)\nax0.axis('off')\nplt.tight_layout()","key":"doGTWHuplN"},{"type":"output","id":"q0fpMcvISkPlrKONNP8zx","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2657/3463858432.py:10: RuntimeWarning: invalid value encountered in divide\n  prob = hist_per_cluster / hist\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1200 with 23 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"97e533dd15bf37300eda22d0c4b51319","path":"/fornax-demo-notebooks/build/97e533dd15bf37300eda22d0c4b51319.png"}}}],"key":"EcgrF03BG7"}],"key":"aQxeTcfbnV"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":736,"column":1},"end":{"line":736,"column":1}},"children":[{"type":"text","value":"6. UMAP with different metrics/distances on ZTF+WISE","position":{"start":{"line":736,"column":1},"end":{"line":736,"column":1}},"key":"pwnYsKN8Z4"}],"identifier":"id-6-umap-with-different-metrics-distances-on-ztf-wise","label":"6. UMAP with different metrics/distances on ZTF+WISE","html_id":"id-6-umap-with-different-metrics-distances-on-ztf-wise","implicit":true,"key":"hmMKAZl6bf"},{"type":"paragraph","position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"children":[{"type":"text","value":"DTW takes a bit longer compared to other metrics, so it is commented out in the cell below.","position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"key":"uIyW7suRdp"}],"key":"tNITSIGpc6"}],"key":"DJrCgssMux"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(12, 10))\nmarkersize=200\n\nmapper = umap.UMAP(n_neighbors=50, min_dist=0.9, metric='euclidean', random_state=20).fit(data)\nax0 = plt.subplot(2, 2, 1)\nax0.set_title(r'Euclidean Distance, min_d=0.9, n_neighbors=50', size=12)\nfor label, indices in (labc.items()):\n     cf = ax0.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n                      alpha=0.5, edgecolor='gray', label=label)\nplt.axis('off')\n\nmapper = umap.UMAP(n_neighbors=50, min_dist=0.9, metric='manhattan', random_state=20).fit(data)\nax0 = plt.subplot(2, 2, 2)\nax0.set_title(r'Manhattan Distance, min_d=0.9, n_neighbors=50', size=12)\nfor label, indices in (labc.items()):\n     cf = ax0.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n                      alpha=0.5, edgecolor='gray', label=label)\nplt.axis('off')\n\n\n# This distance takes long\n# mapperg = umap.UMAP(n_neighbors=50, min_dist=0.9, metric=dtw_distance, random_state=20).fit(data)\n# ax2 = plt.subplot(2, 2, 3)\n# ax2.set_title(r'DTW Distance, min_d=0.9, n_neighbors=50', size=12)\n# for label, indices in (labc.items()):\n#      cf = ax2.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n#                       alpha=0.5, edgecolor='gray', label=label)\n# plt.axis('off')\n\n\nmapper = umap.UMAP(n_neighbors=50, min_dist=0.1, metric='manhattan', random_state=20).fit(data)\nax0 = plt.subplot(2, 2, 4)\nax0.set_title(r'Manhattan Distance, min_d=0.1, n_neighbors=50', size=12)\nfor label, indices in (labc.items()):\n     cf = ax0.scatter(mapper.embedding_[indices, 0], mapper.embedding_[indices, 1], s=80,\n                      alpha=0.5, edgecolor='gray', label=label)\nplt.legend(fontsize=12)\nplt.axis('off')","key":"XvNMCGWHT9"},{"type":"output","id":"pkI1GhQF7oMHZTfX_HTX0","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/umap/umap_.py:1952: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(\n"},{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(np.float64(-44.71760807037354),\n np.float64(-36.879533195495604),\n np.float64(1.8234034895896911),\n np.float64(18.617525684833527))","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x1000 with 3 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1a158b4ee5d6afe71c3ea05f8320336c","path":"/fornax-demo-notebooks/build/1a158b4ee5d6afe71c3ea05f8320336c.png"}}}],"key":"AWZ1YNQFBd"}],"key":"NNpdzuYnxH"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":781,"column":1},"end":{"line":781,"column":1}},"children":[{"type":"text","value":"About this notebook","position":{"start":{"line":781,"column":1},"end":{"line":781,"column":1}},"key":"PI8QYsqmem"}],"identifier":"about-this-notebook","label":"About this notebook","html_id":"about-this-notebook","implicit":true,"key":"DtvZuBvQR0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":783,"column":1},"end":{"line":785,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":783,"column":1},"end":{"line":783,"column":1}},"children":[{"type":"strong","position":{"start":{"line":783,"column":1},"end":{"line":783,"column":1}},"children":[{"type":"text","value":"Authors:","position":{"start":{"line":783,"column":1},"end":{"line":783,"column":1}},"key":"Oi8YCcFXJL"}],"key":"KfWnmRebSN"},{"type":"text","value":" Shoubaneh Hemmati (IRSA Research Scientist) and the Fornax team","position":{"start":{"line":783,"column":1},"end":{"line":783,"column":1}},"key":"Bl2GwjRRB9"}],"key":"K2uyJjJGMQ"},{"type":"listItem","spread":true,"position":{"start":{"line":784,"column":1},"end":{"line":785,"column":1}},"children":[{"type":"strong","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"children":[{"type":"text","value":"Contact:","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"key":"uqbduTZvUR"}],"key":"ocvSO0A2PK"},{"type":"text","value":" For help with this notebook, please open a topic in the ","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"key":"L55keWu9R8"},{"type":"link","url":"https://discourse.fornax.sciencecloud.nasa.gov/","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"children":[{"type":"text","value":"Fornax Community Forum","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"key":"O7G8zntEtq"}],"urlSource":"https://discourse.fornax.sciencecloud.nasa.gov/","key":"o2edppT9R6"},{"type":"text","value":" “Support” category.","position":{"start":{"line":784,"column":1},"end":{"line":784,"column":1}},"key":"ouEY8VzzQQ"}],"key":"JATd9OdoOC"}],"key":"lSPFmj1Txo"},{"type":"heading","depth":3,"position":{"start":{"line":786,"column":1},"end":{"line":786,"column":1}},"children":[{"type":"text","value":"Acknowledgements","position":{"start":{"line":786,"column":1},"end":{"line":786,"column":1}},"key":"wWJzqpMMnj"}],"identifier":"acknowledgements","label":"Acknowledgements","html_id":"acknowledgements","implicit":true,"key":"tZdFj5L9ZV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":788,"column":1},"end":{"line":789,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":788,"column":1},"end":{"line":789,"column":1}},"children":[{"type":"text","value":"Parts of this notebook will be presented in Hemmati et al. (in prep)","position":{"start":{"line":788,"column":1},"end":{"line":788,"column":1}},"key":"bxTNTM45mH"}],"key":"pcOO4NZbBT"}],"key":"s17ayrXQJa"},{"type":"heading","depth":3,"position":{"start":{"line":790,"column":1},"end":{"line":790,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":790,"column":1},"end":{"line":790,"column":1}},"key":"nGP0wONMiM"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"mNAT3K9r4A"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":792,"column":1},"end":{"line":793,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":792,"column":1},"end":{"line":792,"column":1}},"children":[{"type":"link","url":"https://github.com/JustGlowing/minisom","position":{"start":{"line":792,"column":1},"end":{"line":792,"column":1}},"children":[{"type":"inlineCode","value":"minisom","position":{"start":{"line":792,"column":1},"end":{"line":792,"column":1}},"key":"lOKOQ46sXC"}],"urlSource":"https://github.com/JustGlowing/minisom","error":true,"key":"PG64EYqOxj"}],"key":"UgyFkoiqOD"},{"type":"listItem","spread":true,"position":{"start":{"line":793,"column":1},"end":{"line":793,"column":1}},"children":[{"type":"link","url":"https://github.com/lmcinnes/umap","position":{"start":{"line":793,"column":1},"end":{"line":793,"column":1}},"children":[{"type":"inlineCode","value":"umap","position":{"start":{"line":793,"column":1},"end":{"line":793,"column":1}},"key":"ZQfjGqiXz9"}],"urlSource":"https://github.com/lmcinnes/umap","error":true,"key":"yY1cu90ECq"}],"key":"g99iRmXuiB"}],"key":"fE5i9bLJMp"}],"key":"ljCsOavvbj"}],"key":"BkZil4dbdq"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Light Curve Classifier","url":"/light-curve-classifier","group":"The Fornax Initiative"},"next":{"title":"Spectroscopy","url":"/readme-1","group":"The Fornax Initiative"}}},"domain":"http://localhost:3000"}