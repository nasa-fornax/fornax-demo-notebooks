{"version":2,"kind":"Notebook","sha256":"14f0467d8ac37fc05b3cbc3f017dcb3d33bc57a7510cd9e26a27388a5883b189","slug":"scale-up","location":"/light_curves/scale_up.md","dependencies":[],"frontmatter":{"title":"Make Multi-Wavelength Light Curves for Large Samples","kernelspec":{"name":"python3","display_name":"py-scale_up","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.16.1"}},"content_includes_title":false,"authors":[{"id":"Fornax developers and scientists","name":"Fornax developers and scientists"}],"github":"https://github.com/nasa-fornax/fornax-demo-notebooks","subject":"Fornax Demo Notebooks","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/nasa-fornax/fornax-demo-notebooks/blob/main/light_curves/scale_up.md","exports":[{"format":"md","filename":"scale_up.md","url":"/fornax-demo-notebooks/build/scale_up-082f2decffc2dbc80408540e8a344a54.md"}]},"mdast":{"type":"root","children":[{"type":"block","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Learning Goals","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"w9ufDF0dlu"}],"identifier":"learning-goals","label":"Learning Goals","html_id":"learning-goals","implicit":true,"key":"p62hmH3xrU"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"By the end of this tutorial, you will be able to:","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"oaxRL2w48a"}],"key":"g6c2U8tigh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":25,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Parallelize the code demonstrated in the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"k45t9wA1hL"},{"type":"link","url":"/light-curve-collector","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"light​_curve​_collector","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"z0YPj2JWmB"}],"urlSource":"light_curve_collector.md","dataUrl":"/light-curve-collector.json","internal":true,"protocol":"file","key":"VRswYAw1YY"},{"type":"text","value":" notebook to get multi-wavelength light curves.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"YlOKYYNnm8"}],"key":"D6ciphArCk"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Launch a run using a large sample of objects, monitor the run’s progress automatically, and understand its resource usage (CPU and RAM).","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"Tk1YcA60ae"}],"key":"bDD5J0uFZJ"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Understand some general challenges and requirements when scaling up code.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"uSVn6wGugt"}],"key":"V6lszxdzVA"}],"key":"Lshj0P7idN"}],"key":"Y5x29HOybJ"},{"type":"block","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"HcrGrXZbec"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"swFuGbM2xw"}],"key":"Fd7ihHn8zU"},{"type":"block","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"This notebook shows how to collect multi-wavelength light curves for a large sample of target objects.\nThis is a scaling-up of the ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"m2OUU8hMdr"},{"type":"link","url":"/light-curve-collector","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"light​_curve​_collector","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"tTJAJPtM6w"}],"urlSource":"light_curve_collector.md","dataUrl":"/light-curve-collector.json","internal":true,"protocol":"file","key":"mdz6AZrlFK"},{"type":"text","value":" and assumes you are familiar with the content of that notebook.","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"pbfuNImg4Q"}],"key":"kgRcsXy73r"},{"type":"paragraph","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Notebook sections are:","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"IPxK6DVb5s"}],"key":"PPhoKLTZ0N"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":40,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Overview: Describes functionality of the included bash script and python helper functions. Compares some parallel processing options. Introduces ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"AHdTBdqvCY"},{"type":"inlineCode","value":"top","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"cs8eunZ0Db"},{"type":"text","value":" and what be aware of.","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"XjW3OLx3Z1"}],"key":"tqkOpbLcmG"},{"type":"listItem","spread":true,"position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"text","value":"Example 1: Shows how to launch a large-scale run using the bash script, monitor its progress automatically, and diagnose a problem (out of RAM). This method is recommended for sample sizes greater than a few hundred.","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"pDu1QJsy5H"}],"key":"eJ2mMpnMJd"},{"type":"listItem","spread":true,"position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Example 2: Shows how to parallelize the example from the light_curve_collector notebook using the helper and python’s ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"hriFdlAUE1"},{"type":"inlineCode","value":"multiprocessing","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Jkl625DSIB"},{"type":"text","value":" library.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"x8OeUrZA82"}],"key":"MJKsIkKzUE"},{"type":"listItem","spread":true,"position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"Example 3: Details the helper parameter options and how to use them in python and bash.","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"ikRzpoBkqJ"}],"key":"weXnEMKXvc"},{"type":"listItem","spread":true,"position":{"start":{"line":44,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"Appendix: Contains background information including a discussion of the challenges, needs, and wants encountered when scaling up this code, and general advice for the user which can be applied to other use cases.","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"i6bcXcCadN"}],"key":"Ryyrhe2GH1"}],"key":"k1lpIhSzZi"},{"type":"paragraph","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"children":[{"type":"text","value":"As written, this notebook is expected to require at least 1 CPU and 6G RAM.","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"ztJSEDUr0Q"}],"key":"OITHFklUX6"},{"type":"paragraph","position":{"start":{"line":48,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"strong","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Many of the bash commands below are shown in non-executable cells because they are not intended to be run in this notebook.","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"Ez8lBOTf1S"}],"key":"mcWGsr1QTo"},{"type":"text","value":"\nBash commands that are not executed below begin with the symbol ","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"D5yp5MCh7y"},{"type":"inlineCode","value":"$ ","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"GVNYfVPelr"},{"type":"text","value":", and those that are executed begin with ","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"u8rRqMcCZu"},{"type":"inlineCode","value":"!","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"mARaD4HYeZ"},{"type":"text","value":".\nBoth types can be called from the command-line -- open a new terminal and copy/paste the cell text without the beginning symbol. The bash script is not intended to be executed from within a notebook and may behave strangely if attempted.\nAlso be aware that the script path shown in the commands below assumes you are in the same directory as this notebook. Adjust it if needed.","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"H2NRfNMnP9"}],"key":"ActNoYlDst"}],"key":"L6zqKA7diI"},{"type":"block","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"Parallel processing methods: bash script vs. python’s ","position":{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},"key":"LnN0c7C8br"},{"type":"inlineCode","value":"multiprocessing","position":{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},"key":"w1yxMHA3j9"}],"identifier":"parallel-processing-methods-bash-script-vs-pythons-multiprocessing","label":"Parallel processing methods: bash script vs. python’s multiprocessing","html_id":"parallel-processing-methods-bash-script-vs-pythons-multiprocessing","implicit":true,"key":"P9ksmLG18f"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":57,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"text","value":"Bash script: Recommended for most runs with medium to large sample sizes (>~500). Allows ZTF to use additional parallelization internally, and so is often faster (ZTF often takes the longest and returns the most data for AGN-like samples). Writes stdout and stderr to log files, useful for monitoring jobs and resource usage. Can save ","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"k3l2Qk9M3m"},{"type":"inlineCode","value":"top","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"PwJLnVjZ7z"},{"type":"text","value":" output to a file to help identify CPU and RAM usage/needs.","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"CdUTGXzm3i"}],"key":"E0yfpdEdp8"},{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"text","value":"Python’s ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"saJGSiIBIX"},{"type":"inlineCode","value":"multiprocessing","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"VL3Q5NFjNF"},{"type":"text","value":" library: Can be convenient for runs with small to medium sample sizes, up to ~500. Has drawbacks that may be significant including the inability to use ZTF’s internal parallelization and that it does not save the log output (stdout and stderr) to file. An advantage of the ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"o8Hqi9gU3K"},{"type":"inlineCode","value":"multiprocessing","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"t63VQny9NW"},{"type":"text","value":" example in this notebook over the light_curve_collector is that it automatically saves the sample and light curve data to disk after loading them and can automatically skip those functions in subsequent calls and use the files instead.","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"OTcEXh8Zjs"}],"key":"aXGcQQ4cpK"}],"key":"I3r0mkYbfV"}],"key":"D13d8Q2fKp"},{"type":"block","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"The python helper","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"uZu7TMMhrI"}],"identifier":"the-python-helper","label":"The python helper","html_id":"the-python-helper","implicit":true,"key":"uF7IJJP4i5"},{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"The python “helper” is a set of wrapper functions around the same ‘code_src/’ functions used in the light_curve_collector notebook.","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"ZEXxdG4UlY"}],"key":"gxbwXGY3pe"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":66,"column":1},"end":{"line":70,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"The wrappers facilitate parallelization and large-scale runs by automating tasks like saving the function outputs to files.","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"Vv4tkkJBDH"}],"key":"drxlA9Pubc"},{"type":"listItem","spread":true,"position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"The helper does not actually implement parallelization and can only run one function per call.","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"LYUVxnOV6q"}],"key":"pJRq43GtrR"},{"type":"listItem","spread":true,"position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"text","value":"The helper can be used in combination with any parallel processing method.","position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"key":"kIPlzbwil7"}],"key":"AwsAzNxMyX"},{"type":"listItem","spread":true,"position":{"start":{"line":69,"column":1},"end":{"line":70,"column":1}},"children":[{"type":"text","value":"The helper can load ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"UAfl44uSTq"},{"type":"inlineCode","value":"top","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"zP4K1QVcNQ"},{"type":"text","value":" output from a file to pandas DataFrames and make some figures.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"BmlDSTvRtk"}],"key":"LChcfK8UoE"}],"key":"nMTRkkU7kw"}],"key":"xGFrclA9sF"},{"type":"block","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"text","value":"The bash script","position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"key":"d7g9nAGW6o"}],"identifier":"the-bash-script","label":"The bash script","html_id":"the-bash-script","implicit":true,"key":"wOrepYKnHv"},{"type":"paragraph","position":{"start":{"line":75,"column":1},"end":{"line":76,"column":1}},"children":[{"type":"text","value":"The bash script allows the user to collect light curves from a large scale sample with a single command and provides options to help manage and monitor the run.\nIn a nutshell, the script does the following when called using flags that “launch a run”:","position":{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},"key":"YCUXVU3bnM"}],"key":"k31OU3OIdR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":78,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"children":[{"type":"text","value":"calls the helper to gather the requested sample and then launches jobs for each archive query in separate, parallel processes.","position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"key":"LjJBpq5D8q"}],"key":"BzXV3PLVZK"},{"type":"listItem","spread":true,"position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"children":[{"type":"text","value":"redirects stdout and stderr to log files.","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"K01sOc3WaH"}],"key":"GoDiHw2AZV"},{"type":"listItem","spread":true,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"tells the user what the process PIDs are and where the log and data files are.","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"rIBkPYlbeC"}],"key":"UCZbwMhrI5"},{"type":"listItem","spread":true,"position":{"start":{"line":81,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"exits, leaving the archive jobs running in the background.","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"l6r4y4Fdfl"}],"key":"iFyVP0yClS"}],"key":"eHlz5xtofg"},{"type":"paragraph","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"children":[{"type":"text","value":"In case all the archive calls need to be canceled after the script exits, the user can call the script again with a different flag to have it find and kill all the processes it launched.","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"i2UJc64bow"}],"key":"mDi4NJu01A"},{"type":"paragraph","position":{"start":{"line":85,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"text","value":"While the jobs are running, the user can call the script again with a different flag to have it save ","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"MHOsKdzcTO"},{"type":"inlineCode","value":"top","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"imRcCiJcO8"},{"type":"text","value":" output to a log file at a user-defined interval.\nThe helper can be used to load this file to pandas DataFrames and make some figures.","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"jT2CdRGOBT"}],"key":"cyLFN8GSZI"}],"key":"P69eho8XER"},{"type":"block","position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"children":[{"type":"text","value":"Interpreting ","position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"key":"X8algW2J15"},{"type":"inlineCode","value":"top","position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"key":"Mh87Nzwc2q"}],"identifier":"interpreting-top","label":"Interpreting top","html_id":"interpreting-top","implicit":true,"key":"c48lDZeWx7"},{"type":"paragraph","position":{"start":{"line":92,"column":1},"end":{"line":94,"column":1}},"children":[{"type":"text","value":"If you are unfamiliar with ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"mwSn2rFF3x"},{"type":"inlineCode","value":"top","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"wrooFND6PC"},{"type":"text","value":", the answer to this ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"Rqx1nQn0Q3"},{"type":"link","url":"https://superuser.com/questions/575202/understanding-top-command-in-unix","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"StackExchange question","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"zp52eD8ydy"}],"urlSource":"https://superuser.com/questions/575202/understanding-top-command-in-unix","key":"W7yuW4VU7B"},{"type":"text","value":" contains a basic description of the fields in the output.\nAlso, beware that ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"H4MmHmUina"},{"type":"inlineCode","value":"top","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"x7ffcnrxZP"},{"type":"text","value":" can be configured to display values in different ways (e.g., as a percentage of either a single CPU or of all available CPUs).\nTo understand the local configuration, read the man page (run ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"LF71h6vU6T"},{"type":"inlineCode","value":"man top","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"zC55OpxAe0"},{"type":"text","value":" in a terminal), particularly the sections “SUMMARY Display” and “FIELDS / Columns Display”.","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"AgiJrikv1G"}],"key":"CQm2aXtJHE"}],"key":"lORZLBbRP9"},{"type":"block","position":{"start":{"line":96,"column":1},"end":{"line":96,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"children":[{"type":"text","value":"Fornax Science Console","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"XzZlbLNh0h"}],"identifier":"fornax-science-console","label":"Fornax Science Console","html_id":"fornax-science-console","implicit":true,"key":"kzGHZheHa3"},{"type":"paragraph","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"children":[{"type":"text","value":"There are a couple of things to be aware of when running on the Fornax Science Console.","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"JDSpSsGhRb"}],"key":"beCKzZlesz"},{"type":"paragraph","position":{"start":{"line":102,"column":1},"end":{"line":103,"column":1}},"children":[{"type":"text","value":"Take note of the amount of CPU and RAM available to the server type you choose when starting the session.\nIn particular, beware that ","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"EHGQcUdyGh"},{"type":"inlineCode","value":"top","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"vaDN4E9II7"},{"type":"text","value":" can show a larger amount of total RAM than is actually accessible to your server due to resource sharing between users.","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"NvVEOt5HnO"}],"key":"eZFIJ0ct2s"},{"type":"paragraph","position":{"start":{"line":105,"column":1},"end":{"line":106,"column":1}},"children":[{"type":"text","value":"The Science Console is primarily intended for interactive use and will cull sessions which appear to be inactive.\nIf you want a notebook or script to run for longer than about 30 minutes and you will not be interacting with the Console, running ","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"key":"ThywQOpp4L"},{"type":"inlineCode","value":"top","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"key":"awwVFUCO1Q"},{"type":"text","value":" during that time can help keep the session active.","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"key":"uUWjD71uif"}],"key":"FXa8YzhwzM"}],"key":"lGZYz4gC65"},{"type":"block","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"key":"VME4SRrWCV"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"JautSi79mb"},{"type":"paragraph","position":{"start":{"line":112,"column":1},"end":{"line":112,"column":1}},"children":[{"type":"text","value":"This cell will install the dependencies, if needed:","position":{"start":{"line":112,"column":1},"end":{"line":112,"column":1}},"key":"x5vyfTwThT"}],"key":"U27fQbhEuw"}],"key":"JxumZ24L0d"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# %pip install -r requirements_scale_up.txt","key":"o6IailNLzp"},{"type":"output","id":"_EEt5AsWpbTzH_uzkdqIe","data":[],"key":"Pv5sLHQjBy"}],"key":"obqRMKXCYG"},{"type":"block","children":[],"key":"ZabXBQpnwk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import multiprocessing  # python parallelization method\nimport pandas as pd  # use a DataFrame to work with light-curve and other data\nimport sys  # add code directories to the path\n\nsys.path.append(\"code_src/\")\nimport helpers.scale_up  # python \"helper\" for parallelization and large scale runs\nimport helpers.top  # load `top` output to DataFrames and make figures\nfrom data_structures import MultiIndexDFObject  # load light curve data as a MultiIndexDFObject\nfrom plot_functions import create_figures  # make light curve figures","key":"KeJYokDcDz"},{"type":"output","id":"qtFKTtZ5P_DtvIuDgwheJ","data":[],"key":"dEUYhVLj7T"}],"key":"cbRiwL9led"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"1. Multi-wavelength light curves for 500,000 SDSS AGN","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"GFk2baevZE"}],"identifier":"id-1-multi-wavelength-light-curves-for-500-000-sdss-agn","label":"1. Multi-wavelength light curves for 500,000 SDSS AGN","html_id":"id-1-multi-wavelength-light-curves-for-500-000-sdss-agn","implicit":true,"key":"DTpFjWIkKF"}],"key":"t7LDCC3VMA"},{"type":"block","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":135,"column":1},"end":{"line":138,"column":1}},"children":[{"type":"text","value":"This example shows how to launch a large-scale collection of light curves using the bash script, monitor its performance, and diagnose a problem (out of RAM).\nThis run collects light curves for 500,000 SDSS objects and takes several hours to complete, but is not actually executed here.\nInstead, we show the bash commands and then look at logs that were generated by running the commands on 2024/03/01.\nIf executed, the run is expected to require at least 2 CPUs and 100G RAM.","position":{"start":{"line":135,"column":1},"end":{"line":135,"column":1}},"key":"dwwPPBwuQR"}],"key":"LguJ96mfwL"}],"key":"YsUMtCvItp"},{"type":"block","position":{"start":{"line":140,"column":1},"end":{"line":140,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"children":[{"type":"text","value":"1.1 Launch the run","position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"key":"jU6d1bZynk"}],"identifier":"id-1-1-launch-the-run","label":"1.1 Launch the run","html_id":"id-1-1-launch-the-run","implicit":true,"key":"XmxxHTqFNj"}],"key":"O8ccj9rcsH"},{"type":"block","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"children":[{"type":"code","lang":"bash","value":"# This will launch a very large scale run.\n# See Example 3 for a detailed explanation of parameter options.\n# If you are running this for the first time, reduce the sample size 500000 -> 50.\n\n# run_id will be used in future calls to manage this run, and also determines the name of the output directory.\n# If you are executing this, change run_id to your own value to avoid overwriting the demo logs.\n$ run_id=\"demo-SDSS-500k\"\n\n# Execute the run.\n# This will get the sample and then call all archives specified by the '-a' flag.\n# Defaults will be used for all keyword arguments that are not specified.\n$ bash code_src/helpers/scale_up.sh \\\n    -r \"$run_id\" \\\n    -j '{\"get_samples\": {\"SDSS\": {\"num\": 500000}}, \"archives\": {\"ZTF\": {\"nworkers\": 8}}}' \\\n    -a \"Gaia HEASARC IceCube WISE ZTF\"","position":{"start":{"line":146,"column":1},"end":{"line":162,"column":1}},"key":"CcAVcaCINo"}],"key":"FNlf9frAJl"},{"type":"block","position":{"start":{"line":164,"column":1},"end":{"line":164,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":166,"column":1},"end":{"line":168,"column":1}},"children":[{"type":"text","value":"The script will run the ‘get sample’ job, then launch the archive query jobs in parallel and exit.\nArchive jobs will continue running in the background until they either complete or encounter an error.\nExample 2 shows how to load the data.","position":{"start":{"line":166,"column":1},"end":{"line":166,"column":1}},"key":"U4xMIVDFde"}],"key":"kqqJnwJNMH"},{"type":"paragraph","position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"children":[{"type":"text","value":"Command output from 2024/03/01 logs:","position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"key":"jWejWAdOwa"}],"key":"l75nn7Lmut"}],"key":"l2a83oNtDR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!cat output/lightcurves-demo-SDSS-500k/logs/scale_up.sh.log\n# There is a warning that the SDSS 'specObjID' column was converted from an int to a string.\n# The column is immediately dropped. It is not used in the code.","key":"zl93Pk7DpF"},{"type":"output","id":"jS6RbTlENmVMNlKHB1c2e","data":[{"output_type":"stream","name":"stdout","text":"*********************************************************************\r\n**                          Run starting.                          **\r\nrun_id=SDSS-500k\r\nbase_dir=/home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k\r\nlogs_dir=/home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k/logs\r\nparquet_dir=/home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k/lightcurves.parquet\r\n**                                                                 **\r\n\r\nBuild sample is starting. logfile=get_sample.log\r\nBuild sample is done. Printing the log for convenience:\r\n\r\n-- /home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k/logs/get_sample.log:\r\n2024/03/01 20:31:27 UTC | [pid=3289] Starting build=sample\r\nBuilding object sample from: ['sdss']\r\nWARNING: OverflowError converting to IntType in column specObjID, reverting to String. [astropy.io.ascii.fastbasic]\r\nSDSS Quasar: 500000\r\nObject sample size, after duplicates removal: 498877\r\nObject sample saved to: /home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k/object_sample.ecsv\r\n2024/03/01 20:36:59 UTC\r\n--\r\n\r\nArchive calls are starting.\r\n\r\n[pid=3968] Gaia started. logfile=gaia.log\r\n[pid=3972] HEASARC started. logfile=heasarc.log\r\n[pid=3976] IceCube started. logfile=icecube.log\r\n[pid=3980] WISE started. logfile=wise.log\r\n[pid=3984] ZTF started. logfile=ztf.log\r\n\r\n**                                                                  **\r\n**                       Main process exiting.                      **\r\n**           Jobs may continue running in the background.           **\r\n**********************************************************************\r\n"}],"key":"twA1HYaOZ9"}],"key":"LF8qy5GaBA"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":178,"column":1},"end":{"line":178,"column":1}},"children":[{"type":"text","value":"1.2 Cancel","position":{"start":{"line":178,"column":1},"end":{"line":178,"column":1}},"key":"u0ApRwmh3b"}],"identifier":"id-1-2-cancel","label":"1.2 Cancel","html_id":"id-1-2-cancel","implicit":true,"key":"wcrtlOePOf"}],"key":"zRg3qjxiae"},{"type":"block","position":{"start":{"line":180,"column":1},"end":{"line":180,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"children":[{"type":"text","value":"You can cancel jobs at any time.","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"kC4UDqX08Q"}],"key":"znq2MleEwq"},{"type":"paragraph","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"children":[{"type":"text","value":"If the script is still running, press ","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"key":"JXS2DQhVlE"},{"type":"inlineCode","value":"Control-C","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"key":"m0MUiNrpKa"},{"type":"text","value":".","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"key":"NniPDyLqt6"}],"key":"eqgjXJVpwn"},{"type":"paragraph","position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"children":[{"type":"text","value":"If the script has exited, there are two options.","position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"key":"k7e5T4aFsN"}],"key":"MK4yr505br"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":188,"column":1},"end":{"line":189,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":188,"column":1},"end":{"line":189,"column":1}},"children":[{"type":"text","value":"To cancel an individual job, kill the job’s process using:","position":{"start":{"line":188,"column":1},"end":{"line":188,"column":1}},"key":"uW2mHstEu2"}],"key":"fmAlzKnOET"}],"key":"ATC4T8qqxv"}],"key":"hhhdseA6rc"},{"type":"block","position":{"start":{"line":190,"column":1},"end":{"line":190,"column":1}},"children":[{"type":"code","lang":"bash","value":"$ pid=0000  # get the number from script output\n$ kill $pid","position":{"start":{"line":192,"column":1},"end":{"line":195,"column":1}},"key":"kp5htdFmV5"}],"key":"OGDRwzJEoC"},{"type":"block","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"children":[{"type":"list","ordered":true,"start":2,"spread":false,"position":{"start":{"line":199,"column":1},"end":{"line":200,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":199,"column":1},"end":{"line":200,"column":1}},"children":[{"type":"text","value":"To cancel the entire run, use the ","position":{"start":{"line":199,"column":1},"end":{"line":199,"column":1}},"key":"LLGveYuHU5"},{"type":"inlineCode","value":"-k","position":{"start":{"line":199,"column":1},"end":{"line":199,"column":1}},"key":"ZKOVcrWOVa"},{"type":"text","value":" (kill) flag:","position":{"start":{"line":199,"column":1},"end":{"line":199,"column":1}},"key":"QZhCvNYnvB"}],"key":"N4BSnHrs1r"}],"key":"VxmaIRGTt0"}],"key":"Dvv0UYZbmt"},{"type":"block","position":{"start":{"line":201,"column":1},"end":{"line":201,"column":1}},"children":[{"type":"code","lang":"bash","value":"$ bash code_src/helpers/scale_up.sh -r \"$run_id\" -k","position":{"start":{"line":203,"column":1},"end":{"line":205,"column":1}},"key":"c1nUSxiYy9"}],"key":"DINNxMkX0s"},{"type":"block","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"children":[{"type":"text","value":"1.3 Restart","position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"key":"VreXZokIBe"}],"identifier":"id-1-3-restart","label":"1.3 Restart","html_id":"id-1-3-restart","implicit":true,"key":"tK6KCAll3I"}],"key":"wA6ZkmWdES"},{"type":"block","position":{"start":{"line":211,"column":1},"end":{"line":211,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"children":[{"type":"text","value":"If you want to restart and skip step(s) that previously completed, run the first command again and add one or both “overwrite” flags set to false:","position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"key":"KZutQyIGdZ"}],"key":"fpgoBrFiA5"}],"key":"QMs51XJFac"},{"type":"block","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"children":[{"type":"code","lang":"bash","value":"# use the same run_id as before\n$ bash code_src/helpers/scale_up.sh \\\n    -r \"$run_id\" \\\n    -j '{\"get_samples\": {\"SDSS\": {\"num\": 500000}}, \"archives\": {\"ZTF\": {\"nworkers\": 8}}}' \\\n    -a \"Gaia HEASARC IceCube WISE ZTF\" \\\n    -d \"overwrite_existing_sample=false\" \\\n    -d \"overwrite_existing_lightcurves=false\"","position":{"start":{"line":217,"column":1},"end":{"line":225,"column":1}},"key":"YdMTyULQP2"}],"key":"GlT7bthj7u"},{"type":"block","position":{"start":{"line":227,"column":1},"end":{"line":227,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"text","value":"1.4 Monitor","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"vVpFbfwD2I"}],"identifier":"id-1-4-monitor","label":"1.4 Monitor","html_id":"id-1-4-monitor","implicit":true,"key":"JyLgssDX0K"}],"key":"ikmOqAZg34"},{"type":"block","position":{"start":{"line":231,"column":1},"end":{"line":231,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"children":[{"type":"text","value":"There are at least three places to look for information about a run’s status.","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"key":"h4rqOo54Eq"}],"key":"eEuqNx0iYd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":235,"column":1},"end":{"line":238,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"children":[{"type":"text","value":"Check the logs for job status or errors. The bash script will redirect stdout and stderr to log files and print out the paths for you.","position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"key":"BMwWUN7YHw"}],"key":"QuAcHl6mbi"},{"type":"listItem","spread":true,"position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"children":[{"type":"text","value":"Check for light curve (parquet) data. The script will print out the “parquet_dir”. ","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"key":"iW9leW2t1m"},{"type":"inlineCode","value":"ls","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"key":"IvQmC4iy3R"},{"type":"text","value":" this directory. You will see a subdirectory for each archive call that has completed successfully, assuming it retrieved data for the sample.","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"key":"A2kYtuiO7c"}],"key":"jnnnliKihu"},{"type":"listItem","spread":true,"position":{"start":{"line":237,"column":1},"end":{"line":238,"column":1}},"children":[{"type":"text","value":"Watch ","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"i3H9ZKwNZR"},{"type":"inlineCode","value":"top","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"geJfEXyeC6"},{"type":"text","value":". The script will print the job PIDs. The script can also monitor ","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"h2NdAivURq"},{"type":"inlineCode","value":"top","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"skvTz8rVBj"},{"type":"text","value":" for you and save the output to a log file.","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"DvxFGyzFgv"}],"key":"zSvzdfoPp4"}],"key":"oAH6au6SfK"}],"key":"Fj2jocHgAe"},{"type":"block","position":{"start":{"line":239,"column":1},"end":{"line":239,"column":1}},"children":[{"type":"heading","depth":4,"position":{"start":{"line":241,"column":1},"end":{"line":241,"column":1}},"children":[{"type":"text","value":"1.4.1 Logs","position":{"start":{"line":241,"column":1},"end":{"line":241,"column":1}},"key":"GAkzJNUS9s"}],"identifier":"id-1-4-1-logs","label":"1.4.1 Logs","html_id":"id-1-4-1-logs","implicit":true,"key":"JXzLZzMSkH"}],"key":"Kn69sbI4IN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Gaia log from 2024/03/01 (success)\n!cat output/lightcurves-demo-SDSS-500k/logs/gaia.log","key":"aBti03FQyk"},{"type":"output","id":"2BBFR0UPBzu2xK8bKU7A-","data":[{"output_type":"stream","name":"stdout","text":"2024/03/01 20:37:00 UTC | [pid=3968] Starting build=lightcurves, archive=gaia\r\nINFO: Query finished. [astroquery.utils.tap.core]\r\nLight curves saved to:\r\n\tparquet_dir=/home/jovyan/raen/fornax-demo-notebooks/light_curves/output/lightcurves-SDSS-500k/lightcurves.parquet\r\n\tfile=archive=gaia/part0.snappy.parquet\r\n2024/03/01 21:07:38 UTC\r\n"}],"key":"Ocswn5k2Mb"}],"key":"Xnhu6q6K4a"},{"type":"block","children":[],"key":"kJpIwZANF9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ZTF log from 2024/03/01 (failure)\n!cat output/lightcurves-demo-SDSS-500k/logs/ztf.log","key":"C0pN2VApMy"},{"type":"output","id":"D24x-gISNmih3Q6gGclfw","data":[{"output_type":"stream","name":"stdout","text":"2024/03/01 20:37:00 UTC | [pid=3984] Starting build=lightcurv...","hash":"0b0e4b36451a370ef714a5caf7ba27e0","path":"/fornax-demo-notebooks/build/0b0e4b36451a370ef714a5caf7ba27e0.txt"}],"key":"uPP1xoPOyV"}],"key":"MpBZupvHzO"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":253,"column":1},"end":{"line":256,"column":1}},"children":[{"type":"text","value":"The logs above show that the ZTF job loaded the light curve data successfully (“100%”) but exited without writing the parquet file (no “Light curves saved” message like Gaia).\nThe data was lost.\nThere is also no indication of an error; the job just ends.\nWe can diagnose what happened by looking at the ","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"SyNw8oMvK3"},{"type":"inlineCode","value":"top","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"Fz8mpkcB56"},{"type":"text","value":" output.","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"g13xpXHBsQ"}],"key":"oSa6vzx44J"}],"key":"pI1r5sy42b"},{"type":"block","position":{"start":{"line":258,"column":1},"end":{"line":258,"column":1}},"children":[{"type":"heading","depth":4,"position":{"start":{"line":260,"column":1},"end":{"line":260,"column":1}},"children":[{"type":"text","value":"1.4.2 ","position":{"start":{"line":260,"column":1},"end":{"line":260,"column":1}},"key":"Sh5ZTgSW3l"},{"type":"inlineCode","value":"top","position":{"start":{"line":260,"column":1},"end":{"line":260,"column":1}},"key":"Y3gfWX7B3N"}],"identifier":"id-1-4-2-top","label":"1.4.2 top","html_id":"id-1-4-2-top","implicit":true,"key":"Yh0TbKPCTM"},{"type":"paragraph","position":{"start":{"line":262,"column":1},"end":{"line":264,"column":1}},"children":[{"type":"text","value":"While the jobs are running, you can monitor ","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"KytAryoyNF"},{"type":"inlineCode","value":"top","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"eQaw2DbfCO"},{"type":"text","value":" and save the output to a log file by calling the script again with the ","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"RaLLm2ZrZV"},{"type":"inlineCode","value":"-t","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"pqBm5Zh5Qc"},{"type":"text","value":" flag.\nThis call must be separate from the call that launches the run.\nIf you want to capture the sample step as well as the archive queries, open a second terminal and call the script with ","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"pNZ78m0kwY"},{"type":"inlineCode","value":"-t","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"qA6gI3cs9w"},{"type":"text","value":" right after launching the run in the first terminal.","position":{"start":{"line":262,"column":1},"end":{"line":262,"column":1}},"key":"ckDuhjBrBh"}],"key":"ILnqlPl8si"}],"key":"LLl2sLvyOE"},{"type":"block","position":{"start":{"line":266,"column":1},"end":{"line":266,"column":1}},"children":[{"type":"code","lang":"bash","value":"$ interval=10m  # choose your interval\n$ bash code_src/helpers/scale_up.sh -r \"run_id\" -t \"$interval\"","position":{"start":{"line":268,"column":1},"end":{"line":271,"column":1}},"key":"gmtAlqaF7b"}],"key":"RPKSl4dzLV"},{"type":"block","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":275,"column":1},"end":{"line":276,"column":1}},"children":[{"type":"text","value":"The script will continue running until after all of run_id’s jobs have completed.\nYou can cancel at anytime with ","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"u17S1qgENH"},{"type":"inlineCode","value":"Control-C","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"NGMoGn6Ir4"},{"type":"text","value":" and start it again with a new interval.","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"ZhueNW1G4u"}],"key":"i023vi1Hum"},{"type":"paragraph","position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"children":[{"type":"text","value":"Once saved to file, the helper can parse the ","position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"key":"aI7O5911cm"},{"type":"inlineCode","value":"top","position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"key":"EzekXQJsl2"},{"type":"text","value":" output into pandas DataFrames and make some figures.","position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"key":"ta2B7UVDYA"}],"key":"U3WJZnQ490"},{"type":"paragraph","position":{"start":{"line":280,"column":1},"end":{"line":280,"column":1}},"children":[{"type":"inlineCode","value":"top","position":{"start":{"line":280,"column":1},"end":{"line":280,"column":1}},"key":"yeKInm60gJ"},{"type":"text","value":" output from 2024/03/01:","position":{"start":{"line":280,"column":1},"end":{"line":280,"column":1}},"key":"WT2OEP4T7T"}],"key":"VshnPAI0Tm"}],"key":"WVqbR6XbDr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"run_id = \"demo-SDSS-500k\"\nlogs_dir = helpers.scale_up.run(build=\"logs_dir\", run_id=run_id)\n\ntoplog = helpers.top.load_top_output(toptxt_dir=logs_dir, run_id=run_id)","key":"z0BBjfUtuN"},{"type":"output","id":"pdETHGBGd-g63kw-AgZPb","data":[],"key":"pvneabWhPp"}],"key":"kBpjgUbpzr"},{"type":"block","children":[],"key":"EjS40ccwHB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# System summary information from lines 1-5 of `top` output. One row per time step.\ntoplog.summary_df.sample(5)","key":"oOPns51EBp"},{"type":"output","id":"J_cJ09bFiTxLAF1B2iere","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"                           load_avg_per_1min  load_avg_per_5min  \\\ntime                                                              \n2024-03-01 23:00:19+00:00               2.70               2.57   \n2024-03-01 21:22:20+00:00               1.05               0.70   \n2024-03-01 21:04:56+00:00               1.00               0.91   \n2024-03-01 22:35:56+00:00               1.71               2.05   \n2024-03-01 23:02:02+00:00               1.95               2.32   \n\n                           load_avg_per_15min  total_GiB  free_GiB  used_GiB  \\\ntime                                                                           \n2024-03-01 23:00:19+00:00                2.41       61.8      33.3      19.5   \n2024-03-01 21:22:20+00:00                0.75       61.8      45.8       7.1   \n2024-03-01 21:04:56+00:00                0.92       61.8      46.3       7.1   \n2024-03-01 22:35:56+00:00                2.17       61.8      25.8      27.1   \n2024-03-01 23:02:02+00:00                2.33       61.8      34.1      14.1   \n\n                           avail_GiB      delta_time  \ntime                                                  \n2024-03-01 23:00:19+00:00       41.9 0 days 02:28:51  \n2024-03-01 21:22:20+00:00       54.4 0 days 00:50:52  \n2024-03-01 21:04:56+00:00       54.0 0 days 00:33:28  \n2024-03-01 22:35:56+00:00       35.5 0 days 02:04:28  \n2024-03-01 23:02:02+00:00       47.0 0 days 02:30:34  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>load_avg_per_1min</th>\n      <th>load_avg_per_5min</th>\n      <th>load_avg_per_15min</th>\n      <th>total_GiB</th>\n      <th>free_GiB</th>\n      <th>used_GiB</th>\n      <th>avail_GiB</th>\n      <th>delta_time</th>\n    </tr>\n    <tr>\n      <th>time</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2024-03-01 23:00:19+00:00</th>\n      <td>2.70</td>\n      <td>2.57</td>\n      <td>2.41</td>\n      <td>61.8</td>\n      <td>33.3</td>\n      <td>19.5</td>\n      <td>41.9</td>\n      <td>0 days 02:28:51</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 21:22:20+00:00</th>\n      <td>1.05</td>\n      <td>0.70</td>\n      <td>0.75</td>\n      <td>61.8</td>\n      <td>45.8</td>\n      <td>7.1</td>\n      <td>54.4</td>\n      <td>0 days 00:50:52</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 21:04:56+00:00</th>\n      <td>1.00</td>\n      <td>0.91</td>\n      <td>0.92</td>\n      <td>61.8</td>\n      <td>46.3</td>\n      <td>7.1</td>\n      <td>54.0</td>\n      <td>0 days 00:33:28</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 22:35:56+00:00</th>\n      <td>1.71</td>\n      <td>2.05</td>\n      <td>2.17</td>\n      <td>61.8</td>\n      <td>25.8</td>\n      <td>27.1</td>\n      <td>35.5</td>\n      <td>0 days 02:04:28</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 23:02:02+00:00</th>\n      <td>1.95</td>\n      <td>2.32</td>\n      <td>2.33</td>\n      <td>61.8</td>\n      <td>34.1</td>\n      <td>14.1</td>\n      <td>47.0</td>\n      <td>0 days 02:30:34</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"ivjDunPWGG"}],"key":"EjU3twQexM"},{"type":"block","children":[],"key":"NvyoGFDTEl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Information about running processes from lines 6+ of `top` output. One row per process, per time step.\ntoplog.pids_df.sample(5)","key":"ATsZZXGEpz"},{"type":"output","id":"3sIRBzE42iNI0ayF9hWm2","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"                          job_name    pid_name    PID    USER  PR  NI  VIRTg  \\\ntime                                                                           \n2024-03-01 22:06:51+00:00      ztf  ztf-worker  13389  jovyan  20   0    9.2   \n2024-03-01 20:55:09+00:00     gaia        gaia   3968  jovyan  20   0    4.7   \n2024-03-01 22:15:52+00:00      ztf  ztf-worker  13394  jovyan  20   0    7.6   \n2024-03-01 21:23:43+00:00      ztf  ztf-worker  13392  jovyan  20   0    4.6   \n2024-03-01 20:51:07+00:00     gaia        gaia   3968  jovyan  20   0    4.4   \n\n                           RESg  SHRg  S   %CPU  %MEM     TIME+ COMMAND  \\\ntime                                                                      \n2024-03-01 22:06:51+00:00   1.9   0.0  S    0.0   3.0   9:58.50  python   \n2024-03-01 20:55:09+00:00   2.4   0.1  S    0.0   3.9   6:49.14  python   \n2024-03-01 22:15:52+00:00   1.7   0.0  S    0.0   2.7  11:26.04  python   \n2024-03-01 21:23:43+00:00   1.4   0.0  R   46.7   2.3   0:23.18  python   \n2024-03-01 20:51:07+00:00   2.1   0.1  R  100.0   3.4   5:10.43  python   \n\n                               delta_time  \ntime                                       \n2024-03-01 22:06:51+00:00 0 days 01:35:23  \n2024-03-01 20:55:09+00:00 0 days 00:23:41  \n2024-03-01 22:15:52+00:00 0 days 01:44:24  \n2024-03-01 21:23:43+00:00 0 days 00:52:15  \n2024-03-01 20:51:07+00:00 0 days 00:19:39  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>job_name</th>\n      <th>pid_name</th>\n      <th>PID</th>\n      <th>USER</th>\n      <th>PR</th>\n      <th>NI</th>\n      <th>VIRTg</th>\n      <th>RESg</th>\n      <th>SHRg</th>\n      <th>S</th>\n      <th>%CPU</th>\n      <th>%MEM</th>\n      <th>TIME+</th>\n      <th>COMMAND</th>\n      <th>delta_time</th>\n    </tr>\n    <tr>\n      <th>time</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2024-03-01 22:06:51+00:00</th>\n      <td>ztf</td>\n      <td>ztf-worker</td>\n      <td>13389</td>\n      <td>jovyan</td>\n      <td>20</td>\n      <td>0</td>\n      <td>9.2</td>\n      <td>1.9</td>\n      <td>0.0</td>\n      <td>S</td>\n      <td>0.0</td>\n      <td>3.0</td>\n      <td>9:58.50</td>\n      <td>python</td>\n      <td>0 days 01:35:23</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 20:55:09+00:00</th>\n      <td>gaia</td>\n      <td>gaia</td>\n      <td>3968</td>\n      <td>jovyan</td>\n      <td>20</td>\n      <td>0</td>\n      <td>4.7</td>\n      <td>2.4</td>\n      <td>0.1</td>\n      <td>S</td>\n      <td>0.0</td>\n      <td>3.9</td>\n      <td>6:49.14</td>\n      <td>python</td>\n      <td>0 days 00:23:41</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 22:15:52+00:00</th>\n      <td>ztf</td>\n      <td>ztf-worker</td>\n      <td>13394</td>\n      <td>jovyan</td>\n      <td>20</td>\n      <td>0</td>\n      <td>7.6</td>\n      <td>1.7</td>\n      <td>0.0</td>\n      <td>S</td>\n      <td>0.0</td>\n      <td>2.7</td>\n      <td>11:26.04</td>\n      <td>python</td>\n      <td>0 days 01:44:24</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 21:23:43+00:00</th>\n      <td>ztf</td>\n      <td>ztf-worker</td>\n      <td>13392</td>\n      <td>jovyan</td>\n      <td>20</td>\n      <td>0</td>\n      <td>4.6</td>\n      <td>1.4</td>\n      <td>0.0</td>\n      <td>R</td>\n      <td>46.7</td>\n      <td>2.3</td>\n      <td>0:23.18</td>\n      <td>python</td>\n      <td>0 days 00:52:15</td>\n    </tr>\n    <tr>\n      <th>2024-03-01 20:51:07+00:00</th>\n      <td>gaia</td>\n      <td>gaia</td>\n      <td>3968</td>\n      <td>jovyan</td>\n      <td>20</td>\n      <td>0</td>\n      <td>4.4</td>\n      <td>2.1</td>\n      <td>0.1</td>\n      <td>R</td>\n      <td>100.0</td>\n      <td>3.4</td>\n      <td>5:10.43</td>\n      <td>python</td>\n      <td>0 days 00:19:39</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"nublPEBe2o"}],"key":"cy4LLnfspr"},{"type":"block","children":[],"key":"hj1cF0Enx7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = toplog.plot_overview()","key":"GK9QZiPvpN"},{"type":"output","id":"hXSYpeo_c-aN73nrFvQt_","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x800 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b381d4e230aa96fe4b93f1b5776331a3","path":"/fornax-demo-notebooks/build/b381d4e230aa96fe4b93f1b5776331a3.png"}}}],"key":"lJfexSJm8g"}],"key":"b97x7qoF9v"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":303,"column":1},"end":{"line":305,"column":1}},"children":[{"type":"text","value":"In the figure, panels 1 and 2 show CPU usage while 3 and 4 show memory usage.\nPanels 1 and 3 show system totals while panels 2 and 4 show usage by individual processes.\nSpecifically:","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"guC59Kf62F"}],"key":"PkRQQCeSYV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":307,"column":1},"end":{"line":311,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"children":[{"type":"text","value":"Panel 1: System CPU load, averaged over the previous one minute. A value of “1” means that all compute tasks could have been completed by one CPU working 100% of the time (in reality, the tasks would have been split between the available CPUs). If this value exceeds the number of CPUs available, some tasks will wait in a queue before being executed.","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"key":"Y3O3A3ci8s"}],"key":"EqtVgUUXMC"},{"type":"listItem","spread":true,"position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"children":[{"type":"text","value":"Panel 2: Percentage of time the given process used a CPU. This can be greater than 100% if a process uses multiple threads.","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"HkTZvdVIkY"}],"key":"LHuaD5cpmf"},{"type":"listItem","spread":true,"position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"children":[{"type":"text","value":"Panel 3: Amount of unused memory available to the system. If this nears zero, the system will start killing processes so that the entire machine doesn’t go down.","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"XVtMu3zGPW"}],"key":"xYePwoHd1l"},{"type":"listItem","spread":true,"position":{"start":{"line":310,"column":1},"end":{"line":311,"column":1}},"children":[{"type":"text","value":"Panel 4: Percentage of total RAM used by the given process.","position":{"start":{"line":310,"column":1},"end":{"line":310,"column":1}},"key":"hJRlm6QDQs"}],"key":"s0DRPvFxR3"}],"key":"Iq8Jcm2AhJ"},{"type":"paragraph","position":{"start":{"line":312,"column":1},"end":{"line":315,"column":1}},"children":[{"type":"text","value":"There are many interesting features in the figure that the reader may want to look at in more detail.\nFor example, other than ZTF’s memory spike at the end, we see that the full run collecting multi-wavelength light curves for the SDSS 500k sample could be completed with about 2 CPU and 60G RAM.\nWe also see that the IceCube call completes very quickly but requires a significant amount of memory.\nAnother observation is that the WISE call’s CPU activity seems to slow down when the ZTF workers are running, indicating that a different number of ZTF workers may be more efficient overall.","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"key":"gPVMVEJlCB"}],"key":"GZm6D3oktl"},{"type":"paragraph","position":{"start":{"line":317,"column":1},"end":{"line":318,"column":1}},"children":[{"type":"text","value":"We want to learn why the ZTF job failed.\nLet’s zoom in on that time period:","position":{"start":{"line":317,"column":1},"end":{"line":317,"column":1}},"key":"FL1XeDFmdU"}],"key":"geZ2BwiPjl"}],"key":"eXuDk1whoP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = toplog.plot_overview(between_time=(\"22:55\", \"23:10\"))","key":"wpH5VhbF8c"},{"type":"output","id":"WGdGtI7hCNm5lnef8hSPi","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x800 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"c49ee08f3a93873f97e1060c85e9722a","path":"/fornax-demo-notebooks/build/c49ee08f3a93873f97e1060c85e9722a.png"}}}],"key":"UMfqZRkhxV"}],"key":"hpAOQBwK6d"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":324,"column":1},"end":{"line":327,"column":1}},"children":[{"type":"text","value":"In the second panel above we see the ZTF worker processes (which load the light curve data) ending just after 23:00 and then the ZTF parent process continues by itself.\nAround 23:06 in the fourth panel, we see the ZTF job’s memory usage rise sharply to almost 100% and then drop immediately to zero when the job terminates.\nThis coincides with the total available memory dropping to near zero in the third panel.\nThis shows that the machine did not have enough memory for the ZTF call to successfully transform the light curve data collected by the workers into a ","position":{"start":{"line":324,"column":1},"end":{"line":324,"column":1}},"key":"r7MKmgAlDo"},{"type":"inlineCode","value":"MultiIndexDFObject","position":{"start":{"line":324,"column":1},"end":{"line":324,"column":1}},"key":"oHhY261PXO"},{"type":"text","value":" and write it as a parquet file, so the machine killed the job.","position":{"start":{"line":324,"column":1},"end":{"line":324,"column":1}},"key":"zFzeLBGhGB"}],"key":"Tx5qCsZxCq"},{"type":"paragraph","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"children":[{"type":"text","value":"The solution is to rerun the ZTF archive call on a machine with more RAM.","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"T181YY2DuI"}],"key":"NY2uVfo1Ot"},{"type":"paragraph","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"children":[{"type":"text","value":"To learn exactly which step in ","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"key":"A3ZpWslg5e"},{"type":"inlineCode","value":"ztf_get_lightcurves","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"key":"I67hF2yBHT"},{"type":"text","value":" was causing this and how much memory it actually needed, additional print statements were inserted into the code similar to the following:","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"key":"zCrwO5i9FM"}],"key":"iZqhyBUlsV"}],"key":"VbCR7aWoRa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# this was inserted just before \"exploding\" the dataframe in ztf_functions.py\n# helpers.scale_up._now() prints the current timestamp\nprint(f\"{helpers.scale_up._now()} | starting explode\", flush=True)\n# ztf_df = ztf_df.explode(...  # this is the next line in ztf_functions.py","key":"v1pZYOcVKg"},{"type":"output","id":"ukgpkrGjm--3bhLhMh23y","data":[{"output_type":"stream","name":"stdout","text":"2025/10/12 22:30:58 UTC | starting explode\n"}],"key":"OWNfzfBFUq"}],"key":"oT7nkV7f9A"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":340,"column":1},"end":{"line":341,"column":1}},"children":[{"type":"text","value":"ZTF was then rerun on a large machine and ","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"Y3CQ3KJFwi"},{"type":"inlineCode","value":"top","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"Oz6n31rWP6"},{"type":"text","value":" output was saved.\nAfter the run, we manually compared timestamps between the ZTF log and ","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"hFHgoLv6Ap"},{"type":"inlineCode","value":"top","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"QO5VBekKUo"},{"type":"text","value":" output and tagged relevant ","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"cZSvuYKqk5"},{"type":"inlineCode","value":"top","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"AmcaA9NE9p"},{"type":"text","value":" timestamps with corresponding step names by appending the name to the ‘----’ delineator, like this for the “explode” step:","position":{"start":{"line":340,"column":1},"end":{"line":340,"column":1}},"key":"YSxXB4V9dw"}],"key":"nSJ8KAcngy"}],"key":"VXiTDVNnGK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!cat output/lightcurves-demo-SDSS-500k/logs/top.tag-ztf.txt | grep -A12 explode","key":"xJdARZh12N"},{"type":"output","id":"cN06ZmaDXcd_2LQhvkBrs","data":[{"output_type":"stream","name":"stdout","text":"----explode\r\n2024/02/25 02:09:32 UTC\r\ntop - 02:09:32 up  1:20,  0 users,  load average: 1.00, 0.68, 0.43\r\nTasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie\r\n%Cpu(s):  0.6 us,  0.2 sy,  0.0 ni, 99.2 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\r\nGiB Mem :    496.0 total,    454.7 free,     13.6 used,     27.7 buff/cache\r\nGiB Swap:      0.0 total,      0.0 free,      0.0 used.    479.4 avail Mem \r\n\r\n   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND\r\n  1418 jovyan    20   0   82.5g  11.8g   0.1g R 100.0   2.4   4:20.44 ipython\r\n----\r\n2024/02/25 02:09:34 UTC\r\ntop - 02:09:34 up  1:20,  0 users,  load average: 1.08, 0.70, 0.44\r\n"}],"key":"btnk6yfg4M"}],"key":"f5dM0L7J7k"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"children":[{"type":"text","value":"The helper can recognize these tags and show them on a figure:","position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"key":"odpFg4EYdz"}],"key":"WsWITySgqI"}],"key":"GQiQRiEcvb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_toplog = helpers.top.load_top_output(toptxt_file=\"top.tag-ztf.txt\", toptxt_dir=logs_dir, run_id=run_id)\n\nfig = ztf_toplog.plot_time_tags(summary_y=\"used_GiB\")\n# (This run starts by reading a previously cached parquet file containing the raw data returned by workers.)","key":"m5OwKflC9a"},{"type":"output","id":"HHRPgahBRoZhRV-o-slo5","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x600 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"df5bcf74fcb074c4c273697c3710b374","path":"/fornax-demo-notebooks/build/df5bcf74fcb074c4c273697c3710b374.png"}}}],"key":"GCgWpiqUiY"}],"key":"mJBWCuB0PY"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":356,"column":1},"end":{"line":358,"column":1}},"children":[{"type":"text","value":"This figure shows that almost 100G RAM is required for the ZTF job to succeed.\nIt further shows that the “explode” step requires the most memory, followed by creating the MultiIndexDFObject.\nFrom here, the user can choose an appropriately sized machine and/or consider whether ","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"KU56WJkeRN"},{"type":"inlineCode","value":"ztf_get_lightcurves","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"pe2SSX1ZRm"},{"type":"text","value":" could be made to use less memory.","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"LCfbTx2HVe"}],"key":"BzzSb3KK36"}],"key":"lGxx6RFc2N"},{"type":"block","position":{"start":{"line":360,"column":1},"end":{"line":360,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"children":[{"type":"text","value":"2. Parallelizing the light_curve_collector notebook","position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"key":"sx8MNikyiO"}],"identifier":"id-2-parallelizing-the-light-curve-collector-notebook","label":"2. Parallelizing the light_curve_collector notebook","html_id":"id-2-parallelizing-the-light-curve-collector-notebook","implicit":true,"key":"ozbEmuH0Tj"}],"key":"xWJ17CYBpc"},{"type":"block","position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":366,"column":1},"end":{"line":369,"column":1}},"children":[{"type":"text","value":"This example shows how to parallelize the example from the light_curve_collector notebook using the helper and python’s ","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"VHAaRUbkPs"},{"type":"inlineCode","value":"multiprocessing","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"oZGtKNXQ6F"},{"type":"text","value":".\nAn advantage of the method shown here is that it automatically saves the sample and light curve data to disk after loading them and can automatically skip those steps in subsequent calls and use the files instead.\nThis is a small sample (Yang, 30 objects).\nIf you want a sample larger than a few hundred, consider using the bash script instead.","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"eOIk0Rezce"}],"key":"Xk5pMwHHP8"},{"type":"paragraph","position":{"start":{"line":371,"column":1},"end":{"line":371,"column":1}},"children":[{"type":"text","value":"Define the keyword arguments for the run:","position":{"start":{"line":371,"column":1},"end":{"line":371,"column":1}},"key":"B4hoN4IJqf"}],"key":"UZLhMZfnfo"}],"key":"cZK27X0Iws"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"kwargs_dict = {\n    \"run_id\": \"demo-Yang-sample\",\n    # Paper names to gather the sample from.\n    \"get_samples\": [\"Yang\"],\n    # Keyword arguments for *_get_lightcurves archive calls.\n    \"archives\": {\n        \"Gaia\": {\"search_radius\": 1 / 3600, \"verbose\": 0},\n        \"HEASARC\": {\"catalog_error_radii\": {\"FERMIGTRIG\": 1.0, \"SAXGRBMGRB\": 3.0}},\n        \"IceCube\": {\"icecube_select_topN\": 3, \"max_search_radius\": 2.0},\n        \"WISE\": {\"radius\": 1.0, \"bandlist\": [\"W1\", \"W2\"]},\n        \"ZTF\": {\"match_radius\": 1 / 3600, \"nworkers\": None},\n    },\n}\n# See Example 3 for a detailed explanation of parameter options.\nkwargs_dict","key":"IxRFEZehgb"},{"type":"output","id":"0QccoOOsGrMSArdUUR0_Y","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/plain":{"content":"{'run_id': 'demo-Yang-sample',\n 'get_samples': ['Yang'],\n 'archives': {'Gaia': {'search_radius': 0.0002777777777777778, 'verbose': 0},\n  'HEASARC': {'catalog_error_radii': {'FERMIGTRIG': 1.0, 'SAXGRBMGRB': 3.0}},\n  'IceCube': {'icecube_select_topN': 3, 'max_search_radius': 2.0},\n  'WISE': {'radius': 1.0, 'bandlist': ['W1', 'W2']},\n  'ZTF': {'match_radius': 0.0002777777777777778, 'nworkers': None}}}","content_type":"text/plain"}}}],"key":"tCpNoh26D6"}],"key":"CzCkuc4Eiq"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":391,"column":1},"end":{"line":393,"column":1}},"children":[{"type":"text","value":"Decide which archives to query.\nThis is a separate list because the helper can only run one archive call at a time.\nWe will iterate over this list and launch each job separately.","position":{"start":{"line":391,"column":1},"end":{"line":391,"column":1}},"key":"Ago3Vw4bYr"}],"key":"ad5kvQqKN3"}],"key":"H0Q8CyRbxl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# archive_names = [\"PanSTARRS\", \"WISE\"]  # choose your own list\narchive_names = helpers.scale_up.ARCHIVE_NAMES[\"all\"]  # predefined list\narchive_names","key":"PfYYLvSkpL"},{"type":"output","id":"n7Kma7C7imxvH3JkKW2K2","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"['Gaia',\n 'HCV',\n 'HEASARC',\n 'IceCube',\n 'PanSTARRS',\n 'TESS_Kepler',\n 'WISE',\n 'ZTF']","content_type":"text/plain"}}}],"key":"LnIAheIFal"}],"key":"qyuMcVXVzc"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"children":[{"type":"text","value":"In the next cell, we:","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"W3f63j7VGM"}],"key":"wRybn0NjMQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":403,"column":1},"end":{"line":405,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":403,"column":1},"end":{"line":403,"column":1}},"children":[{"type":"text","value":"collect the sample and write it as a .ecsv file; then","position":{"start":{"line":403,"column":1},"end":{"line":403,"column":1}},"key":"wQqNrjzmGI"}],"key":"w6c3gNrtlX"},{"type":"listItem","spread":true,"position":{"start":{"line":404,"column":1},"end":{"line":405,"column":1}},"children":[{"type":"text","value":"query the archives in parallel using a ","position":{"start":{"line":404,"column":1},"end":{"line":404,"column":1}},"key":"bmshIJwO4o"},{"type":"inlineCode","value":"multiprocessing.Pool","position":{"start":{"line":404,"column":1},"end":{"line":404,"column":1}},"key":"PRlr7eLFLH"},{"type":"text","value":" and write the light curve data as .parquet files.","position":{"start":{"line":404,"column":1},"end":{"line":404,"column":1}},"key":"rN9SqjkeRo"}],"key":"dOEhUZMT7V"}],"key":"ha74aDiEP6"},{"type":"paragraph","position":{"start":{"line":406,"column":1},"end":{"line":410,"column":1}},"children":[{"type":"text","value":"Note: Since the next cell launches each archive call in a child process (through ","position":{"start":{"line":406,"column":1},"end":{"line":406,"column":1}},"key":"ZIzhY44gEE"},{"type":"inlineCode","value":"multiprocessing.Pool","position":{"start":{"line":406,"column":1},"end":{"line":406,"column":1}},"key":"eLW7L7dn5c"},{"type":"text","value":"),\nthe archive calls themselves will not be allowed to launch child processes of their own.\nWe’ll just skip the affected archive calls here and encourage the user towards the bash script since this\nis one of the main reasons that it was developed -- it launches the archive jobs in parallel, but in a\ndifferent way, so that the calls are also allowed to parallelize their own internal code and thus run much faster.","position":{"start":{"line":406,"column":1},"end":{"line":406,"column":1}},"key":"nX3bsim7MV"}],"key":"obToD281XU"}],"key":"hfhaTkq1xL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n# Skip archive calls that use internal parallelization.\n_archive_names = [name for name in archive_names if name.lower() not in [\"panstarrs\", \"ztf\"]]\n\nsample_table = helpers.scale_up.run(build=\"sample\", **kwargs_dict)\n# sample_table is returned if you want to look at it but it is not used below\n\nwith multiprocessing.Pool(processes=len(_archive_names)) as pool:\n    # submit one job per archive\n    for archive in _archive_names:\n        pool.apply_async(helpers.scale_up.run, kwds={\"build\": \"lightcurves\", \"archive\": archive, **kwargs_dict})\n    pool.close()  # signal that no more jobs will be submitted to the pool\n    pool.join()  # wait for all jobs to complete\n\n# Note: The console output from different archive calls gets jumbled together below.\n# Worse, error messages tend to get lost in the background and never displayed.\n# If you have trouble, consider running an archive call individually without the Pool\n# or using the bash script instead.","key":"AWs7o3OD0i"},{"type":"output","id":"MTHekSVXNCdN1OWcjh64T","data":[{"output_type":"stream","name":"stdout","text":"2025/10/12 22:30:59 UTC | [pid=2550] Starting build=sample\n"},{"output_type":"stream","name":"stdout","text":"Building object sample from: ['yang']\n"},{"output_type":"stream","name":"stdout","text":"Changing Look AGN- Yang et al:  31\nObject sample size, after duplicates removal: 30\nObject sample saved to: /home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-Yang-sample/object_sample.ecsv\n2025/10/12 22:31:00 UTC\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2693] Starting build=lightcurves, archive=heasarc"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2692] Starting build=lightcurves, archive=hcv"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2691] Starting build=lightcurves, archive=gaia"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2696] Starting build=lightcurves, archive=wise"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2695] Starting build=lightcurves, archive=tess_kepler"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:01 UTC | [pid=2694] Starting build=lightcurves, archive=icecube"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stderr","text":"WARNING"},{"output_type":"stream","name":"stderr","text":": UnknownElementWarning: None:162:5014: UnknownElementWarning: Unknown element limits [pyvo.utils.xml.elements]"},{"output_type":"stream","name":"stderr","text":"\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/lightkurve/prf/__init__.py:7: UserWarning: Warning: the tpfmodel submodule is not available without oktopus installed, which requires a current version of autograd. See #1452 for details.\n  warnings.warn(\n"},{"output_type":"stream","name":"stderr","text":"WARNING"},{"output_type":"stream","name":"stderr","text":": W23: None:162:5045: W23: The executionDuration element must not occur more than once [pyvo.utils.xml.elements]"},{"output_type":"stream","name":"stderr","text":"\n"},{"output_type":"stream","name":"stderr","text":"WARNING"},{"output_type":"stream","name":"stderr","text":": W25: None:162:5107: W25: The uploadLimit element must not occur more than once [pyvo.utils.xml.elements]"},{"output_type":"stream","name":"stderr","text":"\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"  0%|          | 0/30 [00:00<?, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"78ce421bfdb343e592f67b9e40f676db\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"  0%|          | 0/2 [00:00<?, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"e8f24d92ac734bbfbdfa368ee83e0e68\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"stream","name":"stdout","text":"working on mission"},{"output_type":"stream","name":"stdout","text":" "},{"output_type":"stream","name":"stdout","text":"FERMIGTRIG"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"working on mission"},{"output_type":"stream","name":"stdout","text":" "},{"output_type":"stream","name":"stdout","text":"SAXGRBMGRB"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"INFO"},{"output_type":"stream","name":"stdout","text":": Query finished. [astroquery.utils.tap.core]"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"Light curves saved to:\n\tparquet_dir=/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-Yang-sample/lightcurves.parquet\n\tfile=archive=gaia/part0.snappy.parquet"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:06 UTC"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"Light curves saved to:\n\tparquet_dir=/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-Yang-sample/lightcurves.parquet\n\tfile=archive=heasarc/part0.snappy.parquet"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:07 UTC"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"Light curves saved to:\n\tparquet_dir=/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-Yang-sample/lightcurves.parquet\n\tfile=archive=icecube/part0.snappy.parquet"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:31:08 UTC"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"  0%|          | 0/42 [00:00<?, ?it/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"ccd9058562174d8bbf6a8af2e760e2cf\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (0.28136, -0.09792)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (21.70042, -8.66336)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (29.99, 0.55301)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (120.9482, 42.97751)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (127.88438, 36.77141)>\".\n"},{"output_type":"stream","name":"stdout","text":"No light curve data was returned from hcv."},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (132.49079, 27.79135)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (137.38344, 47.79187)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (144.37634, 26.04227)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (144.39779, 32.54717)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (150.84779, 35.41774)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (152.97079, 54.70177)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (166.09679, 63.71812)>\".\n"},{"output_type":"stream","name":"stdout","text":"Light curves saved to:\n\tparquet_dir=/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-Yang-sample/lightcurves.parquet\n\tfile=archive=wise/part0.snappy.parquet"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"2025/10/12 22:33:15 UTC"},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (166.22988, 1.31573)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (167.60604, -0.05948)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (168.90237, 5.74715)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (169.62359, 32.06669)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (173.12143, 3.9581)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (177.66379, 36.54955)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (178.11453, 32.16649)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (194.81977, 55.25198)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (199.87816, 67.89873)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (209.07708, -1.25389)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (209.73261, 49.57057)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (221.97599, 28.55671)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (233.48329, 1.17494)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (236.37346, 25.19108)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (237.57182, 41.65067)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (238.24283, 27.62461)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (238.66777, 36.49777)>\".\n"},{"output_type":"stream","name":"stderr","text":"No data found for target \"<SkyCoord (ICRS): (ra, dec) in deg\n    (354.01239, 0.29138)>\".\n"},{"output_type":"stream","name":"stdout","text":"No light curve data was returned from tess_kepler."},{"output_type":"stream","name":"stdout","text":"\n"},{"output_type":"stream","name":"stdout","text":"CPU times: user 748 ms, sys: 227 ms, total: 976 ms\nWall time: 4min 55s\n"}],"key":"m6BpWG1u4n"}],"key":"MTAJOs8KTX"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":433,"column":1},"end":{"line":435,"column":1}},"children":[{"type":"text","value":"The light curves are saved in the “parquet_dir” directory.\nEach archive call writes data to a parquet file in its own subdirectory.\nThese can be loaded together as a single dataset:","position":{"start":{"line":433,"column":1},"end":{"line":433,"column":1}},"key":"bm3PwUUkZn"}],"key":"ovrxbxDX1x"}],"key":"E09fZCSOHe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# copy/paste the directory path from the output above, or ask the helper for it like this:\nparquet_dir = helpers.scale_up.run(build=\"parquet_dir\", **kwargs_dict)\ndf_lc = pd.read_parquet(parquet_dir)\n\ndf_lc.sample(10)","key":"ABX8e7iqhT"},{"type":"output","id":"zCcnvmOml61wt1iaXuyqU","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"                                        flux       err archive\nobjectid label   band time                                    \n13       Yang 18 W1   58096.160068  0.326728  0.007631    wise\n30       Yang 18 W1   58285.368526  0.161665  0.008874    wise\n5        Yang 18 W1   57846.823817  0.729626  0.006816    wise\n12       Yang 18 W1   57697.452501  0.212333  0.005203    wise\n19       Yang 18 G    57854.508381  0.028368  0.000696    gaia\n22       Yang 18 G    57440.773692  0.041705  0.000827    gaia\n9        Yang 18 W1   59161.658218  0.114347  0.006327    wise\n3        Yang 18 W2   56860.543300  0.225051  0.015124    wise\n10       Yang 18 W2   58957.736549  1.526785  0.015576    wise\n19       Yang 18 G    57050.459787  0.024466  0.000734    gaia","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>flux</th>\n      <th>err</th>\n      <th>archive</th>\n    </tr>\n    <tr>\n      <th>objectid</th>\n      <th>label</th>\n      <th>band</th>\n      <th>time</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>13</th>\n      <th>Yang 18</th>\n      <th>W1</th>\n      <th>58096.160068</th>\n      <td>0.326728</td>\n      <td>0.007631</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <th>Yang 18</th>\n      <th>W1</th>\n      <th>58285.368526</th>\n      <td>0.161665</td>\n      <td>0.008874</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <th>Yang 18</th>\n      <th>W1</th>\n      <th>57846.823817</th>\n      <td>0.729626</td>\n      <td>0.006816</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <th>Yang 18</th>\n      <th>W1</th>\n      <th>57697.452501</th>\n      <td>0.212333</td>\n      <td>0.005203</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <th>Yang 18</th>\n      <th>G</th>\n      <th>57854.508381</th>\n      <td>0.028368</td>\n      <td>0.000696</td>\n      <td>gaia</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <th>Yang 18</th>\n      <th>G</th>\n      <th>57440.773692</th>\n      <td>0.041705</td>\n      <td>0.000827</td>\n      <td>gaia</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <th>Yang 18</th>\n      <th>W1</th>\n      <th>59161.658218</th>\n      <td>0.114347</td>\n      <td>0.006327</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <th>Yang 18</th>\n      <th>W2</th>\n      <th>56860.543300</th>\n      <td>0.225051</td>\n      <td>0.015124</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <th>Yang 18</th>\n      <th>W2</th>\n      <th>58957.736549</th>\n      <td>1.526785</td>\n      <td>0.015576</td>\n      <td>wise</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <th>Yang 18</th>\n      <th>G</th>\n      <th>57050.459787</th>\n      <td>0.024466</td>\n      <td>0.000734</td>\n      <td>gaia</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"f1IZb3qxzE"}],"key":"D3c0V0cq4u"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"children":[{"type":"text","value":"Now we can make figures:","position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"key":"GzTl3jsWwD"}],"key":"JFvxKO7AzZ"}],"key":"C7gU6MfKZ3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"_ = create_figures(df_lc=MultiIndexDFObject(data=df_lc), show_nbr_figures=1, save_output=False)","key":"HSlxfDUuLc"},{"type":"output","id":"eWoGNZr-KKMgfog1atNcS","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x800 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"031368e8637337ad8c58c6ed0e571fa5","path":"/fornax-demo-notebooks/build/031368e8637337ad8c58c6ed0e571fa5.png"}}},{"output_type":"stream","name":"stdout","text":"Done\n"}],"key":"FHQF82PxKC"}],"key":"j1mZib920p"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":451,"column":1},"end":{"line":451,"column":1}},"children":[{"type":"text","value":"3. Keyword arguments and script flags","position":{"start":{"line":451,"column":1},"end":{"line":451,"column":1}},"key":"iaY8UmPQ37"}],"identifier":"id-3-keyword-arguments-and-script-flags","label":"3. Keyword arguments and script flags","html_id":"id-3-keyword-arguments-and-script-flags","implicit":true,"key":"xffZ4skFnd"}],"key":"dD5of71OWR"},{"type":"block","position":{"start":{"line":453,"column":1},"end":{"line":453,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":455,"column":1},"end":{"line":455,"column":1}},"children":[{"type":"text","value":"This example shows the python ","position":{"start":{"line":455,"column":1},"end":{"line":455,"column":1}},"key":"srvXOiep7A"},{"type":"inlineCode","value":"kwargs_dict","position":{"start":{"line":455,"column":1},"end":{"line":455,"column":1}},"key":"LoSXHeDOFn"},{"type":"text","value":" and bash script flag options in more detail.","position":{"start":{"line":455,"column":1},"end":{"line":455,"column":1}},"key":"gbUrjJq2vo"}],"key":"af1LLCNa5U"},{"type":"heading","depth":3,"position":{"start":{"line":457,"column":1},"end":{"line":457,"column":1}},"children":[{"type":"text","value":"3.1 Python ","position":{"start":{"line":457,"column":1},"end":{"line":457,"column":1}},"key":"w4mM85EoCX"},{"type":"inlineCode","value":"kwargs_dict","position":{"start":{"line":457,"column":1},"end":{"line":457,"column":1}},"key":"XmosJGSJ4R"}],"identifier":"id-3-1-python-kwargs-dict","label":"3.1 Python kwargs_dict","html_id":"id-3-1-python-kwargs-dict","implicit":true,"key":"E253xDeSrP"},{"type":"paragraph","position":{"start":{"line":459,"column":1},"end":{"line":459,"column":1}},"children":[{"type":"inlineCode","value":"kwargs_dict","position":{"start":{"line":459,"column":1},"end":{"line":459,"column":1}},"key":"IMKULIXo0w"},{"type":"text","value":" is a dictionary containing all keyword arguments for the run. It can contain:","position":{"start":{"line":459,"column":1},"end":{"line":459,"column":1}},"key":"aEPOleofg7"}],"key":"apzLAgSb36"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":461,"column":1},"end":{"line":465,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":461,"column":1},"end":{"line":461,"column":1}},"children":[{"type":"text","value":"names and keyword arguments for any of the ","position":{"start":{"line":461,"column":1},"end":{"line":461,"column":1}},"key":"ar4SMR6mYW"},{"type":"inlineCode","value":"get_*_sample","position":{"start":{"line":461,"column":1},"end":{"line":461,"column":1}},"key":"VM1FUTw17m"},{"type":"text","value":" functions.","position":{"start":{"line":461,"column":1},"end":{"line":461,"column":1}},"key":"u0bHFt6E8J"}],"key":"AdZ28rPS2c"},{"type":"listItem","spread":true,"position":{"start":{"line":462,"column":1},"end":{"line":462,"column":1}},"children":[{"type":"text","value":"keyword arguments for any of the ","position":{"start":{"line":462,"column":1},"end":{"line":462,"column":1}},"key":"g7qvRyN4AZ"},{"type":"inlineCode","value":"*_get_lightcurves","position":{"start":{"line":462,"column":1},"end":{"line":462,"column":1}},"key":"TjxkgNjA8U"},{"type":"text","value":" functions.","position":{"start":{"line":462,"column":1},"end":{"line":462,"column":1}},"key":"YwkxRkB7Qn"}],"key":"s3ey2ypHP2"},{"type":"listItem","spread":true,"position":{"start":{"line":463,"column":1},"end":{"line":465,"column":1}},"children":[{"type":"text","value":"other keyword arguments used directly by the helper.\nThese options and their defaults are shown below, further documented in the helper’s ","position":{"start":{"line":463,"column":1},"end":{"line":463,"column":1}},"key":"nlvTnCo57E"},{"type":"inlineCode","value":"run","position":{"start":{"line":463,"column":1},"end":{"line":463,"column":1}},"key":"PPHmFbrLiZ"},{"type":"text","value":" function.","position":{"start":{"line":463,"column":1},"end":{"line":463,"column":1}},"key":"UVSIN4084t"}],"key":"n2xTapaW1K"}],"key":"XLav9b9dWm"}],"key":"BjaRukbmSN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# show kwargs_dict defaults\nhelpers.scale_up.DEFAULTS","key":"M6pJLXFb2Q"},{"type":"output","id":"o_0ucJV999iH_AjNFlt-P","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"{'run_id': 'my-run',\n 'get_samples': ['Yang'],\n 'consolidate_nearby_objects': True,\n 'overwrite_existing_sample': True,\n 'archives': ['Gaia',\n  'HCV',\n  'HEASARC',\n  'IceCube',\n  'PanSTARRS',\n  'TESS_Kepler',\n  'WISE',\n  'ZTF'],\n 'overwrite_existing_lightcurves': True,\n 'use_yaml': False,\n 'yaml_filename': 'kwargs.yml',\n 'sample_filename': 'object_sample.ecsv',\n 'parquet_dataset_name': 'lightcurves.parquet'}","content_type":"text/plain"}}}],"key":"OBnTVzfyuB"}],"key":"CKoPpn5X43"},{"type":"block","children":[],"key":"deg1lN3mDm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# show parameter documentation\nprint(helpers.scale_up.run.__doc__)","key":"r1QyGnTB66"},{"type":"output","id":"nNcI6N3AjUmFKCSlZ57eT","data":[{"output_type":"stream","name":"stdout","text":"\n    Run the light_curve_collector step indicated by `build`.\n\n    Parameters\n    ----------\n    build : str\n        Which step to run. Generally either \"sample\" or \"lightcurves\". Can also be either \"kwargs\"\n        or any of the `kwargs_dict` keys, and then the full set of kwargs is built from `kwargs_dict`\n        and either the whole dictionary is returned (if \"kwargs\") or the value of this key is returned.\n    kwargs_dict : dict\n        Key/value pairs for the build function. This can include any key in the dict\n        `helpers.scale_up.DEFAULTS` plus \"archive\".\n\n        run_id : str\n            ID for this run. This is used to name the output subdirectory (\"base_dir\") where the\n            scale_up helper will read/write files.\n\n        get_samples : list or dict[dict]\n            Names of get_<name>_sample functions from which to gather the object sample.\n            To send keyword arguments for any of the named functions, use a dict with key=name\n            value=dict of keyword arguments for the named function). Defaults will be\n            used for any parameter not provided.\n\n        consolidate_nearby_objects : bool\n            Whether to consolidate nearby objects in the sample. Passed to the clean_sample function.\n\n        overwrite_existing_sample : bool\n            Whether to overwrite an existing .ecsv file. If false and the file exists, the sample will simply\n            be loaded from the file and returned.\n\n        archive : str\n            Name of a <name>_get_lightcurves archive function to call when building light curves.\n\n        archives : list or dict[dict]\n            Names of <name>_get_lightcurves functions. Use a dict (key=name, value=dict of kwargs for the named\n            function) to override defaults for the named function. **Note that this does not determine which\n            archives are actually called** (unlike `get_samples` with sample names). This is because the\n            scale_up helper can only run one function at a time, so a single archive name must be passed separately\n            when building light curves.\n\n        overwrite_existing_lightcurves : bool\n            Whether to overwrite an existing .parquet file. If false and the file exists, the light curve\n            data will simply be loaded from the file and returned.\n\n        use_yaml : bool\n            Whether to load additional kwargs from a yaml file.\n\n        yaml_filename : str\n            Name of the yaml to read/write, relative to the base_dir.\n\n        sample_filename: str\n            Name of the `sample_table` .ecsv file to read/write, relative to the base_dir.\n\n        parquet_dataset_name : str\n            Name of the directory to read/write the parquet dataset, relative to the base_dir.\n            The dataset will contain one .parquet file for each archive that returned light curve data.\n\n    Returns\n    -------\n    Various\n        Depending on the `build` parameter, returns the result of the corresponding build function.\n    \n"}],"key":"NwZ9jn746V"}],"key":"l6X4X9Rx5b"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"children":[{"type":"text","value":"3.2 Bash script flags","position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"key":"CnIlPmv8bF"}],"identifier":"id-3-2-bash-script-flags","label":"3.2 Bash script flags","html_id":"id-3-2-bash-script-flags","implicit":true,"key":"p89CuDLDun"},{"type":"paragraph","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"key":"LMme7ExgwM"},{"type":"inlineCode","value":"-h","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"key":"PT83TYhsqS"},{"type":"text","value":" (help) flag to view the script’s flag options:","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"key":"Nv2tKaD2X6"}],"key":"YSfJm5TIY5"}],"key":"fFLaXaLl2l"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# show flag documentation\n!bash code_src/helpers/scale_up.sh -h","key":"TKioVEDgdb"},{"type":"output","id":"4775BhfwMPy0mNO9at9q_","data":[{"output_type":"stream","name":"stdout","text":"---- scale_up.sh ----\r\n\r\nUse this script to launch and monitor a large-scale \"run\" to load a sample of target objects\r\nfrom the literature and collect their multi-wavelength light curves from various archives.\r\nFor complete usage information, see the scale_up notebook tutorial.\r\n\r\nFLAG OPTIONS\r\n------------\r\n\r\nRequired flags:\r\n\r\n    -r 'run_id'\r\n        ID for the run. No spaces or special characters.\r\n        Determines the name of the output directory.\r\n        Can be used in multiple script calls to manage the same run.\r\n\r\nFlags used to launch a run (optional):\r\n\r\n    -a 'archive names'\r\n        Space-separated list of archive names like 'HEASARC PanSTARRS WISE' (case insensitive),\r\n        or a shortcut, e.g., 'all'.\r\n        The get_<name>_lightcurves function will be called once for each name.\r\n        If this flag is not supplied, no light-curve data will be retrieved.\r\n\r\n    -d 'key=value'\r\n        Any top-level key/value pair in the python kwargs_dict where the\r\n        value is a basic type (e.g., bool or string, but not list or dict).\r\n        Repeat the flag to send multiple kwargs.\r\n        For more flexibility, use the -j flag and/or store the kwargs_dict as a\r\n        yaml file and use: -d 'use_yaml=true'. Order of precedence is dict, json, yaml.\r\n\r\n    -j 'json string'\r\n        The python kwargs_dict as a json string. An example usage is:\r\n        -j '{get_samples: {SDSS: {num: 50}}, archives: {ZTF: {nworkers: 8}}}'\r\n        The string can be created in python by first constructing the dictionary and then using:\r\n            >>> import json\r\n            >>> json.dumps(kwargs_dict)\r\n        Copy the output, including the surrounding single quotes ('), and paste it as the flag value.\r\n\r\nOther flags (optional):\r\n    These must be used independently and cannot be combined with any other optional flag.\r\n\r\n    -t 'nsleep'\r\n        Use this flag to monitor top after launching a run. This will filter for PIDs\r\n        launched by 'run_id' and save the output to a log file once every 'nsleep' interval.\r\n        'nsleep' will be passed to the sleep command, so values like '10s' and '30m' are allowed.\r\n        The python helper can load the output.\r\n        This option is only available on Linux machines.\r\n\r\n    -k (kill)\r\n        Use this flag to kill all processes that were started using the given 'run_id'.\r\n        This option is only available on Linux machines.\r\n\r\n    -h (help)\r\n        Print this help message.\r\n\r\n"}],"key":"ozJD0A3DED"}],"key":"nMS3p6AGqR"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":485,"column":1},"end":{"line":485,"column":1}},"children":[{"type":"text","value":"3.3 Using a yaml file","position":{"start":{"line":485,"column":1},"end":{"line":485,"column":1}},"key":"OLYAfZKNWJ"}],"identifier":"id-3-3-using-a-yaml-file","label":"3.3 Using a yaml file","html_id":"id-3-3-using-a-yaml-file","implicit":true,"key":"EPyzHMMLtt"},{"type":"paragraph","position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"children":[{"type":"text","value":"It can be convenient to save the parameters in a yaml file, especially when using the bash script or in cases where you want to store parameters for later reference or re-use.","position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"key":"UVQ4Huu2MA"}],"key":"aWIrMJmr53"},{"type":"paragraph","position":{"start":{"line":489,"column":1},"end":{"line":489,"column":1}},"children":[{"type":"text","value":"Define an extended set of parameters and save it as a yaml file:","position":{"start":{"line":489,"column":1},"end":{"line":489,"column":1}},"key":"RZjRekQiNB"}],"key":"sjBbt6w1fR"}],"key":"ztrBF6e6g8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"yaml_run_id = \"demo-kwargs-yaml\"\n\nget_samples = {\n    \"green\": {},\n    \"ruan\": {},\n    \"papers_list\": {\n        \"paper_kwargs\": [\n            {\"paper_link\": \"2022ApJ...933...37W\", \"label\": \"Galex variable 22\"},\n            {\"paper_link\": \"2020ApJ...896...10B\", \"label\": \"Palomar variable 20\"},\n        ]\n    },\n    \"SDSS\": {\"num\": 10, \"zmin\": 0.5, \"zmax\": 2, \"randomize_z\": True},\n    \"ZTF_objectid\": {\"objectids\": [\"ZTF18aabtxvd\", \"ZTF18aahqkbt\", \"ZTF18abxftqm\", \"ZTF18acaqdaa\"]},\n}\n\narchives = {\n    \"Gaia\": {\"search_radius\": 2 / 3600},\n    \"HEASARC\": {\"catalog_error_radii\": {\"FERMIGTRIG\": 1.0, \"SAXGRBMGRB\": 3.0}},\n    \"IceCube\": {\"icecube_select_topN\": 4, \"max_search_radius\": 2.0},\n    \"WISE\": {\"radius\": 1.5, \"bandlist\": [\"W1\", \"W2\"]},\n    \"ZTF\": {\"nworkers\": 6, \"match_radius\": 2 / 3600},\n}\n\nyaml_kwargs_dict = {\n    \"get_samples\": get_samples,\n    \"consolidate_nearby_objects\": False,\n    \"archives\": archives,\n}\n\nhelpers.scale_up.write_kwargs_to_yaml(run_id=yaml_run_id, **yaml_kwargs_dict)","key":"nFSZZJilH9"},{"type":"output","id":"wvGJnHZZRkTvwTY8s3G_E","data":[{"output_type":"stream","name":"stdout","text":"kwargs written to /home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-kwargs-yaml/kwargs.yml\n"}],"key":"dthxwHKjjL"}],"key":"EOxh0v9LJV"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":524,"column":1},"end":{"line":526,"column":1}},"children":[{"type":"text","value":"The path to the yaml file is printed in the output above.\nYou can alter the contents of the file as you like.\nTo use the file, set the kwarg ","position":{"start":{"line":524,"column":1},"end":{"line":524,"column":1}},"key":"StZ1zNUKIm"},{"type":"inlineCode","value":"use_yaml=True","position":{"start":{"line":524,"column":1},"end":{"line":524,"column":1}},"key":"IsnNvbHP9j"},{"type":"text","value":".","position":{"start":{"line":524,"column":1},"end":{"line":524,"column":1}},"key":"K1h9LzXDT9"}],"key":"aAsRV4kfra"},{"type":"paragraph","position":{"start":{"line":528,"column":1},"end":{"line":528,"column":1}},"children":[{"type":"text","value":"Python example for the get-sample step:","position":{"start":{"line":528,"column":1},"end":{"line":528,"column":1}},"key":"uPtj7Kqf4g"}],"key":"uWYMogOLD5"}],"key":"AfLYyT4U4a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sample_table = helpers.scale_up.run(build=\"sample\", run_id=yaml_run_id, use_yaml=True)","key":"FldYOhhjVW"},{"type":"output","id":"nsON2nUl74_ys7VyQWwBN","data":[{"output_type":"stream","name":"stdout","text":"2025/10/12 22:35:55 UTC | [pid=2550] Starting build=sample\n"},{"output_type":"stream","name":"stdout","text":"Building object sample from: ['sdss', 'ztf_objectid', 'green', 'papers_list', 'ruan']\n"},{"output_type":"stream","name":"stderr","text":"WARNING: OverflowError converting to IntType in column specObjID, reverting to String. [astropy.io.ascii.fastbasic]\n"},{"output_type":"stream","name":"stdout","text":"SDSS Quasar: 10\n"},{"output_type":"stream","name":"stdout","text":"number of ztf coords added by Objectname: 4\n"},{"output_type":"stream","name":"stdout","text":"Changing Look AGN- Green et al 2022:  19\n"},{"output_type":"stream","name":"stdout","text":"number of sources added from Galex variable 22 :48\n"},{"output_type":"stream","name":"stdout","text":"number of sources added from Palomar variable 20 :20\n"},{"output_type":"stream","name":"stdout","text":"Changing Look AGN- Ruan et al 2016:  3\nObject sample size: 104\nObject sample saved to: /home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/light_curves/output/lightcurves-demo-kwargs-yaml/object_sample.ecsv\n2025/10/12 22:36:19 UTC\n"}],"key":"AuyKSEwiQK"}],"key":"Z26JCkH6GC"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":534,"column":1},"end":{"line":534,"column":1}},"children":[{"type":"text","value":"Bash example:","position":{"start":{"line":534,"column":1},"end":{"line":534,"column":1}},"key":"XEPzrrIUuC"}],"key":"nEJ2vHtLDE"}],"key":"uV2aU08tFz"},{"type":"block","position":{"start":{"line":536,"column":1},"end":{"line":536,"column":1}},"children":[{"type":"code","lang":"bash","value":"$ yaml_run_id=demo-kwargs-yaml\n$ bash code_src/helpers/scale_up.sh -r \"$yaml_run_id\" -d \"use_yaml=true\" -a \"Gaia HEASARC IceCube PanSTARRS WISE ZTF\"","position":{"start":{"line":538,"column":1},"end":{"line":541,"column":1}},"key":"rF2XhgKHj5"}],"key":"po0D8VsO64"},{"type":"block","position":{"start":{"line":543,"column":1},"end":{"line":543,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"children":[{"type":"text","value":"Appendix: What to expect","position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"key":"Yf6RewJ75Q"}],"identifier":"appendix-what-to-expect","label":"Appendix: What to expect","html_id":"appendix-what-to-expect","implicit":true,"key":"LZyjaO4spE"}],"key":"yyVUO2b0mC"},{"type":"block","position":{"start":{"line":547,"column":1},"end":{"line":547,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"children":[{"type":"text","value":"Challenges of large-scale runs","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"key":"Da0H162P30"}],"identifier":"challenges-of-large-scale-runs","label":"Challenges of large-scale runs","html_id":"challenges-of-large-scale-runs","implicit":true,"key":"qNmHCGjA1E"}],"key":"BSPGoAsiZa"},{"type":"block","position":{"start":{"line":551,"column":1},"end":{"line":551,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":553,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Scaling up to large sample sizes brings new challenges.\nEven if things go smoothly, each function call may need to use a lot more resources like CPU, RAM, and bandwidth, and may take much longer to complete.\nAlso, we’ll want to run some functions in parallel to save time overall, but that will mean they must compete with each other for resources.","position":{"start":{"line":553,"column":1},"end":{"line":553,"column":1}},"key":"ThnbjdFd00"}],"key":"lej5NlPcrh"},{"type":"paragraph","position":{"start":{"line":557,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"text","value":"These issues are complicated by the fact that different combinations of samples and archive calls can trigger different problems.\nInefficiencies in any part of the process -- our code, archive backends, etc. -- which may have been negligible at small scale can balloon into significant hurdles.","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"jZ47zRH1le"}],"key":"T7elN62CY4"},{"type":"paragraph","position":{"start":{"line":560,"column":1},"end":{"line":562,"column":1}},"children":[{"type":"text","value":"Problems can manifest in different ways.\nFor example, progress may slow to a crawl, or it may run smoothly for several hours and then crash suddenly.\nIf the job is running in the background, print statements and error messages may get lost and never be displayed for the user if they are not redirected to a file.","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"ZrF1i5fZS1"}],"key":"zx8C4eNZ4D"}],"key":"r1HP0EiXGl"},{"type":"block","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"text","value":"Needs and wants for large-scale runs","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"key":"Um7Kk5MNPp"}],"identifier":"needs-and-wants-for-large-scale-runs","label":"Needs and wants for large-scale runs","html_id":"needs-and-wants-for-large-scale-runs","implicit":true,"key":"YeLKgPLdGX"}],"key":"lM6voS2AZe"},{"type":"block","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":570,"column":1},"end":{"line":573,"column":1}},"children":[{"type":"text","value":"The main goal is to reduce the total time it takes to run the full code, so we want to look for opportunities to parallelize.\nWe can group the light_curve_collector code into two main steps: (1) gather the target object sample; then (2) generate light curves by querying the archives and standardizing the returned data.\nAll of the archive calls have to wait for the sample to be available before starting, but then they can run independently in parallel.\nThis is fortunate, since gathering the sample does not take long compared to the archive calls.","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"key":"WfDefS6555"}],"key":"HaF15IBhXn"},{"type":"paragraph","position":{"start":{"line":575,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"text","value":"It is useful to be able to monitor the run’s resource usage and capture print statements, error messages, etc. to log files in order to understand if/when something goes wrong.\nEven with parallelization, gathering light curves for a large sample of objects is likely to take a few hours at least.\nSo we want to automate the monitoring tasks as much as possible.","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"vg8WFwWVC6"}],"key":"RZloFVd6Pe"},{"type":"paragraph","position":{"start":{"line":579,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"text","value":"If the run fails, we’d like to be able to restart it without having to redo steps that were previously successful.\nTo accomplish this, the inputs and outputs need to be less tightly coupled than they are in the light_curve_collector notebook.\nSpecifically, we want to save the sample and light curve data to file as soon as each piece is collected, and we want the archive functions to be able to get the ","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"CKnaNr5Fx8"},{"type":"inlineCode","value":"sample_table","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"uTUg1OalLP"},{"type":"text","value":" input from file.","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"OYdQMdRdAj"}],"key":"cLcJLGIXAy"},{"type":"paragraph","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"children":[{"type":"text","value":"The python helper and bash script were specifically designed to fulfill many of these wants and needs.","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"key":"LC3iSROInV"}],"key":"i23SnBATNo"}],"key":"cEr0zy6NL1"},{"type":"block","position":{"start":{"line":585,"column":1},"end":{"line":585,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":587,"column":1},"end":{"line":587,"column":1}},"children":[{"type":"text","value":"Advice for the user","position":{"start":{"line":587,"column":1},"end":{"line":587,"column":1}},"key":"FSgqGI2oPl"}],"identifier":"advice-for-the-user","label":"Advice for the user","html_id":"advice-for-the-user","implicit":true,"key":"v6lhDN3d0U"}],"key":"hlbrhypDyx"},{"type":"block","position":{"start":{"line":589,"column":1},"end":{"line":589,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":591,"column":1},"end":{"line":591,"column":1}},"children":[{"type":"text","value":"Getting started:","position":{"start":{"line":591,"column":1},"end":{"line":591,"column":1}},"key":"get0bm8IDO"}],"key":"YOAl5e7EqQ"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":592,"column":1},"end":{"line":599,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":592,"column":1},"end":{"line":592,"column":1}},"children":[{"type":"text","value":"Skim this notebook to understand the process, available options, and potential sticking points.","position":{"start":{"line":592,"column":1},"end":{"line":592,"column":1}},"key":"Y67QJG4jD4"}],"key":"mFeCZOjH8g"},{"type":"listItem","spread":true,"position":{"start":{"line":593,"column":1},"end":{"line":593,"column":1}},"children":[{"type":"text","value":"Try things with a small sample size first, then scale up to your desired full sample.","position":{"start":{"line":593,"column":1},"end":{"line":593,"column":1}},"key":"tVUzs8jeDd"}],"key":"WizoOZjfDU"},{"type":"listItem","spread":true,"position":{"start":{"line":594,"column":1},"end":{"line":599,"column":1}},"children":[{"type":"text","value":"Don’t be surprised if something goes wrong.\nEvery new combination of factors can present different challenges and reasons for the code to fail.\nThis includes the sample selection, which archives are called and what parameters are used, runtime environment, machine CPU and RAM capabilities, network bandwidth, etc.\nScaling up any code base comes with challenges, and some of these cannot be fully managed by pre-written code.\nYou may need to observe how the code performs, diagnose a problem, and adapt the input parameters, machine size, etc. in order to successfully execute.","position":{"start":{"line":594,"column":1},"end":{"line":594,"column":1}},"key":"xoFSaTsZ1j"}],"key":"UoVMOZIkX0"}],"key":"qzpKp01zap"},{"type":"paragraph","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"children":[{"type":"text","value":"To execute a run:","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"key":"FPDFrocFtH"}],"key":"txrJAdV5gr"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":601,"column":1},"end":{"line":606,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":601,"column":1},"end":{"line":601,"column":1}},"children":[{"type":"text","value":"Define all of the get-sample and get-lightcurve parameters.","position":{"start":{"line":601,"column":1},"end":{"line":601,"column":1}},"key":"hOtSGGF26T"}],"key":"wQ3VraP0r2"},{"type":"listItem","spread":true,"position":{"start":{"line":602,"column":1},"end":{"line":603,"column":1}},"children":[{"type":"text","value":"Launch the run by calling the bash script or some other multi-processing method.\nCapturing stdout, stderr and ","position":{"start":{"line":602,"column":1},"end":{"line":602,"column":1}},"key":"YwUaUe8ext"},{"type":"inlineCode","value":"top","position":{"start":{"line":602,"column":1},"end":{"line":602,"column":1}},"key":"Kgi7Ziv0hk"},{"type":"text","value":" output to log files is highly recommended.","position":{"start":{"line":602,"column":1},"end":{"line":602,"column":1}},"key":"tsuZJVaJoq"}],"key":"vVX7XhCBb6"},{"type":"listItem","spread":true,"position":{"start":{"line":604,"column":1},"end":{"line":606,"column":1}},"children":[{"type":"text","value":"If a get-lightcurve (get-sample) job exits without writing a .parquet (.ecsv) file, inspect the logs and ","position":{"start":{"line":604,"column":1},"end":{"line":604,"column":1}},"key":"QGFf2MQ2o0"},{"type":"inlineCode","value":"top","position":{"start":{"line":604,"column":1},"end":{"line":604,"column":1}},"key":"uKLWDxvzKR"},{"type":"text","value":" output to try to determine the reason it failed.\nIt could be anything from a missing python library (install it), to an archive encountering an internal error (wait a bit and try again), to the job getting killed prematurely because its needs exceeded the available RAM (try a machine with more RAM, a smaller sample size, or running fewer archive calls at a time), to many other things.","position":{"start":{"line":604,"column":1},"end":{"line":604,"column":1}},"key":"Wm6xvnoQDF"}],"key":"EXoJIk83XX"}],"key":"FkLqnTydnB"}],"key":"lUm3OCpglm"},{"type":"block","position":{"start":{"line":607,"column":1},"end":{"line":607,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":609,"column":1},"end":{"line":609,"column":1}},"children":[{"type":"text","value":"About this notebook","position":{"start":{"line":609,"column":1},"end":{"line":609,"column":1}},"key":"jq0K54c4mr"}],"identifier":"about-this-notebook","label":"About this notebook","html_id":"about-this-notebook","implicit":true,"key":"FwsKxzy0cy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":611,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"children":[{"type":"strong","position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"children":[{"type":"text","value":"Authors","position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"key":"VEP0fqlrPe"}],"key":"ho7f6q91m2"},{"type":"text","value":": Troy Raen, Jessica Krick, Brigitta Sipőcz, Shoubaneh Hemmati, Andreas Faisst, David Shupe, and the Fornax team","position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"key":"XsAtedfrZe"}],"key":"PvlSzMzd1y"},{"type":"listItem","spread":true,"position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"strong","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"text","value":"Contact:","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"yJzRToMaxm"}],"key":"StbpVskGyJ"},{"type":"text","value":" For help with this notebook, please open a topic in the ","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"B0VITuSaYk"},{"type":"link","url":"https://discourse.fornax.sciencecloud.nasa.gov/","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"text","value":"Fornax Community Forum","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"T7gTz0iiQd"}],"urlSource":"https://discourse.fornax.sciencecloud.nasa.gov/","key":"Kyx1id6x9M"},{"type":"text","value":" “Support” category.","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"G7GtCtLISs"}],"key":"uFXXRlpJxq"}],"key":"zbKRWGODqh"}],"key":"sFmUx3eedS"}],"key":"ipNyMvn0TX"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Make Multi-Wavelength Light Curves Using Archival Data","url":"/light-curve-collector","group":"The Fornax Initiative"},"next":{"title":"Light Curve Classifier","url":"/light-curve-classifier","group":"The Fornax Initiative"}}},"domain":"http://localhost:3000"}