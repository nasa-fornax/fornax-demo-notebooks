{"version":2,"kind":"Notebook","sha256":"ba484ee77035becac9f352de68a4fdf1bc20d258541c9f6c22e9023a616e9e60","slug":"ztf-ps1-crossmatch","location":"/crossmatch/ztf_ps1_crossmatch.md","dependencies":[],"frontmatter":{"title":"Cross-Match ZTF and Pan-STARRS using LSDB","kernelspec":{"name":"python3","display_name":"py-ztf_ps1_crossmatch","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.17.2"}},"content_includes_title":false,"authors":[{"id":"Fornax developers and scientists","name":"Fornax developers and scientists"}],"github":"https://github.com/nasa-fornax/fornax-demo-notebooks","subject":"Fornax Demo Notebooks","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/nasa-fornax/fornax-demo-notebooks/blob/main/crossmatch/ztf_ps1_crossmatch.md","exports":[{"format":"md","filename":"ztf_ps1_crossmatch.md","url":"/fornax-demo-notebooks/build/ztf_ps1_crossmatch-1520cd4e7033e0821f450bd493c1ea0c.md"}]},"mdast":{"type":"root","children":[{"type":"block","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Learning Goals","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"iOX3jHlToz"}],"identifier":"learning-goals","label":"Learning Goals","html_id":"learning-goals","implicit":true,"key":"ssSaJvJj1F"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"By the end of this tutorial, you will:","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"JfvJDCh0pT"}],"key":"KofreBkUzP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"understand how to cross-match cloud-based catalogs using ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"F3Te8HRNXM"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"YxLXhiKvnE"},{"type":"text","value":".","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"ZXWK1TWSeT"}],"key":"C2M1Ldi8Xi"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"understand how to parallelize ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"EOsDqd4anQ"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"lFygWVGDwq"},{"type":"text","value":" cross-matches using ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kRmATywJ6H"},{"type":"inlineCode","value":"dask","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"svjoQ7Pcjh"},{"type":"text","value":".","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tHeHpop8Qo"}],"key":"T6tm2z65Xb"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"have a feeling for when ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"WqhP8TNzqi"},{"type":"inlineCode","value":"dask","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"qcRld7haR1"},{"type":"text","value":" parallelization can be helpful.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"ireWPq6bKx"}],"key":"McMS5viOR0"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"have a rough idea of the maximum number of objects that can be cross matched on each Fornax Science Console server type.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"w8vDkNgeeW"}],"key":"baRqirvquE"}],"key":"KxzbwcgmJX"}],"key":"CZvNi6jCVW"},{"type":"block","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"j0fiwGBqRa"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"ttmQTNXnjm"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"In the era of increasingly large astronomical survey missions like TESS, Gaia, ZTF, Pan-STARRS, Roman, and Rubin, catalog operations are becoming less and less practical to complete on a personal computer. Operations such as source cross-matching can require many GB of memory and take many hours to complete using a single CPU. Recognizing these looming obstacles, many catalogs are becoming accessible to cloud computing platforms like the Fornax Science Console, and increasingly high-performance tools are being developed that leverage cloud computing resources to simplify and speed up catalog operations.","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"sWgEjoAzld"}],"key":"wBgMl1U8XW"},{"type":"paragraph","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"link","url":"https://lsdb.io","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"LSDB","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"cdesbwqsCj"}],"urlSource":"https://lsdb.io","key":"NVakYON9cH"},{"type":"text","value":" is a useful package for performing large cross-matches between HATS catalogs. It can leverage the ","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"Q9kXBvt282"},{"type":"link","url":"https://www.dask.org/","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Dask","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"kTTwDpEAfg"}],"urlSource":"https://www.dask.org/","key":"flPbO0leIk"},{"type":"text","value":" library to work with larger-than-memory data sets and distribute computation tasks across multiple cores. Users perform large cross-matches without ever having to download a file.","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"ICQQFDbxOl"}],"key":"ZaI9xMO6Ud"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"In this tutorial, we will use ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"CGTrKvhaYv"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"xUIh066QdE"},{"type":"text","value":" with ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"OZVntl9D2D"},{"type":"inlineCode","value":"dask","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"rTTDS7wMCM"},{"type":"text","value":" to perform a cross-match between ZTF and Pan-STARRS HATS catalogs to benchmark the performance. These HATS catalogs are stored on AWS S3 cloud storage. An application might be to collect time-series photometry for 10,000 or more stars in the Kepler field from ZTF and Pan-STARRS. With this in mind, we will begin by cross-matching 10,000 sources from ZTF with the Pan-STARRS mean-object catalog. The user can choose to scale up to a larger number of rows to test the performance. The CSV file provided with this notebook contains the runtime results of tests run on various Fornax Science Console server types for comparison.","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"bTEn8lwdL3"}],"key":"x5XkhX3n76"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"As of August 2025, the Fornax Science Console server types were:","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"hoNnf4no0J"}],"key":"Hosxigpc89"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":37,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"“Small” - 4 GB RAM, 2 CPU","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"gbKmgYk93a"}],"key":"nKCucOlNQD"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"“Medium” - 16 GB RAM, 4 CPU","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"v6f8ecbVaV"}],"key":"w3dtKtZaUZ"},{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"“Large” -  64 GB RAM, 16 CPU","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"gvfTA2wYKE"}],"key":"BHgcvIlHG3"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"text","value":"“XLarge” -  512 GB RAM, 128 CPU","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"wZBANgN5JT"}],"key":"uIU8UnAuNV"}],"key":"Wjz9SxtGkh"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"For generality, we will refer to the server type by the number of CPUs. For each server and each number of cross-match rows, we want to know the performance with (1) default ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"HzBmbx1N9G"},{"type":"inlineCode","value":"dask","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"DIaLQY3Nuz"},{"type":"text","value":" configuration, (2) minimal ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"mWvwwbChwo"},{"type":"inlineCode","value":"dask","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Km5Da0wzwl"},{"type":"text","value":" - 1 worker, (3) bigger ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"a4Sn5iT9oV"},{"type":"inlineCode","value":"dask","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"st5vCjyIr6"},{"type":"text","value":" - as many workers as we can use, and (4) auto-scaling ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"BzsD9Uc8va"},{"type":"inlineCode","value":"dask","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Rqn8JyQbmk"},{"type":"text","value":".","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"GD5nclqslt"}],"key":"IGy6AGsqTA"},{"type":"paragraph","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"strong","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Note","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"Bi9fdasdo1"}],"key":"r29g1z9Iq8"},{"type":"text","value":" that in this notebook, only one configuration (combination of CPU count, number of cross-match rows, and ","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"aiBQ0Cu3Et"},{"type":"inlineCode","value":"dask","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"QqvpMIaerQ"},{"type":"text","value":" configuration) is run at a time. It must be reconfigured and rerun to benchmark each configuration.","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"VHlsd77mBD"}],"key":"RQL0Mh8KoP"}],"key":"xDxngbizh9"},{"type":"block","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Runtime","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"azmBEcbZrW"}],"identifier":"runtime","label":"Runtime","html_id":"runtime","implicit":true,"key":"nxkZG8nVZU"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"As of August 2025, as written (10,000 rows with the “default” ","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"ObIZWgCENZ"},{"type":"inlineCode","value":"dask","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"u41Nbbka4c"},{"type":"text","value":" settings), this notebook takes about 45 seconds to run on the “small” Fornax Science Console server type (4 GB RAM and 2 CPUs). Users can modify the configuration for larger cross-matches, which will take more time. E.g., cross-matching 10 million rows on the “large” server type (64 GB RAM and 16 CPUs) can take ~5 minutes.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"u9YaTO1kBg"}],"key":"YhLragMTAz"}],"key":"a4jsBKJbog"},{"type":"block","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"gAazeGx86H"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"LtHilZaCeM"},{"type":"paragraph","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"We require the following packages:","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"ZqU0zhllX3"}],"key":"pHxbGsNqeP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":57,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"inlineCode","value":"os","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"meRCHlpMy5"},{"type":"text","value":" solely for the ","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"uvwWCVN3iI"},{"type":"inlineCode","value":"cpu_count","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"dlJHbMwe4d"},{"type":"text","value":" function,","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"qXfOhHZY4w"}],"key":"IF9OsckEQ4"},{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"inlineCode","value":"datetime","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"ClFbjtiTfw"},{"type":"text","value":" for measuring the crossmatch time,","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"Hcx65XVMZJ"}],"key":"Nl0NvJzsKo"},{"type":"listItem","spread":true,"position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"inlineCode","value":"pandas","position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"key":"pQBI7ZELsg"},{"type":"text","value":" to write and read the CSV of benchmarks","position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"key":"e0Dn0xYCnr"}],"key":"tO047LNQfx"},{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"e8BMy7wHyl"},{"type":"text","value":" to plot the benchmarks,","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"pMJqi6Oem1"}],"key":"RNdxzXehin"},{"type":"listItem","spread":true,"position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"inlineCode","value":"astropy","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"MQMsoNDw2F"},{"type":"text","value":" for coordinates and units,","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"lJsgdt2tgR"}],"key":"w0nq5E53rv"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"inlineCode","value":"lsdb","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"sFm7ohkFR6"},{"type":"text","value":" to read the catalogs and perform the cross-match, and","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"TpqfqdDKWx"}],"key":"uYTljkbjGo"},{"type":"listItem","spread":true,"position":{"start":{"line":63,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"inlineCode","value":"dask","position":{"start":{"line":63,"column":1},"end":{"line":63,"column":1}},"key":"Jy8gEEQIZZ"},{"type":"text","value":" for parallelization.","position":{"start":{"line":63,"column":1},"end":{"line":63,"column":1}},"key":"LzgPz9PP80"}],"key":"LLyo5XsA8J"}],"key":"LqdIKk7CDc"}],"key":"vGan60gwqr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# %pip install -r requirements_ztf_ps1_crossmatch.txt","key":"u1BUkaHdED"},{"type":"output","id":"PDd9KfWwcJrHH9O6k2sWd","data":[],"key":"feMvCbUhay"}],"key":"W60RrzQDO3"},{"type":"block","children":[],"key":"hFAPhTeoRj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from os import cpu_count\nfrom datetime import datetime\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nimport lsdb\nfrom dask.distributed import Client, LocalCluster","key":"w1GaOeU2lu"},{"type":"output","id":"oKhRK5paCt_04JCnAhEVU","data":[],"key":"CjDxjLFEUA"}],"key":"lYirJOEuSa"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"children":[{"type":"text","value":"1. Preconfiguring the Run","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"qUXmdg0xyy"}],"identifier":"id-1-preconfiguring-the-run","label":"1. Preconfiguring the Run","html_id":"id-1-preconfiguring-the-run","implicit":true,"key":"nqhPYqFO9I"},{"type":"paragraph","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"text","value":"First choose the number of rows we want to cross-match and our ","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"lXPkdJysoR"},{"type":"inlineCode","value":"dask","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"O0MFRiAQWC"},{"type":"text","value":" environment. For tips on using ","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"nsevifm6np"},{"type":"inlineCode","value":"dask","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"eC1WH3tyBR"},{"type":"text","value":" with ","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"Ysqr64xZvd"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"OnTQEGZkTG"},{"type":"text","value":", see ","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"CxM4ZBjpq7"},{"type":"link","url":"https://docs.lsdb.io/en/stable/tutorials/dask-cluster-tips.html","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"inlineCode","value":"lsdb","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"yHFS1CVUuq"},{"type":"text","value":"’s Dask Cluster Tips","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"MhPfdndEPN"}],"urlSource":"https://docs.lsdb.io/en/stable/tutorials/dask-cluster-tips.html","key":"N9ejgmREOf"},{"type":"text","value":".","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"NizCBsG5Kf"}],"key":"FEYjvytgw8"}],"key":"twQlwnAIRW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The left table will have about this many rows. The cross-matched product will have slightly fewer.\n# Set Nrows = -1 to cross-match the entire catalog. The full catalog cross-match is\n# recommended ONLY on XLarge instance with at least 32 workers.\nNrows = 10_000\n\n# dask_workers can be:\n# - \"default\" (uses the default scheduler which runs all tasks in the main process)\n# - an integer, which uses a fixed number of workers\n# - \"scale\" to use an adaptive, auto-scaling cluster.\ndask_workers = \"default\"","key":"kjxlOXcDze"},{"type":"output","id":"Wdi2y1ZR9-mngihAJEQ9s","data":[],"key":"mBXDzTETe3"}],"key":"A3Dp5TpyB3"},{"type":"block","children":[],"key":"y8XDvSswmo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The code in this cell is automatic setup based on the configuration in the previous cell, so it can be left alone.\n\n# We must pass a radius to lsdb. Here is the mapping between radius and desired number of rows for ZTF.\n# The values in this dictionary were determined experimentally, by\n# incrementing/decrementing the radius until the desired number of\n# catalog rows was returned.\nradius = { # Nrows: radius_arcseconds\n           10_000:     331,\n          100_000:    1047,\n        1_000_000:    3318,\n       10_000_000:  11_180,\n      100_000_000:  33_743,\n    1_000_000_000: 102_000,\n}\n\n# Set up dask cluster\nif dask_workers == \"scale\":\n    cluster = LocalCluster()\n    cluster.adapt(minimum_cores=1, maximum_cores=cpu_count())\n    client = Client(cluster)\nelif isinstance(dask_workers, int):\n    client = Client(\n        # Number of Dask workers - Python processes to run\n        n_workers=dask_workers,\n        # Limits number of Python threads per worker\n        threads_per_worker=1,\n        # Memory limit per worker\n        memory_limit=None,\n    )\nelif dask_workers == \"default\":\n    # Either using default configuration or configuring Dask\n    # using the built-in DaskHub\n    pass\nelse:\n    raise ValueError(\"`dask_workers` must be one of 'default', 'scale' or an int.\")\n\n# The performance may depend on the number of CPUs available, so we'll track that as well.\nnum_cpus = cpu_count()","key":"j94cLSofyS"},{"type":"output","id":"PLrwwVR5ofEsVgL2X_89V","data":[],"key":"hzoblqGv9M"}],"key":"HhXUgiuTlG"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":141,"column":1},"end":{"line":141,"column":1}},"children":[{"type":"text","value":"2. Read in catalogs and downselect ZTF to Nrows","position":{"start":{"line":141,"column":1},"end":{"line":141,"column":1}},"key":"yjjAWFtNZB"}],"identifier":"id-2-read-in-catalogs-and-downselect-ztf-to-nrows","label":"2. Read in catalogs and downselect ZTF to Nrows","html_id":"id-2-read-in-catalogs-and-downselect-ztf-to-nrows","implicit":true,"key":"gq2wc6gFyj"}],"key":"ch7G6HFb2z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define sky area. Here we're using the Kepler field.\nc = SkyCoord('19:22:40  +44:30:00', unit=(u.hourangle, u.deg))\ncone_ra, cone_dec = c.ra.value, c.dec.value\n\nif Nrows > 0:\n    radius_arcsec = radius[Nrows]\n    search_filter = lsdb.ConeSearch(cone_ra, cone_dec, radius_arcsec)\nelse:\n    # Full cross-match\n    # ONLY ON XLARGE ENVIRONMENT USING AT LEAST 32 CPUS\n    search_filter = None\n\n# Read ZTF DR23\nztf_path = \"s3://ipac-irsa-ztf/contributed/dr23/objects/hats\"\nztf_piece = lsdb.open_catalog(\n    ztf_path,\n    columns=[\"oid\", \"ra\", \"dec\"],\n    search_filter=search_filter\n)\n\n# Read Pan-STARRS DR2\nps1_path = \"s3://stpubdata/panstarrs/ps1/public/hats/otmo\"\nps1_margin = \"s3://stpubdata/panstarrs/ps1/public/hats/otmo_10arcs\"\nps1 = lsdb.open_catalog(\n    ps1_path,\n    margin_cache=ps1_margin,\n    columns=[\"objName\",\"objID\",\"raMean\",\"decMean\"],\n)","key":"MiAoOpWK66"},{"type":"output","id":"XHrLFvkgK9egvpm9nPxUR","data":[],"key":"XIYjPicocP"}],"key":"N30gbDqRKf"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"3. Initialize the crossmatch and compute, measuring the time elapsed.","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"FO1zYPFKs3"}],"identifier":"id-3-initialize-the-crossmatch-and-compute-measuring-the-time-elapsed","label":"3. Initialize the crossmatch and compute, measuring the time elapsed.","html_id":"id-3-initialize-the-crossmatch-and-compute-measuring-the-time-elapsed","implicit":true,"key":"qGGzBggZ6X"}],"key":"qMTRV0uWDT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Setting up the cross-match actually takes very little time\nztf_x_ps1 = ztf_piece.crossmatch(ps1, radius_arcsec=1, n_neighbors=1, suffixes=(\"_ztf\", \"_ps1\"))\nztf_x_ps1","key":"VF44gPMsyE"},{"type":"output","id":"30XfScRidVxrg6iP2k44P","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/fornax-demo-notebooks/fornax-demo-notebooks/.tox/py312-buildhtml/lib/python3.12/site-packages/lsdb/catalog/catalog.py:256: FutureWarning: The default suffix behavior will change from applying suffixes to all columns to only applying suffixes to overlapping columns in a future release.To maintain the current behavior, explicitly set `suffix_method='all_columns'`. To change to the new behavior, set `suffix_method='overlapping_columns'`.\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                            oid_ztf           ra_ztf          dec_ztf      objName_ps1       objID_ps1       raMean_ps1      decMean_ps1     _dist_arcsec\nnpartitions=16                                                                                                                                           \n1062849512059437056  int64[pyarrow]  double[pyarrow]  double[pyarrow]  string[pyarrow]  int64[pyarrow]  double[pyarrow]  double[pyarrow]  double[pyarrow]\n1062919880803614720             ...              ...              ...              ...             ...              ...              ...              ...\n...                             ...              ...              ...              ...             ...              ...              ...              ...\n1063905043222102016             ...              ...              ...              ...             ...              ...              ...              ...\n1063975411966279680             ...              ...              ...              ...             ...              ...              ...              ...\nDask Name: nestedframe, 3 expressions\nExpr=MapPartitions(NestedFrame)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog ZTF_DR23_Objects_x_otmo:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>oid_ztf</th>\n      <th>ra_ztf</th>\n      <th>dec_ztf</th>\n      <th>objName_ps1</th>\n      <th>objID_ps1</th>\n      <th>raMean_ps1</th>\n      <th>decMean_ps1</th>\n      <th>_dist_arcsec</th>\n    </tr>\n    <tr>\n      <th>npartitions=16</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 6, Pixel: 15104</th>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>string[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 15105</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 15118</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 15119</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>8 out of 8 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"fd450jBZqZ"}],"key":"CUzmKIAiNf"},{"type":"block","children":[],"key":"WkGMr5CVNr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Executing the cross-match does take time\nt0 = datetime.now()\nxmatch = ztf_x_ps1.compute()\nt1 = datetime.now() - t0\n\nprint(\"Time Elapsed:\", t1)","key":"P2Db597uNx"},{"type":"output","id":"ZWsLafFBDPrGodW4j0IK3","data":[{"output_type":"stream","name":"stdout","text":"Time Elapsed: 0:00:13.965320\n"}],"key":"CcNmzsVmcR"}],"key":"u9WKEq4su1"},{"type":"block","children":[],"key":"R5Judchfih"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Check the length of the resulting table\nrows_out = len(xmatch)\nprint(f\"Number of rows out: {rows_out:,d}\")","key":"K2d6RCzNnI"},{"type":"output","id":"JrEfkYAm4X37tHbd2IcFb","data":[{"output_type":"stream","name":"stdout","text":"Number of rows out: 8,593\n"}],"key":"esRRaWe8hh"}],"key":"TGyGFTpGFJ"},{"type":"block","children":[],"key":"Mb2xJU0Izi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Close the Dask cluster/client when finished\nif dask_workers != \"default\":\n    if dask_workers == \"scale\":\n        cluster.close()\n    client.close()","key":"PpXWJIyBY8"},{"type":"output","id":"eWpAtWj1MzDYoBycvRhZN","data":[],"key":"j8Ho23AjQ4"}],"key":"QxHY7qCFD5"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":205,"column":1},"end":{"line":205,"column":1}},"children":[{"type":"text","value":"4. Record and plot benchmarks","position":{"start":{"line":205,"column":1},"end":{"line":205,"column":1}},"key":"UhX108Ud5t"}],"identifier":"id-4-record-and-plot-benchmarks","label":"4. Record and plot benchmarks","html_id":"id-4-record-and-plot-benchmarks","implicit":true,"key":"Y6a9yH7NoB"},{"type":"paragraph","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"children":[{"type":"text","value":"Write the recorded benchmark to an output file, then make plots to analyze the benchmarks.","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"key":"WG3iDSQtry"}],"key":"yEmnd1MJhy"}],"key":"FaD20qtUio"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"try:\n    # read in file if it exists\n    benchmarks = pd.read_csv(\"output/xmatch_benchmarks.csv\", index_col=[\"Ncpus\", \"Nrows\", \"Nworkers\"])\nexcept FileNotFoundError:\n    # otherwise create an empty DataFrame\n    multi_index = pd.MultiIndex(levels=[[], [], []], codes=[[], [], []], names=[\"Ncpus\", \"Nrows\", \"Nworkers\"])\n    benchmarks = pd.DataFrame(index=multi_index, columns=[\"time\", \"Nrows_out\", \"updated\"])\n\n# assign values\nbenchmarks.loc[\n    (num_cpus, Nrows, dask_workers),\n    [\"time\", \"Nrows_out\", \"updated\"]\n    ] = t1.total_seconds(), int(rows_out), datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\nbenchmarks = benchmarks.sort_index()\n# benchmarks.to_csv(\"output/xmatch_benchmarks.csv\") # Uncomment this to write the new benchmarks to file\nbenchmarks","key":"uIqYFS3PaK"},{"type":"output","id":"GiZ0D_N_rGZx8I2535S9D","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"                                   time    Nrows_out              updated\nNcpus Nrows      Nworkers                                                \n2     10000      1            48.879788       8593.0  2025-08-05 18:13:57\n                 2            30.538154       8593.0  2025-08-05 18:15:26\n...                                 ...          ...                  ...\n128   1000000000 default    1611.382256  874362668.0  2025-08-11 22:16:12\n      7500000000 default   14539.090000          NaN  2025-08-12 21:37:39\n\n[125 rows x 3 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>time</th>\n      <th>Nrows_out</th>\n      <th>updated</th>\n    </tr>\n    <tr>\n      <th>Ncpus</th>\n      <th>Nrows</th>\n      <th>Nworkers</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">2</th>\n      <th rowspan=\"2\" valign=\"top\">10000</th>\n      <th>1</th>\n      <td>48.879788</td>\n      <td>8593.0</td>\n      <td>2025-08-05 18:13:57</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30.538154</td>\n      <td>8593.0</td>\n      <td>2025-08-05 18:15:26</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">128</th>\n      <th>1000000000</th>\n      <th>default</th>\n      <td>1611.382256</td>\n      <td>874362668.0</td>\n      <td>2025-08-11 22:16:12</td>\n    </tr>\n    <tr>\n      <th>7500000000</th>\n      <th>default</th>\n      <td>14539.090000</td>\n      <td>NaN</td>\n      <td>2025-08-12 21:37:39</td>\n    </tr>\n  </tbody>\n</table>\n<p>125 rows × 3 columns</p>\n</div>","content_type":"text/html"}}}],"key":"S0W3bYxwvE"}],"key":"bvlTwhXQd5"},{"type":"block","children":[],"key":"qc66Wt5UrT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"benchmarks = pd.read_csv(\"output/xmatch_benchmarks.csv\", index_col=[\"Ncpus\", \"Nrows\", \"Nworkers\"])\n\nnworkers = [1, 2, 4, 8, 16, 32, 64, 128, 256, \"default\", \"scale\"]\n\ndef plot_by_nworkers(num_cpus, ax):\n    # Plot execution time vs. number of dask workers for each scale job\n    b = benchmarks.loc[num_cpus]\n\n    for n in b.index.levels[0]:\n        try:\n            # get the relevant benchmarks\n            b_N = b.xs(n, level=\"Nrows\").reset_index()\n        except KeyError:\n            pass\n\n        # convert Nworkers to categorical with desired order\n        b_N[\"Nworkers\"] = pd.Categorical(b_N[\"Nworkers\"],\n                                            categories=[str(x) for x in nworkers],\n                                            ordered=True)\n        b_N = b_N.sort_values(\"Nworkers\")\n\n        # only plot if there is more than 1 data point\n        if len(b_N) > 1:\n            ax.plot(\"Nworkers\", \"time\", marker=\"s\", linestyle=\"-\", data=b_N, label=f\"{n} rows\")\n\n    ax.set(yscale=\"log\", xlabel=\"Nworkers\", ylabel=\"Execution Time (s)\",\n           title=f\"{num_cpus} CPUs\")\n    ax.legend()\n\n\nfig, axs = plt.subplots(1, 4, figsize=(16, 4))\ncpu_counts = benchmarks.index.get_level_values(\"Ncpus\").drop_duplicates().sort_values()\nfor i, ncpu in enumerate(cpu_counts):\n    plot_by_nworkers(ncpu, axs[i])\nfig.tight_layout()","key":"oUHzaAO0W6"},{"type":"output","id":"VwlUEjYDwauEt55LECH1i","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x400 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"f3e771e4c563ccba9f0bc53b4dace0f5","path":"/fornax-demo-notebooks/build/f3e771e4c563ccba9f0bc53b4dace0f5.png"}}}],"key":"jAUOcVOqoY"}],"key":"A2mjpauVKa"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"children":[{"type":"text","value":"These plots show how the cross-match execution time depends on the number of workers used. Broadly, increasing the number of workers up to the number of available CPUs improves the performance. The exception is for smaller cross-matches (","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"tLhkqlXBTE"},{"type":"inlineMath","value":"\\le","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≤</span></span></span></span>","key":"LPWpnGMqwZ"},{"type":"text","value":" 1 million rows) spread across many (","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"CWBMmuqfVQ"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"uWKb1mkIP6"},{"type":"text","value":" 16) CPUs, when the overhead of managing many workers is significant compared to the cross-match time. Increasing the number of workers past the number of CPUs results in somewhat worse performance. Interestingly, the agnostic approach---not manually specifying any ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"KvHPXVwo9I"},{"type":"inlineCode","value":"dask","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"MUHJqzd3Fc"},{"type":"text","value":" parameters, but instead letting ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"O62baJCRM4"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"WRGvka3Wbk"},{"type":"text","value":" use the default ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"TG1AWEAHeO"},{"type":"inlineCode","value":"dask","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"mijyC6grG8"},{"type":"text","value":" behavior---results in the best performance for smaller cross-matches. This indicates that the ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"y1lulGjSFl"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"n0Qyt1VDIC"},{"type":"text","value":" cross-match functions are well-optimized and well-configured for use with ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"G8kckZjiAF"},{"type":"inlineCode","value":"dask","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"w0pDCgudpD"},{"type":"text","value":" without much user oversight, at least on cross-matches with ","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"hU1Vb2M6eZ"},{"type":"inlineMath","value":"\\le","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≤</span></span></span></span>","key":"WY6FMwLlur"},{"type":"text","value":" 1 million rows.","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"ux954APfqs"}],"key":"fNcNZvZ5TM"},{"type":"paragraph","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"For the largest jobs (","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"pDYMeAQUDh"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"yXYWLFDF2I"},{"type":"text","value":" ","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"lNPlg7dgTg"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"dejY2vwVHB"},{"type":"text","value":" 10 million), the default ","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"RDAG0uajPu"},{"type":"inlineCode","value":"dask","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"zl2q1ObTaF"},{"type":"text","value":" configuration performs worse than fixing the number of ","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"Vq8QYHy5io"},{"type":"inlineCode","value":"dask_workers","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"SVrQNQRY5q"},{"type":"text","value":" to be the number of available CPUs. Interestingly, on the XLarge server with 128 CPUs, the 64-worker run performed the best on the large cross-matches. For larger cross-matches, we recommend manually setting the number of workers to be ","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"jP4Q0VdMuv"},{"type":"inlineMath","value":"\\frac{1}{2} N_\\mathrm{CPU} \\leq N_\\mathrm{workers} \\leq N_\\mathrm{CPU}","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>N</mi><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">U</mi></mrow></msub><mo>≤</mo><msub><mi>N</mi><mrow><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">k</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">s</mi></mrow></msub><mo>≤</mo><msub><mi>N</mi><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">U</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{2} N_\\mathrm{CPU} \\leq N_\\mathrm{workers} \\leq N_\\mathrm{CPU}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">CPU</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">workers</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">CPU</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"dmkoJuUlOO"},{"type":"text","value":".","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"Dwg9yUGcN0"}],"key":"XTPe8Lf6xH"},{"type":"paragraph","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"children":[{"type":"text","value":"Given the amount of time it takes to perform the largest cross-matches (","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"RqtYD34xDH"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"HlbkBh72KX"},{"type":"text","value":" ","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"XPo8t7HvkO"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"wI14Oqfi0E"},{"type":"text","value":" 1 billion), these were run only on the XLarge server using the default ","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"e5D5tEvgWp"},{"type":"inlineCode","value":"dask","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"VuSGxKAGFs"},{"type":"text","value":" configuration. The full cross-match of over 7 billion rows took just over 4 hours.","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"vuQVAdbotp"}],"key":"CsR1uhYza7"},{"type":"paragraph","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"children":[{"type":"text","value":"These graphs also illustrate the approximate maximum number of rows that can be cross matched with a given amount of RAM and CPU. Trying to cross-match more rows or use worker configurations that aren’t shown in the plots can lead to one of the following behaviors:","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"key":"ks1w7U4NHH"}],"key":"Ym54KGdefr"},{"type":"paragraph","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"strong","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"Small (4GB RAM, 2 CPU)","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"I8GnL9HQ8O"}],"key":"xXi0WTLvbi"}],"key":"zGYmfa4NNE"},{"type":"paragraph","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"children":[{"type":"text","value":"When attempting ","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"VuUBxn7fiy"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"T4IThbnnqY"},{"type":"text","value":" ","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"mxERfuRAL0"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"tWwacKV3cN"},{"type":"text","value":" 10 million, the cross-match exhibits long compute times, seeming never to finish.","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"afAX1qi4pb"}],"key":"UCCW8MOwPI"},{"type":"paragraph","position":{"start":{"line":279,"column":1},"end":{"line":279,"column":1}},"children":[{"type":"strong","position":{"start":{"line":279,"column":1},"end":{"line":279,"column":1}},"children":[{"type":"text","value":"Medium (16GB RAM, 4 CPU)","position":{"start":{"line":279,"column":1},"end":{"line":279,"column":1}},"key":"dduUowXIC7"}],"key":"pAHrqAPIsi"}],"key":"wvxnuJe197"},{"type":"paragraph","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"children":[{"type":"text","value":"When attempting ","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"key":"J0UNbXZpIk"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"key":"flEPMycTW8"},{"type":"text","value":" ","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"key":"xSx3Jy9OnH"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"Uq8OWCLBaC"},{"type":"text","value":" 100 million, the cross-match exhibits long compute times, seeming never to finish.","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"key":"M4BfAKMQ1x"}],"key":"jsqefn5rwl"},{"type":"paragraph","position":{"start":{"line":283,"column":1},"end":{"line":283,"column":1}},"children":[{"type":"strong","position":{"start":{"line":283,"column":1},"end":{"line":283,"column":1}},"children":[{"type":"text","value":"Large (64GB RAM, 16 CPU)","position":{"start":{"line":283,"column":1},"end":{"line":283,"column":1}},"key":"kQZ89lGuXD"}],"key":"J4RykSHDLL"}],"key":"BUjBOoloGS"},{"type":"paragraph","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"children":[{"type":"text","value":"When attempting ","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"waQuS3bAuO"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"hDssoeKh7T"},{"type":"text","value":" = 100 million with anything but 16 or ‘default’ values for ","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"eo9HRO14kE"},{"type":"inlineCode","value":"dask_workers","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"pkY1hnGpuY"},{"type":"text","value":", the cross-match exhibits long compute times, seeming never to finish. When attempting ","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"zUD1ijQZK2"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"EjYeB0CHZ1"},{"type":"text","value":" ","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"JkLbTmhxSI"},{"type":"inlineMath","value":"\\ge","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span></span></span></span>","key":"MfelZtIwGG"},{"type":"text","value":" 1 billion, the cross-match exhibits long compute times, seeming never to finish.","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"EyqoE7gf2R"}],"key":"ec7jgbZ12D"},{"type":"paragraph","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"children":[{"type":"strong","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"children":[{"type":"text","value":"XLarge (512GB RAM, 128 CPU)","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"key":"aY2A4wDyX9"}],"key":"h1AqHMAaB3"}],"key":"W0uzipqOdC"},{"type":"paragraph","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"children":[{"type":"text","value":"The XLarge environment was able to complete all attempted cross-matches, except that setting ","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"key":"G2fugOSL1w"},{"type":"inlineCode","value":"dask_workers='scale'","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"key":"Ns7qdCH3jQ"},{"type":"text","value":" resulted in the dead worker behavior documented below.","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"key":"svJpOgdAsq"}],"key":"zecuR25oFc"},{"type":"paragraph","position":{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},"children":[{"type":"strong","position":{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},"children":[{"type":"text","value":"Autoscaling on any environment","position":{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},"key":"K9gzEu8dQ7"}],"key":"nchVYinZS1"}],"key":"rs00N7WDlf"},{"type":"paragraph","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"children":[{"type":"text","value":"When using ","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"key":"qW1o7ky7ns"},{"type":"inlineCode","value":"dask_workers='scale'","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"key":"KAq98ZpMXx"},{"type":"text","value":" and scaling up the number of rows to cross-match, eventually you will see logging output from the ","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"key":"t0MIi5DxVh"},{"type":"inlineCode","value":"dask","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"key":"dsyCWKjY56"},{"type":"text","value":" cluster indicating that workers have died and are being respawn. This behavior repeats, and the cross-match never finishes (after being allowed to run for, e.g., an hour when it is expected to finish in 5 minutes).","position":{"start":{"line":293,"column":1},"end":{"line":293,"column":1}},"key":"ykU246Fps8"}],"key":"VmJFxmoCAO"}],"key":"SHbzIPoswW"},{"type":"block","position":{"start":{"line":295,"column":1},"end":{"line":295,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"children":[{"type":"text","value":"5. Summary","position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"key":"qQAwqpl9CN"}],"identifier":"id-5-summary","label":"5. Summary","html_id":"id-5-summary","implicit":true,"key":"RcT4acXuHI"},{"type":"paragraph","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"children":[{"type":"text","value":"The Fornax Science Console is capable of hosting cross-matches between large catalogs using the ","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"b3VgN5aXWw"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"A0W1fOZtsz"},{"type":"text","value":" package. ","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"MFnZYYJoAJ"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"l5WYIiTILL"},{"type":"text","value":" leverages ","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"auB4Sa0gml"},{"type":"inlineCode","value":"dask","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"JRlJ5N5DN4"},{"type":"text","value":" to efficiently plan cross-match jobs using multiple workers, which results in large performance gains, especially as jobs scale up to millions or tens of millions of catalog rows.","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"YERFofDAB3"}],"key":"FDMaNdlHt6"},{"type":"paragraph","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"strong","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"text","value":"Recommendations","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"afRkj0ALLT"}],"key":"qC6rfLRJXR"}],"key":"osOQ71oKj0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":303,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"children":[{"type":"text","value":"For small cross-matches (1 million rows or less) it is acceptable and often optimal to use ","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"iwwpS0yQsv"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"zqOyTYmO34"},{"type":"text","value":"’s default ","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"gzn6Sb4c1o"},{"type":"inlineCode","value":"dask","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"H1zxRIDEUl"},{"type":"text","value":" settings to parallelize jobs. In other words, for these jobs you don’t need to configure or even import ","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"HNoPlD2rKb"},{"type":"inlineCode","value":"dask","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"tGtPaIORWk"},{"type":"text","value":" at all to leverage its parallelization power.","position":{"start":{"line":303,"column":1},"end":{"line":303,"column":1}},"key":"OjPm4wELDR"}],"key":"W2d1yliKF6"},{"type":"listItem","spread":true,"position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"text","value":"For large cross-matches (millions of rows or more), we recommend running in an environment with at least tens of CPUs, and setting the number of ","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"Yhk4OJkAnz"},{"type":"inlineCode","value":"dask","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"euj8efpHBw"},{"type":"text","value":" workers to at least half the number of available CPUs, and up to the number of CPUs. E.g., 128 CPUs with 64 ","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"pBRJo5C4rv"},{"type":"inlineCode","value":"dask","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"NMhBhngDIp"},{"type":"text","value":" workers.","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"rfnfGKNBPv"}],"key":"KuiRkfW24E"},{"type":"listItem","spread":true,"position":{"start":{"line":305,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"text","value":"Cross-matches of 10 million rows or less can, at the time of writing, be completed on the Small Fornax Console using the default ","position":{"start":{"line":305,"column":1},"end":{"line":305,"column":1}},"key":"Cb3lNd3rZ6"},{"type":"inlineCode","value":"dask","position":{"start":{"line":305,"column":1},"end":{"line":305,"column":1}},"key":"fgkeYhZshT"},{"type":"text","value":" configuration. However, given the performance, we recommend the following use scaling:","position":{"start":{"line":305,"column":1},"end":{"line":305,"column":1}},"key":"HIRhiLSewx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":306,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"children":[{"type":"inlineCode","value":"Nrows","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"key":"EvpcRW5Eez"},{"type":"text","value":" ","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"key":"ZH4AjqlveA"},{"type":"inlineMath","value":"\\le 10^6","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\le 10^6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span>","key":"Vs1C71tNk0"},{"type":"text","value":": Small","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"key":"pURSL4G0Ex"}],"key":"L4jWWzHsrX"},{"type":"listItem","spread":true,"position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"children":[{"type":"inlineMath","value":"10^6 <","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo>&lt;</mo></mrow><annotation encoding=\"application/x-tex\">10^6 &lt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span></span></span></span>","key":"k1utJXTcAF"},{"type":"text","value":" ","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"key":"VY3UJMiwrS"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"key":"bUsS2kXZbB"},{"type":"text","value":" ","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"key":"z8TyxPo00Q"},{"type":"inlineMath","value":"< 10^7","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&lt;</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">&lt; 10^7</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span></span></span></span></span></span></span></span></span>","key":"beyqYtTTQ3"},{"type":"text","value":": Medium","position":{"start":{"line":307,"column":1},"end":{"line":307,"column":1}},"key":"XXgT5iZULP"}],"key":"L20jvUjekl"},{"type":"listItem","spread":true,"position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"children":[{"type":"inlineMath","value":"10^7 <","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup><mo>&lt;</mo></mrow><annotation encoding=\"application/x-tex\">10^7 &lt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span></span></span></span>","key":"g69gvntGn0"},{"type":"text","value":" ","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"IMNuqeI4V0"},{"type":"inlineCode","value":"Nrows","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"KmziOdlRlB"},{"type":"text","value":" ","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"hzhyYFJTHv"},{"type":"inlineMath","value":"< 10^8","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&lt;</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">&lt; 10^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span>","key":"p34Cb1JPmd"},{"type":"text","value":": Large","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"Vcw5UYQuu7"}],"key":"NT0KDQ4fvO"},{"type":"listItem","spread":true,"position":{"start":{"line":309,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"inlineCode","value":"Nrows","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"umUTA2IFpT"},{"type":"text","value":" ","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"nUE3H0DN62"},{"type":"inlineMath","value":"> 10^8","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&gt;</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">&gt; 10^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span>","key":"zN0dVGo8ov"},{"type":"text","value":": XLarge","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"cEeHeLMEzQ"}],"key":"lb5pAZpjjO"}],"key":"QJEHn55r7a"}],"key":"XDknMFjg1u"}],"key":"rPAO7qw01I"},{"type":"paragraph","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"children":[{"type":"text","value":"In this tutorial we have cross-matched sections of catalogs in a particular region of sky, where most of the stars likely fall in the same or neighboring sky cells. It would be useful in the future to try this using generic samples of stars from across the entire sky. How different is performance when the catalog rows come from many sky cells instead of just a few? We have also generated the cross-match using ","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"wGaNYoQZ9n"},{"type":"inlineCode","value":"compute","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"UExkfLbY7l"},{"type":"text","value":", which loads the full result into memory, but ","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"jgJbSREck2"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"ccU1UEhk0k"},{"type":"text","value":" supports larger-than-memory cross-matches by writing them directly to disk using ","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"vZXFLVdvCO"},{"type":"inlineCode","value":"to_hats","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"cEzna0ATSq"},{"type":"text","value":". It would also be illustrative to run these benchmarks, and benchmarking a full cross-match between ZTF and Pan-STARRS, by writing the result to disk.","position":{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},"key":"y6nFGdPkSD"}],"key":"yDU3X9Xyq8"},{"type":"paragraph","position":{"start":{"line":313,"column":1},"end":{"line":313,"column":1}},"children":[{"type":"strong","position":{"start":{"line":313,"column":1},"end":{"line":313,"column":1}},"children":[{"type":"text","value":"Other Science Cases","position":{"start":{"line":313,"column":1},"end":{"line":313,"column":1}},"key":"WOERur9NhE"}],"key":"o5C4owTpLI"}],"key":"Hs817YZWfR"},{"type":"paragraph","position":{"start":{"line":315,"column":1},"end":{"line":315,"column":1}},"children":[{"type":"text","value":"The example science case used here is an investigation to collect time-series photometry from sources in and around the Kepler field. The time series associated with the ZTF and Pan-STARRS sources might be used to supplement the Kepler light curves, extend their time baseline, examine how stellar light curves change in different photometric filters, and more. But ","position":{"start":{"line":315,"column":1},"end":{"line":315,"column":1}},"key":"VI9MK6NWys"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":315,"column":1},"end":{"line":315,"column":1}},"key":"sw9kFYrGFM"},{"type":"text","value":" enables other science cases with other catalogs as well. Some examples might be to","position":{"start":{"line":315,"column":1},"end":{"line":315,"column":1}},"key":"MsNq7SATPv"}],"key":"z2qQqKWCHZ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":317,"column":1},"end":{"line":320,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":317,"column":1},"end":{"line":317,"column":1}},"children":[{"type":"text","value":"combine photometric spectral energy distributions (SEDs) of distant galaxies with their spectra to build a training set for machine learning to predict photometric redshifts,","position":{"start":{"line":317,"column":1},"end":{"line":317,"column":1}},"key":"dunoCKY1Ct"}],"key":"dMrIxcepfa"},{"type":"listItem","spread":true,"position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"children":[{"type":"text","value":"combine Gaia’s exquisite astrometry with your favorite star survey to obtain 6D kinematic solutions for your sample stars,","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"MP0hfNEJ8O"}],"key":"EnPNCeCGBJ"},{"type":"listItem","spread":true,"position":{"start":{"line":319,"column":1},"end":{"line":320,"column":1}},"children":[{"type":"text","value":"combine stellar spectroscopic catalogs with light curve rotation period measurements to estimate stellar ages using gyrochronology.","position":{"start":{"line":319,"column":1},"end":{"line":319,"column":1}},"key":"BzMLeV73J1"}],"key":"B9SkBW6UiU"}],"key":"BhqaRHXOdw"}],"key":"G1aPlOoIqt"},{"type":"block","position":{"start":{"line":321,"column":1},"end":{"line":321,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":323,"column":1},"end":{"line":323,"column":1}},"children":[{"type":"text","value":"About this Notebook","position":{"start":{"line":323,"column":1},"end":{"line":323,"column":1}},"key":"mfkVzLKQsE"}],"identifier":"about-this-notebook","label":"About this Notebook","html_id":"about-this-notebook","implicit":true,"key":"s8bfo8REIZ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":325,"column":1},"end":{"line":327,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":325,"column":1},"end":{"line":325,"column":1}},"children":[{"type":"strong","position":{"start":{"line":325,"column":1},"end":{"line":325,"column":1}},"children":[{"type":"text","value":"Authors:","position":{"start":{"line":325,"column":1},"end":{"line":325,"column":1}},"key":"MM6dWmlPlJ"}],"key":"g2zvRxadOb"},{"type":"text","value":" Zach Claytor (Astronomical Data Scientist at Space Telescope Science Institute) and the Fornax team","position":{"start":{"line":325,"column":1},"end":{"line":325,"column":1}},"key":"MeCTwGg0uW"}],"key":"PNlPFODFS5"},{"type":"listItem","spread":true,"position":{"start":{"line":326,"column":1},"end":{"line":327,"column":1}},"children":[{"type":"strong","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"children":[{"type":"text","value":"Contact:","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"oIlEgq6OVs"}],"key":"wJKkUfXbup"},{"type":"text","value":" For help with this notebook, please open a topic in the ","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"m5LxqaARwT"},{"type":"link","url":"https://discourse.fornax.sciencecloud.nasa.gov/","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"children":[{"type":"text","value":"Fornax Community Forum","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"m019XFN3RJ"}],"urlSource":"https://discourse.fornax.sciencecloud.nasa.gov/","key":"XvExxxi6fa"},{"type":"text","value":" “Support” category.","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"irygYWmNuz"}],"key":"pKUrUIBQ3m"}],"key":"liS61jUvrZ"}],"key":"ynISZfsKGk"},{"type":"block","position":{"start":{"line":328,"column":1},"end":{"line":328,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"key":"Wg3jpFdNL3"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"vEdw8KvbS1"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":332,"column":1},"end":{"line":333,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"children":[{"type":"text","value":"This work uses ","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"dNl0SPXZN7"},{"type":"link","url":"https://www.astropy.org/acknowledging.html","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"children":[{"type":"inlineCode","value":"astropy","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"KOu3KdorZW"}],"urlSource":"https://www.astropy.org/acknowledging.html","key":"PEyl2IBx8D"},{"type":"text","value":".","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"U4Vg3KHyAb"}],"key":"rRMuKPdztZ"},{"type":"listItem","spread":true,"position":{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},"children":[{"type":"text","value":"This work uses ","position":{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},"key":"YAi8R8s9ho"},{"type":"link","url":"https://docs.lsdb.io/","position":{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},"children":[{"type":"inlineCode","value":"lsdb","position":{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},"key":"qqLhgILP8f"}],"urlSource":"https://docs.lsdb.io/","key":"Fk2SS8zTiG"},{"type":"text","value":".","position":{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},"key":"ccvZj1wYVj"}],"key":"TxCJH33TUk"}],"key":"C09G5kpVFw"}],"key":"qWWHBNxJeB"}],"key":"W638p4kRgM"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Cross Matching","url":"/readme-3","group":"The Fornax Initiative"}}},"domain":"http://localhost:3000"}